{"ast":null,"code":"import _slicedToArray from \"C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\nimport { LogService } from '../services/log.service.js';\nimport { isString } from './identity.js';\nexport function hasClassnames(el) {\n  for (var _len = arguments.length, classNames = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    classNames[_key - 1] = arguments[_key];\n  }\n\n  return classNames.filter(function (cn) {\n    return el.classList.contains(cn);\n  }).length === classNames.length;\n}\nexport function addClassnames(el) {\n  for (var _len2 = arguments.length, classNames = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    classNames[_key2 - 1] = arguments[_key2];\n  }\n\n  classNames.forEach(function (cn) {\n    el.classList.add(cn);\n  });\n  return el;\n}\nexport function removeClassnames(el) {\n  for (var _len3 = arguments.length, classNames = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    classNames[_key3 - 1] = arguments[_key3];\n  }\n\n  classNames.forEach(function (cn) {\n    el.classList.remove(cn);\n  });\n  return el;\n}\nexport function removeClassnamesUnless(el, classnamesToRemove, classnamesToKeep) {\n  var filteredClassnamesToRemove = classnamesToRemove.filter(function (cn) {\n    return classnamesToKeep.indexOf(cn) < 0;\n  });\n  return removeClassnames.apply(void 0, [el].concat(_toConsumableArray(filteredClassnamesToRemove)));\n}\nexport function updateElementStyles(el) {\n  for (var _len4 = arguments.length, styleTuples = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    styleTuples[_key4 - 1] = arguments[_key4];\n  }\n\n  styleTuples.forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        styleKey = _ref2[0],\n        value = _ref2[1];\n\n    el.style[styleKey] = value;\n  });\n  return el;\n}\nexport function pxToRem(pxValue) {\n  var base = parseInt(document.documentElement.getAttribute('cds-base-font'));\n\n  if (!base) {\n    var prop = window.getComputedStyle(document.body, null).getPropertyValue('--cds-global-typography-base-font-size');\n    base = 16 * parseInt(prop !== '' ? prop : '100%') / 100;\n    document.documentElement.setAttribute('cds-base-font', \"\".concat(base));\n  }\n\n  return \"\".concat(pxValue / base, \"rem\");\n}\nexport function getCssPropertyValue(propertyName) {\n  var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;\n  var pseudoSelectorModifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  try {\n    return getComputedStyle(el, pseudoSelectorModifier).getPropertyValue(propertyName).trim();\n  } catch (e) {\n    LogService.warn('Container element passed to getCustomPropertyValue must be an element.');\n    return '';\n  }\n}\nexport function isCssPropertyName(str) {\n  return !!str && isString(str) && str.slice(0, 2) === '--';\n} //# sourceMappingURL=css.js.map","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@cds/core/internal/utils/css.js"],"names":["LogService","isString","hasClassnames","el","classNames","filter","cn","classList","contains","length","addClassnames","forEach","add","removeClassnames","remove","removeClassnamesUnless","classnamesToRemove","classnamesToKeep","filteredClassnamesToRemove","indexOf","updateElementStyles","styleTuples","styleKey","value","style","pxToRem","pxValue","base","parseInt","document","documentElement","getAttribute","prop","window","getComputedStyle","body","getPropertyValue","setAttribute","getCssPropertyValue","propertyName","pseudoSelectorModifier","trim","e","warn","isCssPropertyName","str","slice"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\r\nimport { LogService } from '../services/log.service.js';\r\nimport { isString } from './identity.js';\r\nexport function hasClassnames(el, ...classNames) {\r\n    return classNames.filter((cn) => el.classList.contains(cn)).length === classNames.length;\r\n}\r\nexport function addClassnames(el, ...classNames) {\r\n    classNames.forEach((cn) => {\r\n        el.classList.add(cn);\r\n    });\r\n    return el;\r\n}\r\nexport function removeClassnames(el, ...classNames) {\r\n    classNames.forEach((cn) => {\r\n        el.classList.remove(cn);\r\n    });\r\n    return el;\r\n}\r\nexport function removeClassnamesUnless(el, classnamesToRemove, classnamesToKeep) {\r\n    const filteredClassnamesToRemove = classnamesToRemove.filter(cn => classnamesToKeep.indexOf(cn) < 0);\r\n    return removeClassnames(el, ...filteredClassnamesToRemove);\r\n}\r\nexport function updateElementStyles(el, ...styleTuples) {\r\n    styleTuples.forEach(([styleKey, value]) => {\r\n        el.style[styleKey] = value;\r\n    });\r\n    return el;\r\n}\r\nexport function pxToRem(pxValue) {\r\n    let base = parseInt(document.documentElement.getAttribute('cds-base-font'));\r\n    if (!base) {\r\n        const prop = window\r\n            .getComputedStyle(document.body, null)\r\n            .getPropertyValue('--cds-global-typography-base-font-size');\r\n        base = (16 * parseInt(prop !== '' ? prop : '100%')) / 100;\r\n        document.documentElement.setAttribute('cds-base-font', `${base}`);\r\n    }\r\n    return `${pxValue / base}rem`;\r\n}\r\nexport function getCssPropertyValue(propertyName, el = document.body, pseudoSelectorModifier = null) {\r\n    try {\r\n        return getComputedStyle(el, pseudoSelectorModifier).getPropertyValue(propertyName).trim();\r\n    }\r\n    catch (e) {\r\n        LogService.warn('Container element passed to getCustomPropertyValue must be an element.');\r\n        return '';\r\n    }\r\n}\r\nexport function isCssPropertyName(str) {\r\n    return !!str && isString(str) && str.slice(0, 2) === '--';\r\n}\r\n//# sourceMappingURL=css.js.map"]},"metadata":{},"sourceType":"module"}