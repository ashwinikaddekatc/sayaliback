{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at\r\n * http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at\r\n * http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\n\n/**\r\n *\r\n * Main lit-html module.\r\n *\r\n * Main exports:\r\n *\r\n * -  [[html]]\r\n * -  [[svg]]\r\n * -  [[render]]\r\n *\r\n * @packageDocumentation\r\n */\n\n/**\r\n * Do not remove this comment; it keeps typedoc from misplacing the module\r\n * docs.\r\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js'; // TODO(justinfagnani): remove line when we get NodePart moving methods\n\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js'; // IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\r\n * Interprets a template literal as an HTML template that can efficiently\r\n * render to and update a container.\r\n */\n\n\nexport var html = function html(strings) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  return new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n};\n/**\r\n * Interprets a template literal as an SVG template that can efficiently\r\n * render to and update a container.\r\n */\n\nexport var svg = function svg(strings) {\n  for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    values[_key2 - 1] = arguments[_key2];\n  }\n\n  return new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n}; //# sourceMappingURL=lit-html.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/lit-html/lit-html.js"],"names":["defaultTemplateProcessor","SVGTemplateResult","TemplateResult","DefaultTemplateProcessor","directive","isDirective","removeNodes","reparentNodes","noChange","nothing","AttributeCommitter","AttributePart","BooleanAttributePart","EventPart","isIterable","isPrimitive","NodePart","PropertyCommitter","PropertyPart","parts","render","templateCaches","templateFactory","TemplateInstance","createMarker","isTemplatePartActive","Template","window","push","html","strings","values","svg"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,SAASA,wBAAT,QAAyC,qCAAzC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,0BAAlD;AACA,SAASC,wBAAT,EAAmCH,wBAAnC,QAAmE,qCAAnE;AACA,SAASI,SAAT,EAAoBC,WAApB,QAAuC,oBAAvC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,cAA3C;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,eAAlC;AACA,SAASC,kBAAT,EAA6BC,aAA7B,EAA4CC,oBAA5C,EAAkEC,SAAlE,EAA6EC,UAA7E,EAAyFC,WAAzF,EAAsGC,QAAtG,EAAgHC,iBAAhH,EAAmIC,YAAnI,QAAuJ,gBAAvJ;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,2BAAhD;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAAStB,iBAAT,EAA4BC,cAA5B,QAAkD,0BAAlD;AACA,SAASsB,YAAT,EAAuBC,oBAAvB,EAA6CC,QAA7C,QAA6D,mBAA7D,C,CACA;AACA;AACA;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,GAACA,MAAM,CAAC,iBAAD,CAAN,KAA8BA,MAAM,CAAC,iBAAD,CAAN,GAA4B,EAA1D,CAAD,EAAgEC,IAAhE,CAAqE,OAArE;AACH;AACD;AACA;AACA;AACA;;;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,OAAD;AAAA,oCAAaC,MAAb;AAAaA,IAAAA,MAAb;AAAA;;AAAA,SAAwB,IAAI7B,cAAJ,CAAmB4B,OAAnB,EAA4BC,MAA5B,EAAoC,MAApC,EAA4C/B,wBAA5C,CAAxB;AAAA,CAAb;AACP;AACA;AACA;AACA;;AACA,OAAO,IAAMgC,GAAG,GAAG,SAANA,GAAM,CAACF,OAAD;AAAA,qCAAaC,MAAb;AAAaA,IAAAA,MAAb;AAAA;;AAAA,SAAwB,IAAI9B,iBAAJ,CAAsB6B,OAAtB,EAA+BC,MAA/B,EAAuC,KAAvC,EAA8C/B,wBAA9C,CAAxB;AAAA,CAAZ,C,CACP","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at\r\n * http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at\r\n * http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n/**\r\n *\r\n * Main lit-html module.\r\n *\r\n * Main exports:\r\n *\r\n * -  [[html]]\r\n * -  [[svg]]\r\n * -  [[render]]\r\n *\r\n * @packageDocumentation\r\n */\r\n/**\r\n * Do not remove this comment; it keeps typedoc from misplacing the module\r\n * docs.\r\n */\r\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\r\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\r\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\r\nexport { directive, isDirective } from './lib/directive.js';\r\n// TODO(justinfagnani): remove line when we get NodePart moving methods\r\nexport { removeNodes, reparentNodes } from './lib/dom.js';\r\nexport { noChange, nothing } from './lib/part.js';\r\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\r\nexport { parts, render } from './lib/render.js';\r\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\r\nexport { TemplateInstance } from './lib/template-instance.js';\r\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\r\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\r\n// IMPORTANT: do not change the property name or the assignment expression.\r\n// This line will be used in regexes to search for lit-html usage.\r\n// TODO(justinfagnani): inject version number at build time\r\nif (typeof window !== 'undefined') {\r\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\r\n}\r\n/**\r\n * Interprets a template literal as an HTML template that can efficiently\r\n * render to and update a container.\r\n */\r\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\r\n/**\r\n * Interprets a template literal as an SVG template that can efficiently\r\n * render to and update a container.\r\n */\r\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\r\n//# sourceMappingURL=lit-html.js.map"]},"metadata":{},"sourceType":"module"}