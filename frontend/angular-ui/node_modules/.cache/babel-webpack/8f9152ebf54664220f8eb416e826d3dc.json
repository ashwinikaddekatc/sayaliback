{"ast":null,"code":"import _classCallCheck from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\r\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\nimport { deepClone } from '../utils/identity.js';\nvar keyCodeRegistry = new Map([['arrow-left', 'ArrowLeft'], ['arrow-right', 'ArrowRight'], ['arrow-up', 'ArrowUp'], ['arrow-down', 'ArrowDown'], ['tab', 'Tab'], ['enter', 'Enter'], ['escape', 'Escape'], ['space', ' '], ['home', 'Home'], ['end', 'End']]);\n/**\r\n * KeyCodes is a static class that gives users the ability to lookup and even store\r\n * keycodes for their applications.\r\n *\r\n * @privateRemarks\r\n *\r\n * The key codes dictionary/hashmap is private to this module. There is no way to access it directly\r\n * outside of the module.\r\n *\r\n */\n\nexport var KeyCodeService = /*#__PURE__*/function () {\n  function KeyCodeService() {\n    _classCallCheck(this, KeyCodeService);\n  }\n\n  _createClass(KeyCodeService, null, [{\n    key: \"keycodes\",\n    get:\n    /**\r\n     * keycodes() returns a clone of the key codes dictionary/hashmap, not the actual registry.\r\n     * Performing actions on the return value of the keycodes getter will not be reflected in the\r\n     * actual keycodes dictionary!\r\n     */\n    function get() {\n      return deepClone(keyCodeRegistry);\n    }\n  }, {\n    key: \"add\",\n    value: function add(keycode, code) {\n      keyCodeRegistry.set(keycode, code);\n    }\n  }, {\n    key: \"has\",\n    value: function has(keycode) {\n      return keyCodeRegistry.has(keycode);\n    }\n  }, {\n    key: \"getCode\",\n    value: function getCode(keycode) {\n      var keyCodeRegistry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.keycodes;\n      return getKeycodeFromRegistry(keycode, keyCodeRegistry);\n    }\n  }]);\n\n  return KeyCodeService;\n}();\nexport function getKeycodeFromRegistry(codeToLookup, registry) {\n  return registry.get(codeToLookup) || '';\n} //# sourceMappingURL=keycodes.service.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@cds/core/internal/services/keycodes.service.js"],"names":["deepClone","keyCodeRegistry","Map","KeyCodeService","keycode","code","set","has","keycodes","getKeycodeFromRegistry","codeToLookup","registry","get"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,sBAA1B;AACA,IAAMC,eAAe,GAAG,IAAIC,GAAJ,CAAQ,CAC5B,CAAC,YAAD,EAAe,WAAf,CAD4B,EAE5B,CAAC,aAAD,EAAgB,YAAhB,CAF4B,EAG5B,CAAC,UAAD,EAAa,SAAb,CAH4B,EAI5B,CAAC,YAAD,EAAe,WAAf,CAJ4B,EAK5B,CAAC,KAAD,EAAQ,KAAR,CAL4B,EAM5B,CAAC,OAAD,EAAU,OAAV,CAN4B,EAO5B,CAAC,QAAD,EAAW,QAAX,CAP4B,EAQ5B,CAAC,OAAD,EAAU,GAAV,CAR4B,EAS5B,CAAC,MAAD,EAAS,MAAT,CAT4B,EAU5B,CAAC,KAAD,EAAQ,KAAR,CAV4B,CAAR,CAAxB;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAaC,cAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACI;AACJ;AACA;AACA;AACA;AACI,mBAAsB;AAClB,aAAOH,SAAS,CAACC,eAAD,CAAhB;AACH;AARL;AAAA;AAAA,WASI,aAAWG,OAAX,EAAoBC,IAApB,EAA0B;AACtBJ,MAAAA,eAAe,CAACK,GAAhB,CAAoBF,OAApB,EAA6BC,IAA7B;AACH;AAXL;AAAA;AAAA,WAYI,aAAWD,OAAX,EAAoB;AAChB,aAAOH,eAAe,CAACM,GAAhB,CAAoBH,OAApB,CAAP;AACH;AAdL;AAAA;AAAA,WAeI,iBAAeA,OAAf,EAAyD;AAAA,UAAjCH,eAAiC,uEAAf,KAAKO,QAAU;AACrD,aAAOC,sBAAsB,CAACL,OAAD,EAAUH,eAAV,CAA7B;AACH;AAjBL;;AAAA;AAAA;AAmBA,OAAO,SAASQ,sBAAT,CAAgCC,YAAhC,EAA8CC,QAA9C,EAAwD;AAC3D,SAAOA,QAAQ,CAACC,GAAT,CAAaF,YAAb,KAA8B,EAArC;AACH,C,CACD","sourcesContent":["/*\r\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\r\nimport { deepClone } from '../utils/identity.js';\r\nconst keyCodeRegistry = new Map([\r\n    ['arrow-left', 'ArrowLeft'],\r\n    ['arrow-right', 'ArrowRight'],\r\n    ['arrow-up', 'ArrowUp'],\r\n    ['arrow-down', 'ArrowDown'],\r\n    ['tab', 'Tab'],\r\n    ['enter', 'Enter'],\r\n    ['escape', 'Escape'],\r\n    ['space', ' '],\r\n    ['home', 'Home'],\r\n    ['end', 'End'],\r\n]);\r\n/**\r\n * KeyCodes is a static class that gives users the ability to lookup and even store\r\n * keycodes for their applications.\r\n *\r\n * @privateRemarks\r\n *\r\n * The key codes dictionary/hashmap is private to this module. There is no way to access it directly\r\n * outside of the module.\r\n *\r\n */\r\nexport class KeyCodeService {\r\n    /**\r\n     * keycodes() returns a clone of the key codes dictionary/hashmap, not the actual registry.\r\n     * Performing actions on the return value of the keycodes getter will not be reflected in the\r\n     * actual keycodes dictionary!\r\n     */\r\n    static get keycodes() {\r\n        return deepClone(keyCodeRegistry);\r\n    }\r\n    static add(keycode, code) {\r\n        keyCodeRegistry.set(keycode, code);\r\n    }\r\n    static has(keycode) {\r\n        return keyCodeRegistry.has(keycode);\r\n    }\r\n    static getCode(keycode, keyCodeRegistry = this.keycodes) {\r\n        return getKeycodeFromRegistry(keycode, keyCodeRegistry);\r\n    }\r\n}\r\nexport function getKeycodeFromRegistry(codeToLookup, registry) {\r\n    return registry.get(codeToLookup) || '';\r\n}\r\n//# sourceMappingURL=keycodes.service.js.map"]},"metadata":{},"sourceType":"module"}