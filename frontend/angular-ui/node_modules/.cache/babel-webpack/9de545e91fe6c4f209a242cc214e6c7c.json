{"ast":null,"code":"import _slicedToArray from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport includes from 'ramda/es/includes.js';\nimport without from 'ramda/es/without.js';\nimport { isStringAndNotNilOrEmpty } from './identity.js';\n/**\n * We are not going to be opinionated about the use of the disabled attribute here.\n * Browsers will manage that on their own. The focus of this is to determine whether\n * or not a tabindex should be set on an element to make it programmatically\n * focusable.\n *\n */\n\nexport function isFocusable(element) {\n  var elementTagName = element.tagName.toLowerCase();\n\n  switch (elementTagName) {\n    case 'input':\n    case 'button':\n    case 'select':\n    case 'textarea':\n    case 'object':\n      return true;\n\n    case 'a':\n    case 'area':\n      return element.hasAttribute('href');\n\n    case 'audio':\n    case 'video':\n      return element.hasAttribute('controls');\n\n    default:\n      // we are not going to get into invalid values sent to the\n      // tabindex attr. users have control of that and should avoid\n      // setting tabindex to weird/unsupported values.\n      return element.hasAttribute('tabindex');\n  }\n}\nexport function getElementWidth(element) {\n  var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'px';\n\n  if (element) {\n    return element.getBoundingClientRect ? element.getBoundingClientRect().width + unit : '';\n  }\n\n  return '';\n}\nexport function getElementWidthUnless(element, unless) {\n  if (!unless) {\n    return getElementWidth(element);\n  }\n\n  return '';\n}\nexport function isHTMLElement(el) {\n  return !!el && el instanceof HTMLElement;\n}\nexport function hasAttributeAndIsNotEmpty(element, attribute) {\n  return !!element && element.hasAttribute(attribute) && isStringAndNotNilOrEmpty(element.getAttribute(attribute));\n}\nexport function setOrRemoveAttribute(element, attrTuple, test) {\n  var _attrTuple = _slicedToArray(attrTuple, 2),\n      attribute = _attrTuple[0],\n      value = _attrTuple[1];\n\n  if (test()) {\n    setAttributes(element, [attribute, value]);\n  } else {\n    removeAttributes(element, attribute);\n  }\n}\nexport function setAttributes(element) {\n  if (element) {\n    for (var _len = arguments.length, attributeTuples = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      attributeTuples[_key - 1] = arguments[_key];\n    }\n\n    attributeTuples.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          attr = _ref2[0],\n          val = _ref2[1];\n\n      if (val === false || val === null) {\n        element.removeAttribute(attr);\n      } else {\n        element.setAttribute(attr, val + '');\n      }\n    });\n  }\n}\nexport function removeAttributes(element) {\n  if (element) {\n    for (var _len2 = arguments.length, attrs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      attrs[_key2 - 1] = arguments[_key2];\n    }\n\n    attrs.forEach(function (attr) {\n      element.removeAttribute(attr);\n    });\n  }\n}\nexport function addAttributeValue(element, attr, value) {\n  if (element) {\n    var currentAttrVal = element.getAttribute(attr);\n\n    if (!currentAttrVal) {\n      element.setAttribute(attr, value);\n    } else if (!includes(value, currentAttrVal.split(' '))) {\n      // add it only if it is not already there\n      element.setAttribute(attr, currentAttrVal + ' ' + value);\n    }\n  }\n}\nexport function removeAttributeValue(element, attr, value) {\n  if (element) {\n    var currentAttrVal = element.getAttribute(attr);\n\n    if (currentAttrVal) {\n      // remove the specified value from the list of values currently set\n      var attrValues = without([value], currentAttrVal.split(' '));\n      var newAttrValue = attrValues.join(' ');\n\n      if (newAttrValue) {\n        element.setAttribute(attr, newAttrValue);\n      } else {\n        element.removeAttribute(attr);\n      }\n    }\n  }\n}\nexport function assignSlotNames() {\n  for (var _len3 = arguments.length, slotTuples = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    slotTuples[_key3] = arguments[_key3];\n  }\n\n  slotTuples.forEach(function (slotTuple) {\n    var _slotTuple = _slicedToArray(slotTuple, 2),\n        el = _slotTuple[0],\n        slotName = _slotTuple[1];\n\n    if (el) {\n      setAttributes(el, ['slot', slotName]);\n    }\n  });\n}\nexport function listenForAttributeChange(element, attrName, fn) {\n  var observer = new MutationObserver(function (mutations) {\n    if (mutations.find(function (m) {\n      return m.attributeName === attrName;\n    })) {\n      fn(element.getAttribute(attrName));\n    }\n  });\n  observer.observe(element, {\n    attributes: true\n  });\n  return observer;\n}\nexport function isVisible(element) {\n  return !!element && (element === null || element === void 0 ? void 0 : element.offsetHeight) > 0 && (element === null || element === void 0 ? void 0 : element.hasAttribute('hidden')) === false;\n}\nexport function spanWrapper(nodeList) {\n  Array.from(nodeList).filter(function (node) {\n    return node.textContent && node.textContent.trim().length > 0 && node.nodeType === 3 && node.parentElement;\n  }).forEach(function (node) {\n    var spanWrapper = document.createElement('span');\n    node.after(spanWrapper);\n    spanWrapper.appendChild(node);\n  });\n}\nexport function queryChildFromLightOrShadowDom(hostEl, selector) {\n  var _a;\n\n  if (!selector) {\n    return null;\n  }\n\n  return hostEl.querySelector(selector) || ((_a = hostEl === null || hostEl === void 0 ? void 0 : hostEl.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(selector)) || null;\n} //# sourceMappingURL=dom.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@cds/core/internal/utils/dom.js"],"names":["includes","without","isStringAndNotNilOrEmpty","isFocusable","element","elementTagName","tagName","toLowerCase","hasAttribute","getElementWidth","unit","getBoundingClientRect","width","getElementWidthUnless","unless","isHTMLElement","el","HTMLElement","hasAttributeAndIsNotEmpty","attribute","getAttribute","setOrRemoveAttribute","attrTuple","test","value","setAttributes","removeAttributes","attributeTuples","forEach","attr","val","removeAttribute","setAttribute","attrs","addAttributeValue","currentAttrVal","split","removeAttributeValue","attrValues","newAttrValue","join","assignSlotNames","slotTuples","slotTuple","slotName","listenForAttributeChange","attrName","fn","observer","MutationObserver","mutations","find","m","attributeName","observe","attributes","isVisible","offsetHeight","spanWrapper","nodeList","Array","from","filter","node","textContent","trim","length","nodeType","parentElement","document","createElement","after","appendChild","queryChildFromLightOrShadowDom","hostEl","selector","_a","querySelector","shadowRoot"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport includes from 'ramda/es/includes.js';\nimport without from 'ramda/es/without.js';\nimport { isStringAndNotNilOrEmpty } from './identity.js';\n/**\n * We are not going to be opinionated about the use of the disabled attribute here.\n * Browsers will manage that on their own. The focus of this is to determine whether\n * or not a tabindex should be set on an element to make it programmatically\n * focusable.\n *\n */\nexport function isFocusable(element) {\n    const elementTagName = element.tagName.toLowerCase();\n    switch (elementTagName) {\n        case 'input':\n        case 'button':\n        case 'select':\n        case 'textarea':\n        case 'object':\n            return true;\n        case 'a':\n        case 'area':\n            return element.hasAttribute('href');\n        case 'audio':\n        case 'video':\n            return element.hasAttribute('controls');\n        default:\n            // we are not going to get into invalid values sent to the\n            // tabindex attr. users have control of that and should avoid\n            // setting tabindex to weird/unsupported values.\n            return element.hasAttribute('tabindex');\n    }\n}\nexport function getElementWidth(element, unit = 'px') {\n    if (element) {\n        return element.getBoundingClientRect ? element.getBoundingClientRect().width + unit : '';\n    }\n    return '';\n}\nexport function getElementWidthUnless(element, unless) {\n    if (!unless) {\n        return getElementWidth(element);\n    }\n    return '';\n}\nexport function isHTMLElement(el) {\n    return !!el && el instanceof HTMLElement;\n}\nexport function hasAttributeAndIsNotEmpty(element, attribute) {\n    return !!element && element.hasAttribute(attribute) && isStringAndNotNilOrEmpty(element.getAttribute(attribute));\n}\nexport function setOrRemoveAttribute(element, attrTuple, test) {\n    const [attribute, value] = attrTuple;\n    if (test()) {\n        setAttributes(element, [attribute, value]);\n    }\n    else {\n        removeAttributes(element, attribute);\n    }\n}\nexport function setAttributes(element, ...attributeTuples) {\n    if (element) {\n        attributeTuples.forEach(([attr, val]) => {\n            if (val === false || val === null) {\n                element.removeAttribute(attr);\n            }\n            else {\n                element.setAttribute(attr, val + '');\n            }\n        });\n    }\n}\nexport function removeAttributes(element, ...attrs) {\n    if (element) {\n        attrs.forEach(attr => {\n            element.removeAttribute(attr);\n        });\n    }\n}\nexport function addAttributeValue(element, attr, value) {\n    if (element) {\n        const currentAttrVal = element.getAttribute(attr);\n        if (!currentAttrVal) {\n            element.setAttribute(attr, value);\n        }\n        else if (!includes(value, currentAttrVal.split(' '))) {\n            // add it only if it is not already there\n            element.setAttribute(attr, currentAttrVal + ' ' + value);\n        }\n    }\n}\nexport function removeAttributeValue(element, attr, value) {\n    if (element) {\n        const currentAttrVal = element.getAttribute(attr);\n        if (currentAttrVal) {\n            // remove the specified value from the list of values currently set\n            const attrValues = without([value], currentAttrVal.split(' '));\n            const newAttrValue = attrValues.join(' ');\n            if (newAttrValue) {\n                element.setAttribute(attr, newAttrValue);\n            }\n            else {\n                element.removeAttribute(attr);\n            }\n        }\n    }\n}\nexport function assignSlotNames(...slotTuples) {\n    slotTuples.forEach(slotTuple => {\n        const [el, slotName] = slotTuple;\n        if (el) {\n            setAttributes(el, ['slot', slotName]);\n        }\n    });\n}\nexport function listenForAttributeChange(element, attrName, fn) {\n    const observer = new MutationObserver(mutations => {\n        if (mutations.find(m => m.attributeName === attrName)) {\n            fn(element.getAttribute(attrName));\n        }\n    });\n    observer.observe(element, { attributes: true });\n    return observer;\n}\nexport function isVisible(element) {\n    return !!element && (element === null || element === void 0 ? void 0 : element.offsetHeight) > 0 && (element === null || element === void 0 ? void 0 : element.hasAttribute('hidden')) === false;\n}\nexport function spanWrapper(nodeList) {\n    Array.from(nodeList)\n        .filter(node => node.textContent && node.textContent.trim().length > 0 && node.nodeType === 3 && node.parentElement)\n        .forEach(node => {\n        const spanWrapper = document.createElement('span');\n        node.after(spanWrapper);\n        spanWrapper.appendChild(node);\n    });\n}\nexport function queryChildFromLightOrShadowDom(hostEl, selector) {\n    var _a;\n    if (!selector) {\n        return null;\n    }\n    return hostEl.querySelector(selector) || ((_a = hostEl === null || hostEl === void 0 ? void 0 : hostEl.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector(selector)) || null;\n}\n//# sourceMappingURL=dom.js.map"]},"metadata":{},"sourceType":"module"}