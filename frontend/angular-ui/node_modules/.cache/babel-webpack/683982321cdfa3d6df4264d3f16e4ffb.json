{"ast":null,"code":"import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\r\n * Copies an object.\r\n *\r\n * @private\r\n * @param {*} value The value to be copied\r\n * @param {Array} refFrom Array containing the source references\r\n * @param {Array} refTo Array containing the copied source references\r\n * @param {Boolean} deep Whether or not to perform deep cloning.\r\n * @return {*} The copied value.\r\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/ramda/es/internal/_clone.js"],"names":["_cloneRegExp","type","_clone","value","refFrom","refTo","deep","copy","copiedValue","len","length","idx","key","Date","valueOf"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,IAAvC,EAA6C;AAC1D,MAAIC,IAAI,GAAG,SAASA,IAAT,CAAcC,WAAd,EAA2B;AACpC,QAAIC,GAAG,GAAGL,OAAO,CAACM,MAAlB;AACA,QAAIC,GAAG,GAAG,CAAV;;AAEA,WAAOA,GAAG,GAAGF,GAAb,EAAkB;AAChB,UAAIN,KAAK,KAAKC,OAAO,CAACO,GAAD,CAArB,EAA4B;AAC1B,eAAON,KAAK,CAACM,GAAD,CAAZ;AACD;;AAEDA,MAAAA,GAAG,IAAI,CAAP;AACD;;AAEDP,IAAAA,OAAO,CAACO,GAAG,GAAG,CAAP,CAAP,GAAmBR,KAAnB;AACAE,IAAAA,KAAK,CAACM,GAAG,GAAG,CAAP,CAAL,GAAiBH,WAAjB;;AAEA,SAAK,IAAII,GAAT,IAAgBT,KAAhB,EAAuB;AACrBK,MAAAA,WAAW,CAACI,GAAD,CAAX,GAAmBN,IAAI,GAAGJ,MAAM,CAACC,KAAK,CAACS,GAAD,CAAN,EAAaR,OAAb,EAAsBC,KAAtB,EAA6B,IAA7B,CAAT,GAA8CF,KAAK,CAACS,GAAD,CAA1E;AACD;;AAED,WAAOJ,WAAP;AACD,GApBD;;AAsBA,UAAQP,IAAI,CAACE,KAAD,CAAZ;AACE,SAAK,QAAL;AACE,aAAOI,IAAI,CAAC,EAAD,CAAX;;AAEF,SAAK,OAAL;AACE,aAAOA,IAAI,CAAC,EAAD,CAAX;;AAEF,SAAK,MAAL;AACE,aAAO,IAAIM,IAAJ,CAASV,KAAK,CAACW,OAAN,EAAT,CAAP;;AAEF,SAAK,QAAL;AACE,aAAOd,YAAY,CAACG,KAAD,CAAnB;;AAEF;AACE,aAAOA,KAAP;AAdJ;AAgBD","sourcesContent":["import _cloneRegExp from \"./_cloneRegExp.js\";\r\nimport type from \"../type.js\";\r\n/**\r\n * Copies an object.\r\n *\r\n * @private\r\n * @param {*} value The value to be copied\r\n * @param {Array} refFrom Array containing the source references\r\n * @param {Array} refTo Array containing the copied source references\r\n * @param {Boolean} deep Whether or not to perform deep cloning.\r\n * @return {*} The copied value.\r\n */\r\n\r\nexport default function _clone(value, refFrom, refTo, deep) {\r\n  var copy = function copy(copiedValue) {\r\n    var len = refFrom.length;\r\n    var idx = 0;\r\n\r\n    while (idx < len) {\r\n      if (value === refFrom[idx]) {\r\n        return refTo[idx];\r\n      }\r\n\r\n      idx += 1;\r\n    }\r\n\r\n    refFrom[idx + 1] = value;\r\n    refTo[idx + 1] = copiedValue;\r\n\r\n    for (var key in value) {\r\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\r\n    }\r\n\r\n    return copiedValue;\r\n  };\r\n\r\n  switch (type(value)) {\r\n    case 'Object':\r\n      return copy({});\r\n\r\n    case 'Array':\r\n      return copy([]);\r\n\r\n    case 'Date':\r\n      return new Date(value.valueOf());\r\n\r\n    case 'RegExp':\r\n      return _cloneRegExp(value);\r\n\r\n    default:\r\n      return value;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}