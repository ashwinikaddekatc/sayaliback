{"ast":null,"code":"import _createClass from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { ContentChild, Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, NgModule, Output, Renderer2 } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nvar DROP_EFFECTS = [\"move\", \"copy\", \"link\"];\nvar CUSTOM_MIME_TYPE = \"application/x-dnd\";\nvar JSON_MIME_TYPE = \"application/json\";\nvar MSIE_MIME_TYPE = \"Text\";\n/**\n * @param {?} mimeType\n * @return {?}\n */\n\nfunction mimeTypeIsCustom(mimeType) {\n  return mimeType.substr(0, CUSTOM_MIME_TYPE.length) === CUSTOM_MIME_TYPE;\n}\n/**\n * @param {?} event\n * @return {?}\n */\n\n\nfunction getWellKnownMimeType(event) {\n  var\n  /** @type {?} */\n  types = event.dataTransfer.types; // IE 9 workaround.\n\n  if (!types) {\n    return MSIE_MIME_TYPE;\n  }\n\n  for (var\n  /** @type {?} */\n  i = 0; i < types.length; i++) {\n    if (types[i] === MSIE_MIME_TYPE || types[i] === JSON_MIME_TYPE || mimeTypeIsCustom(types[i])) {\n      return types[i];\n    }\n  }\n\n  return null;\n}\n/**\n * @param {?} event\n * @param {?} data\n * @param {?} effectAllowed\n * @return {?}\n */\n\n\nfunction setDragData(event, data, effectAllowed) {\n  // Internet Explorer and Microsoft Edge don't support custom mime types, see design doc:\n  // https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\n  var\n  /** @type {?} */\n  mimeType = CUSTOM_MIME_TYPE + (data.type ? \"-\" + data.type : \"\");\n  var\n  /** @type {?} */\n  dataString = JSON.stringify(data);\n\n  try {\n    event.dataTransfer.setData(mimeType, dataString);\n  } catch (e) {\n    //   Setting a custom MIME type did not work, we are probably in IE or Edge.\n    try {\n      event.dataTransfer.setData(JSON_MIME_TYPE, dataString);\n    } catch (e) {\n      //   We are in Internet Explorer and can only use the Text MIME type. Also note that IE\n      //   does not allow changing the cursor in the dragover event, therefore we have to choose\n      //   the one we want to display now by setting effectAllowed.\n      var\n      /** @type {?} */\n      effectsAllowed = filterEffects(DROP_EFFECTS, effectAllowed);\n      event.dataTransfer.effectAllowed = effectsAllowed[0];\n      event.dataTransfer.setData(MSIE_MIME_TYPE, dataString);\n    }\n  }\n}\n/**\n * @param {?} event\n * @param {?} dragIsExternal\n * @return {?}\n */\n\n\nfunction getDropData(event, dragIsExternal) {\n  // check if the mime type is well known\n  var\n  /** @type {?} */\n  mimeType = getWellKnownMimeType(event); // drag did not originate from [dndDraggable]\n\n  if (dragIsExternal === true) {\n    if (mimeType !== null && mimeTypeIsCustom(mimeType)) {\n      // the type of content is well known and safe to handle\n      return JSON.parse(event.dataTransfer.getData(mimeType));\n    } // the contained data is unknown, let user handle it\n\n\n    return {};\n  } // the type of content is well known and safe to handle\n\n\n  return JSON.parse(event.dataTransfer.getData(mimeType));\n}\n/**\n * @param {?} effects\n * @param {?} allowed\n * @return {?}\n */\n\n\nfunction filterEffects(effects, allowed) {\n  if (allowed === \"all\") {\n    return effects;\n  }\n\n  return effects.filter(function (effect) {\n    return allowed.toLowerCase().indexOf(effect) !== -1;\n  });\n}\n/**\n * @param {?} parentElement\n * @param {?} childElement\n * @return {?}\n */\n\n\nfunction getDirectChildElement(parentElement, childElement) {\n  var\n  /** @type {?} */\n  directChild = childElement;\n\n  while (directChild.parentNode !== parentElement) {\n    // reached root node without finding given parent\n    if (!directChild.parentNode) {\n      return null;\n    }\n\n    directChild = directChild.parentNode;\n  }\n\n  return (\n    /** @type {?} */\n    directChild\n  );\n}\n/**\n * @param {?} event\n * @param {?} element\n * @param {?} horizontal\n * @return {?}\n */\n\n\nfunction shouldPositionPlaceholderBeforeElement(event, element, horizontal) {\n  var\n  /** @type {?} */\n  bounds = element.getBoundingClientRect(); // If the pointer is in the upper half of the list item element,\n  // we position the placeholder before the list item, otherwise after it.\n\n  if (horizontal) {\n    return event.clientX < bounds.left + bounds.width / 2;\n  }\n\n  return event.clientY < bounds.top + bounds.height / 2;\n}\n/**\n * @param {?} event\n * @param {?} dragImage\n * @return {?}\n */\n\n\nfunction calculateDragImageOffset(event, dragImage) {\n  var\n  /** @type {?} */\n  dragImageComputedStyle = window.getComputedStyle(dragImage);\n  var\n  /** @type {?} */\n  paddingTop = parseFloat(dragImageComputedStyle.paddingTop) || 0;\n  var\n  /** @type {?} */\n  paddingLeft = parseFloat(dragImageComputedStyle.paddingLeft) || 0;\n  var\n  /** @type {?} */\n  borderTop = parseFloat(dragImageComputedStyle.borderTopWidth) || 0;\n  var\n  /** @type {?} */\n  borderLeft = parseFloat(dragImageComputedStyle.borderLeftWidth) || 0;\n  return {\n    x: event.offsetX + paddingLeft + borderLeft,\n    y: event.offsetY + paddingTop + borderTop\n  };\n}\n/**\n * @param {?} event\n * @param {?} dragImage\n * @param {?} offsetFunction\n * @return {?}\n */\n\n\nfunction setDragImage(event, dragImage, offsetFunction) {\n  var\n  /** @type {?} */\n  offset = offsetFunction(event, dragImage) || {\n    x: 0,\n    y: 0\n  };\n  event.dataTransfer.setDragImage(dragImage, offset.x, offset.y);\n}\n\nvar _dndState = {\n  isDragging: false,\n  dropEffect: \"none\",\n  effectAllowed: \"all\",\n  type: undefined\n};\n/**\n * @param {?} event\n * @param {?} effectAllowed\n * @param {?} type\n * @return {?}\n */\n\nfunction startDrag(event, effectAllowed, type) {\n  _dndState.isDragging = true;\n  _dndState.dropEffect = \"none\";\n  _dndState.effectAllowed = effectAllowed;\n  _dndState.type = type;\n  event.dataTransfer.effectAllowed = effectAllowed;\n}\n/**\n * @return {?}\n */\n\n\nfunction endDrag() {\n  _dndState.isDragging = false;\n  _dndState.dropEffect = undefined;\n  _dndState.effectAllowed = undefined;\n  _dndState.type = undefined;\n}\n/**\n * @param {?} event\n * @param {?} dropEffect\n * @return {?}\n */\n\n\nfunction setDropEffect(event, dropEffect) {\n  if (_dndState.isDragging === true) {\n    _dndState.dropEffect = dropEffect;\n  }\n\n  event.dataTransfer.dropEffect = dropEffect;\n}\n/**\n * @param {?} event\n * @param {?=} effectAllowed\n * @return {?}\n */\n\n\nfunction getDropEffect(event, effectAllowed) {\n  var\n  /** @type {?} */\n  effects = DROP_EFFECTS;\n  effects = filterEffects(effects,\n  /** @type {?} */\n  event.dataTransfer.effectAllowed);\n\n  if (_dndState.isDragging === true) {\n    effects = filterEffects(effects, _dndState.effectAllowed);\n  }\n\n  if (effectAllowed) {\n    effects = filterEffects(effects, effectAllowed);\n  } // MacOS automatically filters dataTransfer.effectAllowed depending on the modifier keys,\n  // therefore the following modifier keys will only affect other operating systems.\n\n\n  if (effects.length === 0) {\n    return \"none\";\n  }\n\n  if (event.ctrlKey && effects.indexOf(\"copy\") !== -1) {\n    return \"copy\";\n  }\n\n  if (event.altKey && effects.indexOf(\"link\") !== -1) {\n    return \"link\";\n  }\n\n  return (\n    /** @type {?} */\n    effects[0]\n  );\n}\n/**\n * @param {?} event\n * @return {?}\n */\n\n\nfunction getDndType(event) {\n  if (_dndState.isDragging === true) {\n    return _dndState.type;\n  }\n\n  var\n  /** @type {?} */\n  mimeType = getWellKnownMimeType(event);\n\n  if (mimeType === null) {\n    return undefined;\n  }\n\n  if (mimeType === MSIE_MIME_TYPE || mimeType === JSON_MIME_TYPE) {\n    return undefined;\n  }\n\n  return mimeType.substr(CUSTOM_MIME_TYPE.length + 1) || undefined;\n}\n/**\n * @return {?}\n */\n\n\nfunction isExternalDrag() {\n  return _dndState.isDragging === false;\n}\n\nvar dndState = _dndState;\n\nvar DndDragImageRefDirective =\n/**\n * @param {?} parent\n * @param {?} elementRef\n */\nfunction DndDragImageRefDirective(parent, elementRef) {\n  _classCallCheck(this, DndDragImageRefDirective);\n\n  parent.registerDragImage(elementRef);\n};\n\nDndDragImageRefDirective.ɵfac = function DndDragImageRefDirective_Factory(t) {\n  return new (t || DndDragImageRefDirective)(ɵngcc0.ɵɵdirectiveInject(DndDraggableDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nDndDragImageRefDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DndDragImageRefDirective,\n  selectors: [[\"\", \"dndDragImageRef\", \"\"]]\n});\n/**\n * @nocollapse\n */\n\nDndDragImageRefDirective.ctorParameters = function () {\n  return [{\n    type: DndDraggableDirective\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndDragImageRefDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[dndDragImageRef]\"\n    }]\n  }], function () {\n    return [{\n      type: DndDraggableDirective\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n\nvar DndDraggableDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} elementRef\n   * @param {?} renderer\n   */\n  function DndDraggableDirective(elementRef, renderer) {\n    _classCallCheck(this, DndDraggableDirective);\n\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.dndEffectAllowed = \"copy\";\n    this.dndDraggingClass = \"dndDragging\";\n    this.dndDraggingSourceClass = \"dndDraggingSource\";\n    this.dndDraggableDisabledClass = \"dndDraggableDisabled\";\n    this.dndDragImageOffsetFunction = calculateDragImageOffset;\n    this.dndStart = new EventEmitter();\n    this.dndEnd = new EventEmitter();\n    this.dndMoved = new EventEmitter();\n    this.dndCopied = new EventEmitter();\n    this.dndLinked = new EventEmitter();\n    this.dndCanceled = new EventEmitter();\n    this.draggable = true;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(DndDraggableDirective, [{\n    key: \"dndDisableIf\",\n    set: function set(value) {\n      this.draggable = !value;\n\n      if (this.draggable) {\n        this.renderer.removeClass(this.elementRef.nativeElement, this.dndDraggableDisabledClass);\n      } else {\n        this.renderer.addClass(this.elementRef.nativeElement, this.dndDraggableDisabledClass);\n      }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(event) {\n      var _this = this;\n\n      if (this.draggable === false) {\n        return false;\n      } // check if there is dnd handle and if the dnd handle was used to start the drag\n\n\n      if (typeof this.dndHandle !== \"undefined\" && typeof event._dndUsingHandle === \"undefined\") {\n        return false;\n      } // initialize global state\n\n\n      startDrag(event, this.dndEffectAllowed, this.dndType);\n      setDragData(event, {\n        data: this.dndDraggable,\n        type: this.dndType\n      }, dndState.effectAllowed);\n      this.determineDragImage(); // set dragging css class prior to setDragImage so styles are applied before\n      // TODO breaking change: add class to elementRef rather than drag image which could be another element\n\n      this.renderer.addClass(this.dragImage, this.dndDraggingClass); // set custom dragimage if present\n      // set dragimage if drag is started from dndHandle\n\n      if (typeof this.dndDragImageElementRef !== \"undefined\" || typeof event._dndUsingHandle !== \"undefined\") {\n        setDragImage(event, this.dragImage, this.dndDragImageOffsetFunction);\n      } // add dragging source css class on first drag event\n\n\n      var\n      /** @type {?} */\n      unregister = this.renderer.listen(this.elementRef.nativeElement, \"drag\", function () {\n        _this.renderer.addClass(_this.elementRef.nativeElement, _this.dndDraggingSourceClass);\n\n        unregister();\n      });\n      this.dndStart.emit(event);\n      event.stopPropagation();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(event) {\n      var _this2 = this;\n\n      // get drop effect from custom stored state as its not reliable across browsers\n      var\n      /** @type {?} */\n      dropEffect = dndState.dropEffect;\n      var\n      /** @type {?} */\n      dropEffectEmitter;\n\n      switch (dropEffect) {\n        case \"copy\":\n          dropEffectEmitter = this.dndCopied;\n          break;\n\n        case \"link\":\n          dropEffectEmitter = this.dndLinked;\n          break;\n\n        case \"move\":\n          dropEffectEmitter = this.dndMoved;\n          break;\n\n        default:\n          dropEffectEmitter = this.dndCanceled;\n          break;\n      }\n\n      dropEffectEmitter.emit(event);\n      this.dndEnd.emit(event); // reset global state\n\n      endDrag();\n      this.renderer.removeClass(this.dragImage, this.dndDraggingClass); // IE9 special hammering\n\n      window.setTimeout(function () {\n        _this2.renderer.removeClass(_this2.elementRef.nativeElement, _this2.dndDraggingSourceClass);\n      }, 0);\n      event.stopPropagation();\n    }\n    /**\n     * @param {?} handle\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerDragHandle\",\n    value: function registerDragHandle(handle) {\n      this.dndHandle = handle;\n    }\n    /**\n     * @param {?} elementRef\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerDragImage\",\n    value: function registerDragImage(elementRef) {\n      this.dndDragImageElementRef = elementRef;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"determineDragImage\",\n    value: function determineDragImage() {\n      // evaluate custom drag image existence\n      if (typeof this.dndDragImageElementRef !== \"undefined\") {\n        this.dragImage =\n        /** @type {?} */\n        this.dndDragImageElementRef.nativeElement;\n      } else {\n        this.dragImage = this.elementRef.nativeElement;\n      }\n    }\n  }]);\n\n  return DndDraggableDirective;\n}();\n\nDndDraggableDirective.ɵfac = function DndDraggableDirective_Factory(t) {\n  return new (t || DndDraggableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nDndDraggableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DndDraggableDirective,\n  selectors: [[\"\", \"dndDraggable\", \"\"]],\n  hostVars: 1,\n  hostBindings: function DndDraggableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"dragstart\", function DndDraggableDirective_dragstart_HostBindingHandler($event) {\n        return ctx.onDragStart($event);\n      })(\"dragend\", function DndDraggableDirective_dragend_HostBindingHandler($event) {\n        return ctx.onDragEnd($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"draggable\", ctx.draggable);\n    }\n  },\n  inputs: {\n    dndEffectAllowed: \"dndEffectAllowed\",\n    dndDraggingClass: \"dndDraggingClass\",\n    dndDraggingSourceClass: \"dndDraggingSourceClass\",\n    dndDraggableDisabledClass: \"dndDraggableDisabledClass\",\n    dndDragImageOffsetFunction: \"dndDragImageOffsetFunction\",\n    dndDisableIf: \"dndDisableIf\",\n    dndDraggable: \"dndDraggable\",\n    dndType: \"dndType\"\n  },\n  outputs: {\n    dndStart: \"dndStart\",\n    dndEnd: \"dndEnd\",\n    dndMoved: \"dndMoved\",\n    dndCopied: \"dndCopied\",\n    dndLinked: \"dndLinked\",\n    dndCanceled: \"dndCanceled\"\n  }\n});\n/**\n * @nocollapse\n */\n\nDndDraggableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nDndDraggableDirective.propDecorators = {\n  'dndDraggable': [{\n    type: Input\n  }],\n  'dndEffectAllowed': [{\n    type: Input\n  }],\n  'dndType': [{\n    type: Input\n  }],\n  'dndDraggingClass': [{\n    type: Input\n  }],\n  'dndDraggingSourceClass': [{\n    type: Input\n  }],\n  'dndDraggableDisabledClass': [{\n    type: Input\n  }],\n  'dndDragImageOffsetFunction': [{\n    type: Input\n  }],\n  'dndStart': [{\n    type: Output\n  }],\n  'dndEnd': [{\n    type: Output\n  }],\n  'dndMoved': [{\n    type: Output\n  }],\n  'dndCopied': [{\n    type: Output\n  }],\n  'dndLinked': [{\n    type: Output\n  }],\n  'dndCanceled': [{\n    type: Output\n  }],\n  'draggable': [{\n    type: HostBinding,\n    args: [\"attr.draggable\"]\n  }],\n  'dndDisableIf': [{\n    type: Input\n  }],\n  'onDragStart': [{\n    type: HostListener,\n    args: [\"dragstart\", [\"$event\"]]\n  }],\n  'onDragEnd': [{\n    type: HostListener,\n    args: [\"dragend\", [\"$event\"]]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndDraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[dndDraggable]\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    dndEffectAllowed: [{\n      type: Input\n    }],\n    dndDraggingClass: [{\n      type: Input\n    }],\n    dndDraggingSourceClass: [{\n      type: Input\n    }],\n    dndDraggableDisabledClass: [{\n      type: Input\n    }],\n    dndDragImageOffsetFunction: [{\n      type: Input\n    }],\n    dndStart: [{\n      type: Output\n    }],\n    dndEnd: [{\n      type: Output\n    }],\n    dndMoved: [{\n      type: Output\n    }],\n    dndCopied: [{\n      type: Output\n    }],\n    dndLinked: [{\n      type: Output\n    }],\n    dndCanceled: [{\n      type: Output\n    }],\n    draggable: [{\n      type: HostBinding,\n      args: [\"attr.draggable\"]\n    }],\n    dndDisableIf: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragStart: [{\n      type: HostListener,\n      args: [\"dragstart\", [\"$event\"]]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEnd: [{\n      type: HostListener,\n      args: [\"dragend\", [\"$event\"]]\n    }],\n    dndDraggable: [{\n      type: Input\n    }],\n    dndType: [{\n      type: Input\n    }]\n  });\n})();\n\nvar DndPlaceholderRefDirective =\n/**\n * @param {?} elementRef\n */\nfunction DndPlaceholderRefDirective(elementRef) {\n  _classCallCheck(this, DndPlaceholderRefDirective);\n\n  this.elementRef = elementRef;\n};\n\nDndPlaceholderRefDirective.ɵfac = function DndPlaceholderRefDirective_Factory(t) {\n  return new (t || DndPlaceholderRefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nDndPlaceholderRefDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DndPlaceholderRefDirective,\n  selectors: [[\"\", \"dndPlaceholderRef\", \"\"]]\n});\n/**\n * @nocollapse\n */\n\nDndPlaceholderRefDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndPlaceholderRefDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[dndPlaceholderRef]\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n\nvar DndDropzoneDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} elementRef\n   * @param {?} renderer\n   */\n  function DndDropzoneDirective(elementRef, renderer) {\n    _classCallCheck(this, DndDropzoneDirective);\n\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.dndAllowExternal = false;\n    this.dndHorizontal = false;\n    this.dndDragoverClass = \"dndDragover\";\n    this.dndDropzoneDisabledClass = \"dndDropzoneDisabled\";\n    this.dndDragover = new EventEmitter();\n    this.dndDrop = new EventEmitter();\n    this.placeholder = null;\n    this.disabled = false;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(DndDropzoneDirective, [{\n    key: \"dndDisableIf\",\n    set: function set(value) {\n      this.disabled = !!value;\n\n      if (this.disabled) {\n        this.renderer.addClass(this.elementRef.nativeElement, this.dndDropzoneDisabledClass);\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, this.dndDropzoneDisabledClass);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.placeholder = this.tryGetPlaceholder();\n\n      if (this.placeholder !== null) {\n        this.placeholder.remove();\n      }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragEnter\",\n    value: function onDragEnter(event) {\n      // check if another dropzone is activated\n      if (event._dndDropzoneActive === true) {\n        this.cleanupDragoverState();\n        return;\n      } // set as active if the target element is inside this dropzone\n\n\n      if (typeof event._dndDropzoneActive === \"undefined\") {\n        var\n        /** @type {?} */\n        newTarget = document.elementFromPoint(event.clientX, event.clientY);\n\n        if (this.elementRef.nativeElement.contains(newTarget)) {\n          event._dndDropzoneActive = true;\n        }\n      } // check if this drag event is allowed to drop on this dropzone\n\n\n      var\n      /** @type {?} */\n      type = getDndType(event);\n\n      if (this.isDropAllowed(type) === false) {\n        return;\n      } // allow the dragenter\n\n\n      event.preventDefault();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(event) {\n      // check if this drag event is allowed to drop on this dropzone\n      var\n      /** @type {?} */\n      type = getDndType(event);\n\n      if (this.isDropAllowed(type) === false) {\n        return;\n      }\n\n      this.checkAndUpdatePlaceholderPosition(event);\n      var\n      /** @type {?} */\n      dropEffect = getDropEffect(event, this.dndEffectAllowed);\n\n      if (dropEffect === \"none\") {\n        this.cleanupDragoverState();\n        return;\n      } // allow the dragover\n\n\n      event.preventDefault(); // set the drop effect\n\n      setDropEffect(event, dropEffect);\n      this.dndDragover.emit(event);\n      this.renderer.addClass(this.elementRef.nativeElement, this.dndDragoverClass);\n      event.stopPropagation();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      try {\n        // check if this drag event is allowed to drop on this dropzone\n        var\n        /** @type {?} */\n        type = getDndType(event);\n\n        if (this.isDropAllowed(type) === false) {\n          return;\n        }\n\n        var\n        /** @type {?} */\n        data = getDropData(event, isExternalDrag());\n\n        if (this.isDropAllowed(data.type) === false) {\n          return;\n        } // signal custom drop handling\n\n\n        event.preventDefault();\n        var\n        /** @type {?} */\n        dropEffect = getDropEffect(event);\n        setDropEffect(event, dropEffect);\n\n        if (dropEffect === \"none\") {\n          return;\n        }\n\n        var\n        /** @type {?} */\n        dropIndex = this.getPlaceholderIndex();\n        this.dndDrop.emit({\n          event: event,\n          dropEffect: dropEffect,\n          isExternal: isExternalDrag(),\n          data: data.data,\n          index: dropIndex,\n          type: type\n        });\n        event.stopPropagation();\n      } finally {\n        this.cleanupDragoverState();\n      }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave(event) {\n      // check if still inside this dropzone and not yet handled by another dropzone\n      if (typeof event._dndDropzoneActive === \"undefined\") {\n        var\n        /** @type {?} */\n        newTarget = document.elementFromPoint(event.clientX, event.clientY);\n\n        if (this.elementRef.nativeElement.contains(newTarget)) {\n          event._dndDropzoneActive = true;\n          return;\n        }\n      }\n\n      this.cleanupDragoverState(); // cleanup drop effect when leaving dropzone\n\n      setDropEffect(event, \"none\");\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"tryGetPlaceholder\",\n    value: function tryGetPlaceholder() {\n      if (typeof this.dndPlaceholderRef !== \"undefined\") {\n        return (\n          /** @type {?} */\n          this.dndPlaceholderRef.elementRef.nativeElement\n        );\n      } // TODO nasty workaround needed because if ng-container / template is used @ContentChild() or DI will fail because\n      // of wrong context see angular bug https://github.com/angular/angular/issues/13517\n\n\n      return this.elementRef.nativeElement.querySelector(\"[dndPlaceholderRef]\");\n    }\n    /**\n     * @param {?=} type\n     * @return {?}\n     */\n\n  }, {\n    key: \"isDropAllowed\",\n    value: function isDropAllowed(type) {\n      // dropzone is disabled -> deny it\n      if (this.disabled === true) {\n        return false;\n      } // if drag did not start from our directive\n      // and external drag sources are not allowed -> deny it\n\n\n      if (isExternalDrag() === true && this.dndAllowExternal === false) {\n        return false;\n      } // no filtering by types -> allow it\n\n\n      if (!this.dndDropzone) {\n        return true;\n      } // no type set -> allow it\n\n\n      if (!type) {\n        return true;\n      }\n\n      if (Array.isArray(this.dndDropzone) === false) {\n        throw new Error(\"dndDropzone: bound value to [dndDropzone] must be an array!\");\n      } // if dropzone contains type -> allow it\n\n\n      return this.dndDropzone.indexOf(type) !== -1;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"checkAndUpdatePlaceholderPosition\",\n    value: function checkAndUpdatePlaceholderPosition(event) {\n      if (this.placeholder === null) {\n        return;\n      } // make sure the placeholder is in the DOM\n\n\n      if (this.placeholder.parentNode !== this.elementRef.nativeElement) {\n        this.renderer.appendChild(this.elementRef.nativeElement, this.placeholder);\n      } // update the position if the event originates from a child element of the dropzone\n\n\n      var\n      /** @type {?} */\n      directChild = getDirectChildElement(this.elementRef.nativeElement,\n      /** @type {?} */\n      event.target); // early exit if no direct child or direct child is placeholder\n\n      if (directChild === null || directChild === this.placeholder) {\n        return;\n      }\n\n      var\n      /** @type {?} */\n      positionPlaceholderBeforeDirectChild = shouldPositionPlaceholderBeforeElement(event, directChild, this.dndHorizontal);\n\n      if (positionPlaceholderBeforeDirectChild) {\n        // do insert before only if necessary\n        if (directChild.previousSibling !== this.placeholder) {\n          this.renderer.insertBefore(this.elementRef.nativeElement, this.placeholder, directChild);\n        }\n      } else {\n        // do insert after only if necessary\n        if (directChild.nextSibling !== this.placeholder) {\n          this.renderer.insertBefore(this.elementRef.nativeElement, this.placeholder, directChild.nextSibling);\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getPlaceholderIndex\",\n    value: function getPlaceholderIndex() {\n      if (this.placeholder === null) {\n        return undefined;\n      }\n\n      var\n      /** @type {?} */\n      element = this.elementRef.nativeElement;\n      return Array.prototype.indexOf.call(element.children, this.placeholder);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"cleanupDragoverState\",\n    value: function cleanupDragoverState() {\n      this.renderer.removeClass(this.elementRef.nativeElement, this.dndDragoverClass);\n\n      if (this.placeholder !== null) {\n        this.placeholder.remove();\n      }\n    }\n  }]);\n\n  return DndDropzoneDirective;\n}();\n\nDndDropzoneDirective.ɵfac = function DndDropzoneDirective_Factory(t) {\n  return new (t || DndDropzoneDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nDndDropzoneDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DndDropzoneDirective,\n  selectors: [[\"\", \"dndDropzone\", \"\"]],\n  contentQueries: function DndDropzoneDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DndPlaceholderRefDirective, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dndPlaceholderRef = _t.first);\n    }\n  },\n  hostBindings: function DndDropzoneDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"dragenter\", function DndDropzoneDirective_dragenter_HostBindingHandler($event) {\n        return ctx.onDragEnter($event);\n      })(\"dragover\", function DndDropzoneDirective_dragover_HostBindingHandler($event) {\n        return ctx.onDragOver($event);\n      })(\"drop\", function DndDropzoneDirective_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      })(\"dragleave\", function DndDropzoneDirective_dragleave_HostBindingHandler($event) {\n        return ctx.onDragLeave($event);\n      });\n    }\n  },\n  inputs: {\n    dndAllowExternal: \"dndAllowExternal\",\n    dndHorizontal: \"dndHorizontal\",\n    dndDragoverClass: \"dndDragoverClass\",\n    dndDropzoneDisabledClass: \"dndDropzoneDisabledClass\",\n    dndDisableIf: \"dndDisableIf\",\n    dndDropzone: \"dndDropzone\",\n    dndEffectAllowed: \"dndEffectAllowed\"\n  },\n  outputs: {\n    dndDragover: \"dndDragover\",\n    dndDrop: \"dndDrop\"\n  }\n});\n/**\n * @nocollapse\n */\n\nDndDropzoneDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nDndDropzoneDirective.propDecorators = {\n  'dndDropzone': [{\n    type: Input\n  }],\n  'dndEffectAllowed': [{\n    type: Input\n  }],\n  'dndAllowExternal': [{\n    type: Input\n  }],\n  'dndHorizontal': [{\n    type: Input\n  }],\n  'dndDragoverClass': [{\n    type: Input\n  }],\n  'dndDropzoneDisabledClass': [{\n    type: Input\n  }],\n  'dndDragover': [{\n    type: Output\n  }],\n  'dndDrop': [{\n    type: Output\n  }],\n  'dndPlaceholderRef': [{\n    type: ContentChild,\n    args: [DndPlaceholderRefDirective]\n  }],\n  'dndDisableIf': [{\n    type: Input\n  }],\n  'onDragEnter': [{\n    type: HostListener,\n    args: [\"dragenter\", [\"$event\"]]\n  }],\n  'onDragOver': [{\n    type: HostListener,\n    args: [\"dragover\", [\"$event\"]]\n  }],\n  'onDrop': [{\n    type: HostListener,\n    args: [\"drop\", [\"$event\"]]\n  }],\n  'onDragLeave': [{\n    type: HostListener,\n    args: [\"dragleave\", [\"$event\"]]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndDropzoneDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[dndDropzone]\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    dndAllowExternal: [{\n      type: Input\n    }],\n    dndHorizontal: [{\n      type: Input\n    }],\n    dndDragoverClass: [{\n      type: Input\n    }],\n    dndDropzoneDisabledClass: [{\n      type: Input\n    }],\n    dndDragover: [{\n      type: Output\n    }],\n    dndDrop: [{\n      type: Output\n    }],\n    dndDisableIf: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEnter: [{\n      type: HostListener,\n      args: [\"dragenter\", [\"$event\"]]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n      type: HostListener,\n      args: [\"dragover\", [\"$event\"]]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n      type: HostListener,\n      args: [\"drop\", [\"$event\"]]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n      type: HostListener,\n      args: [\"dragleave\", [\"$event\"]]\n    }],\n    dndDropzone: [{\n      type: Input\n    }],\n    dndEffectAllowed: [{\n      type: Input\n    }],\n    dndPlaceholderRef: [{\n      type: ContentChild,\n      args: [DndPlaceholderRefDirective]\n    }]\n  });\n})();\n\nvar DndHandleDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} parent\n   */\n  function DndHandleDirective(parent) {\n    _classCallCheck(this, DndHandleDirective);\n\n    this.draggable = true;\n    parent.registerDragHandle(this);\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _createClass(DndHandleDirective, [{\n    key: \"onDragEvent\",\n    value: function onDragEvent(event) {\n      event._dndUsingHandle = true;\n    }\n  }]);\n\n  return DndHandleDirective;\n}();\n\nDndHandleDirective.ɵfac = function DndHandleDirective_Factory(t) {\n  return new (t || DndHandleDirective)(ɵngcc0.ɵɵdirectiveInject(DndDraggableDirective));\n};\n\nDndHandleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DndHandleDirective,\n  selectors: [[\"\", \"dndHandle\", \"\"]],\n  hostVars: 1,\n  hostBindings: function DndHandleDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"dragstart\", function DndHandleDirective_dragstart_HostBindingHandler($event) {\n        return ctx.onDragEvent($event);\n      })(\"dragend\", function DndHandleDirective_dragend_HostBindingHandler($event) {\n        return ctx.onDragEvent($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"draggable\", ctx.draggable);\n    }\n  }\n});\n/**\n * @nocollapse\n */\n\nDndHandleDirective.ctorParameters = function () {\n  return [{\n    type: DndDraggableDirective\n  }];\n};\n\nDndHandleDirective.propDecorators = {\n  'draggable': [{\n    type: HostBinding,\n    args: [\"attr.draggable\"]\n  }],\n  'onDragEvent': [{\n    type: HostListener,\n    args: [\"dragstart\", [\"$event\"]]\n  }, {\n    type: HostListener,\n    args: [\"dragend\", [\"$event\"]]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: \"[dndHandle]\"\n    }]\n  }], function () {\n    return [{\n      type: DndDraggableDirective\n    }];\n  }, {\n    draggable: [{\n      type: HostBinding,\n      args: [\"attr.draggable\"]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEvent: [{\n      type: HostListener,\n      args: [\"dragstart\", [\"$event\"]]\n    }, {\n      type: HostListener,\n      args: [\"dragend\", [\"$event\"]]\n    }]\n  });\n})();\n\nvar DndModule = function DndModule() {\n  _classCallCheck(this, DndModule);\n};\n\nDndModule.ɵfac = function DndModule_Factory(t) {\n  return new (t || DndModule)();\n};\n\nDndModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DndModule\n});\nDndModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n/**\n * @nocollapse\n */\n\nDndModule.ctorParameters = function () {\n  return [];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DndModule, {\n    declarations: function declarations() {\n      return [DndDraggableDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDragImageRefDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [DndDraggableDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDragImageRefDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [DndDraggableDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDragImageRefDirective],\n      exports: [DndDraggableDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDragImageRefDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DndDragImageRefDirective, DndDraggableDirective, DndPlaceholderRefDirective, DndDropzoneDirective, DndHandleDirective, DndModule }; //# sourceMappingURL=ngx-drag-drop.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/ngx-drag-drop/ngx-drag-drop.js"],"names":["ContentChild","Directive","ElementRef","EventEmitter","HostBinding","HostListener","Input","NgModule","Output","Renderer2","CommonModule","ɵngcc0","DROP_EFFECTS","CUSTOM_MIME_TYPE","JSON_MIME_TYPE","MSIE_MIME_TYPE","mimeTypeIsCustom","mimeType","substr","length","getWellKnownMimeType","event","types","dataTransfer","i","setDragData","data","effectAllowed","type","dataString","JSON","stringify","setData","e","effectsAllowed","filterEffects","getDropData","dragIsExternal","parse","getData","effects","allowed","filter","effect","toLowerCase","indexOf","getDirectChildElement","parentElement","childElement","directChild","parentNode","shouldPositionPlaceholderBeforeElement","element","horizontal","bounds","getBoundingClientRect","clientX","left","width","clientY","top","height","calculateDragImageOffset","dragImage","dragImageComputedStyle","window","getComputedStyle","paddingTop","parseFloat","paddingLeft","borderTop","borderTopWidth","borderLeft","borderLeftWidth","x","offsetX","y","offsetY","setDragImage","offsetFunction","offset","_dndState","isDragging","dropEffect","undefined","startDrag","endDrag","setDropEffect","getDropEffect","ctrlKey","altKey","getDndType","isExternalDrag","dndState","DndDragImageRefDirective","parent","elementRef","registerDragImage","ɵfac","DndDragImageRefDirective_Factory","t","ɵɵdirectiveInject","DndDraggableDirective","ɵdir","ɵɵdefineDirective","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","args","selector","renderer","dndEffectAllowed","dndDraggingClass","dndDraggingSourceClass","dndDraggableDisabledClass","dndDragImageOffsetFunction","dndStart","dndEnd","dndMoved","dndCopied","dndLinked","dndCanceled","draggable","value","removeClass","nativeElement","addClass","dndHandle","_dndUsingHandle","dndType","dndDraggable","determineDragImage","dndDragImageElementRef","unregister","listen","emit","stopPropagation","dropEffectEmitter","setTimeout","handle","DndDraggableDirective_Factory","hostVars","hostBindings","DndDraggableDirective_HostBindings","rf","ctx","ɵɵlistener","DndDraggableDirective_dragstart_HostBindingHandler","$event","onDragStart","DndDraggableDirective_dragend_HostBindingHandler","onDragEnd","ɵɵattribute","inputs","dndDisableIf","outputs","propDecorators","DndPlaceholderRefDirective","DndPlaceholderRefDirective_Factory","DndDropzoneDirective","dndAllowExternal","dndHorizontal","dndDragoverClass","dndDropzoneDisabledClass","dndDragover","dndDrop","placeholder","disabled","tryGetPlaceholder","remove","_dndDropzoneActive","cleanupDragoverState","newTarget","document","elementFromPoint","contains","isDropAllowed","preventDefault","checkAndUpdatePlaceholderPosition","dropIndex","getPlaceholderIndex","isExternal","index","dndPlaceholderRef","querySelector","dndDropzone","Array","isArray","Error","appendChild","target","positionPlaceholderBeforeDirectChild","previousSibling","insertBefore","nextSibling","prototype","call","children","DndDropzoneDirective_Factory","contentQueries","DndDropzoneDirective_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","DndDropzoneDirective_HostBindings","DndDropzoneDirective_dragenter_HostBindingHandler","onDragEnter","DndDropzoneDirective_dragover_HostBindingHandler","onDragOver","DndDropzoneDirective_drop_HostBindingHandler","onDrop","DndDropzoneDirective_dragleave_HostBindingHandler","onDragLeave","DndHandleDirective","registerDragHandle","DndHandleDirective_Factory","DndHandleDirective_HostBindings","DndHandleDirective_dragstart_HostBindingHandler","onDragEvent","DndHandleDirective_dragend_HostBindingHandler","DndModule","DndModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["import { ContentChild, Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, NgModule, Output, Renderer2 } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nconst DROP_EFFECTS = ([\"move\", \"copy\", \"link\"]);\nconst CUSTOM_MIME_TYPE = \"application/x-dnd\";\nconst JSON_MIME_TYPE = \"application/json\";\nconst MSIE_MIME_TYPE = \"Text\";\n/**\n * @param {?} mimeType\n * @return {?}\n */\nfunction mimeTypeIsCustom(mimeType) {\n    return mimeType.substr(0, CUSTOM_MIME_TYPE.length) === CUSTOM_MIME_TYPE;\n}\n/**\n * @param {?} event\n * @return {?}\n */\nfunction getWellKnownMimeType(event) {\n    const /** @type {?} */ types = event.dataTransfer.types;\n    // IE 9 workaround.\n    if (!types) {\n        return MSIE_MIME_TYPE;\n    }\n    for (let /** @type {?} */ i = 0; i < types.length; i++) {\n        if (types[i] === MSIE_MIME_TYPE\n            || types[i] === JSON_MIME_TYPE\n            || mimeTypeIsCustom(types[i])) {\n            return types[i];\n        }\n    }\n    return null;\n}\n/**\n * @param {?} event\n * @param {?} data\n * @param {?} effectAllowed\n * @return {?}\n */\nfunction setDragData(event, data, effectAllowed) {\n    // Internet Explorer and Microsoft Edge don't support custom mime types, see design doc:\n    // https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\n    const /** @type {?} */ mimeType = CUSTOM_MIME_TYPE + (data.type ? (\"-\" + data.type) : \"\");\n    const /** @type {?} */ dataString = JSON.stringify(data);\n    try {\n        event.dataTransfer.setData(mimeType, dataString);\n    }\n    catch (e) {\n        //   Setting a custom MIME type did not work, we are probably in IE or Edge.\n        try {\n            event.dataTransfer.setData(JSON_MIME_TYPE, dataString);\n        }\n        catch (e) {\n            //   We are in Internet Explorer and can only use the Text MIME type. Also note that IE\n            //   does not allow changing the cursor in the dragover event, therefore we have to choose\n            //   the one we want to display now by setting effectAllowed.\n            const /** @type {?} */ effectsAllowed = filterEffects(DROP_EFFECTS, effectAllowed);\n            event.dataTransfer.effectAllowed = effectsAllowed[0];\n            event.dataTransfer.setData(MSIE_MIME_TYPE, dataString);\n        }\n    }\n}\n/**\n * @param {?} event\n * @param {?} dragIsExternal\n * @return {?}\n */\nfunction getDropData(event, dragIsExternal) {\n    // check if the mime type is well known\n    const /** @type {?} */ mimeType = getWellKnownMimeType(event);\n    // drag did not originate from [dndDraggable]\n    if (dragIsExternal === true) {\n        if (mimeType !== null\n            && mimeTypeIsCustom(mimeType)) {\n            // the type of content is well known and safe to handle\n            return JSON.parse(event.dataTransfer.getData(mimeType));\n        }\n        // the contained data is unknown, let user handle it\n        return {};\n    }\n    // the type of content is well known and safe to handle\n    return JSON.parse(event.dataTransfer.getData(mimeType));\n}\n/**\n * @param {?} effects\n * @param {?} allowed\n * @return {?}\n */\nfunction filterEffects(effects, allowed) {\n    if (allowed === \"all\") {\n        return effects;\n    }\n    return effects.filter(function (effect) {\n        return allowed.toLowerCase().indexOf(effect) !== -1;\n    });\n}\n/**\n * @param {?} parentElement\n * @param {?} childElement\n * @return {?}\n */\nfunction getDirectChildElement(parentElement, childElement) {\n    let /** @type {?} */ directChild = childElement;\n    while (directChild.parentNode !== parentElement) {\n        // reached root node without finding given parent\n        if (!directChild.parentNode) {\n            return null;\n        }\n        directChild = directChild.parentNode;\n    }\n    return /** @type {?} */ (directChild);\n}\n/**\n * @param {?} event\n * @param {?} element\n * @param {?} horizontal\n * @return {?}\n */\nfunction shouldPositionPlaceholderBeforeElement(event, element, horizontal) {\n    const /** @type {?} */ bounds = element.getBoundingClientRect();\n    // If the pointer is in the upper half of the list item element,\n    // we position the placeholder before the list item, otherwise after it.\n    if (horizontal) {\n        return (event.clientX < bounds.left + bounds.width / 2);\n    }\n    return (event.clientY < bounds.top + bounds.height / 2);\n}\n/**\n * @param {?} event\n * @param {?} dragImage\n * @return {?}\n */\nfunction calculateDragImageOffset(event, dragImage) {\n    const /** @type {?} */ dragImageComputedStyle = window.getComputedStyle(dragImage);\n    const /** @type {?} */ paddingTop = parseFloat(dragImageComputedStyle.paddingTop) || 0;\n    const /** @type {?} */ paddingLeft = parseFloat(dragImageComputedStyle.paddingLeft) || 0;\n    const /** @type {?} */ borderTop = parseFloat(dragImageComputedStyle.borderTopWidth) || 0;\n    const /** @type {?} */ borderLeft = parseFloat(dragImageComputedStyle.borderLeftWidth) || 0;\n    return {\n        x: event.offsetX + paddingLeft + borderLeft,\n        y: event.offsetY + paddingTop + borderTop\n    };\n}\n/**\n * @param {?} event\n * @param {?} dragImage\n * @param {?} offsetFunction\n * @return {?}\n */\nfunction setDragImage(event, dragImage, offsetFunction) {\n    const /** @type {?} */ offset = offsetFunction(event, dragImage) || { x: 0, y: 0 };\n    ((event.dataTransfer)).setDragImage(dragImage, offset.x, offset.y);\n}\n\nconst _dndState = {\n    isDragging: false,\n    dropEffect: \"none\",\n    effectAllowed: \"all\",\n    type: undefined\n};\n/**\n * @param {?} event\n * @param {?} effectAllowed\n * @param {?} type\n * @return {?}\n */\nfunction startDrag(event, effectAllowed, type) {\n    _dndState.isDragging = true;\n    _dndState.dropEffect = \"none\";\n    _dndState.effectAllowed = effectAllowed;\n    _dndState.type = type;\n    event.dataTransfer.effectAllowed = effectAllowed;\n}\n/**\n * @return {?}\n */\nfunction endDrag() {\n    _dndState.isDragging = false;\n    _dndState.dropEffect = undefined;\n    _dndState.effectAllowed = undefined;\n    _dndState.type = undefined;\n}\n/**\n * @param {?} event\n * @param {?} dropEffect\n * @return {?}\n */\nfunction setDropEffect(event, dropEffect) {\n    if (_dndState.isDragging === true) {\n        _dndState.dropEffect = dropEffect;\n    }\n    event.dataTransfer.dropEffect = dropEffect;\n}\n/**\n * @param {?} event\n * @param {?=} effectAllowed\n * @return {?}\n */\nfunction getDropEffect(event, effectAllowed) {\n    let /** @type {?} */ effects = DROP_EFFECTS;\n    effects = filterEffects(effects, /** @type {?} */ (event.dataTransfer.effectAllowed));\n    if (_dndState.isDragging === true) {\n        effects = filterEffects(effects, _dndState.effectAllowed);\n    }\n    if (effectAllowed) {\n        effects = filterEffects(effects, effectAllowed);\n    }\n    // MacOS automatically filters dataTransfer.effectAllowed depending on the modifier keys,\n    // therefore the following modifier keys will only affect other operating systems.\n    if (effects.length === 0) {\n        return \"none\";\n    }\n    if (event.ctrlKey && effects.indexOf(\"copy\") !== -1) {\n        return \"copy\";\n    }\n    if (event.altKey && effects.indexOf(\"link\") !== -1) {\n        return \"link\";\n    }\n    return /** @type {?} */ (effects[0]);\n}\n/**\n * @param {?} event\n * @return {?}\n */\nfunction getDndType(event) {\n    if (_dndState.isDragging === true) {\n        return _dndState.type;\n    }\n    const /** @type {?} */ mimeType = getWellKnownMimeType(event);\n    if (mimeType === null) {\n        return undefined;\n    }\n    if (mimeType === MSIE_MIME_TYPE\n        || mimeType === JSON_MIME_TYPE) {\n        return undefined;\n    }\n    return mimeType.substr(CUSTOM_MIME_TYPE.length + 1) || undefined;\n}\n/**\n * @return {?}\n */\nfunction isExternalDrag() {\n    return _dndState.isDragging === false;\n}\nconst dndState = (_dndState);\n\nclass DndDragImageRefDirective {\n    /**\n     * @param {?} parent\n     * @param {?} elementRef\n     */\n    constructor(parent, elementRef) {\n        parent.registerDragImage(elementRef);\n    }\n}\nDndDragImageRefDirective.ɵfac = function DndDragImageRefDirective_Factory(t) { return new (t || DndDragImageRefDirective)(ɵngcc0.ɵɵdirectiveInject(DndDraggableDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDndDragImageRefDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DndDragImageRefDirective, selectors: [[\"\", \"dndDragImageRef\", \"\"]] });\n/**\n * @nocollapse\n */\nDndDragImageRefDirective.ctorParameters = () => [\n    { type: DndDraggableDirective, },\n    { type: ElementRef, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndDragImageRefDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[dndDragImageRef]\"\n            }]\n    }], function () { return [{ type: DndDraggableDirective }, { type: ɵngcc0.ElementRef }]; }, null); })();\nclass DndDraggableDirective {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.dndEffectAllowed = \"copy\";\n        this.dndDraggingClass = \"dndDragging\";\n        this.dndDraggingSourceClass = \"dndDraggingSource\";\n        this.dndDraggableDisabledClass = \"dndDraggableDisabled\";\n        this.dndDragImageOffsetFunction = calculateDragImageOffset;\n        this.dndStart = new EventEmitter();\n        this.dndEnd = new EventEmitter();\n        this.dndMoved = new EventEmitter();\n        this.dndCopied = new EventEmitter();\n        this.dndLinked = new EventEmitter();\n        this.dndCanceled = new EventEmitter();\n        this.draggable = true;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dndDisableIf(value) {\n        this.draggable = !value;\n        if (this.draggable) {\n            this.renderer.removeClass(this.elementRef.nativeElement, this.dndDraggableDisabledClass);\n        }\n        else {\n            this.renderer.addClass(this.elementRef.nativeElement, this.dndDraggableDisabledClass);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragStart(event) {\n        if (this.draggable === false) {\n            return false;\n        }\n        // check if there is dnd handle and if the dnd handle was used to start the drag\n        if (typeof this.dndHandle !== \"undefined\"\n            && typeof event._dndUsingHandle === \"undefined\") {\n            return false;\n        }\n        // initialize global state\n        startDrag(event, this.dndEffectAllowed, this.dndType);\n        setDragData(event, { data: this.dndDraggable, type: this.dndType }, dndState.effectAllowed);\n        this.determineDragImage();\n        // set dragging css class prior to setDragImage so styles are applied before\n        // TODO breaking change: add class to elementRef rather than drag image which could be another element\n        this.renderer.addClass(this.dragImage, this.dndDraggingClass);\n        // set custom dragimage if present\n        // set dragimage if drag is started from dndHandle\n        if (typeof this.dndDragImageElementRef !== \"undefined\"\n            || typeof event._dndUsingHandle !== \"undefined\") {\n            setDragImage(event, this.dragImage, this.dndDragImageOffsetFunction);\n        }\n        // add dragging source css class on first drag event\n        const /** @type {?} */ unregister = this.renderer.listen(this.elementRef.nativeElement, \"drag\", () => {\n            this.renderer.addClass(this.elementRef.nativeElement, this.dndDraggingSourceClass);\n            unregister();\n        });\n        this.dndStart.emit(event);\n        event.stopPropagation();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEnd(event) {\n        // get drop effect from custom stored state as its not reliable across browsers\n        const /** @type {?} */ dropEffect = dndState.dropEffect;\n        let /** @type {?} */ dropEffectEmitter;\n        switch (dropEffect) {\n            case \"copy\":\n                dropEffectEmitter = this.dndCopied;\n                break;\n            case \"link\":\n                dropEffectEmitter = this.dndLinked;\n                break;\n            case \"move\":\n                dropEffectEmitter = this.dndMoved;\n                break;\n            default:\n                dropEffectEmitter = this.dndCanceled;\n                break;\n        }\n        dropEffectEmitter.emit(event);\n        this.dndEnd.emit(event);\n        // reset global state\n        endDrag();\n        this.renderer.removeClass(this.dragImage, this.dndDraggingClass);\n        // IE9 special hammering\n        window.setTimeout(() => {\n            this.renderer.removeClass(this.elementRef.nativeElement, this.dndDraggingSourceClass);\n        }, 0);\n        event.stopPropagation();\n    }\n    /**\n     * @param {?} handle\n     * @return {?}\n     */\n    registerDragHandle(handle) {\n        this.dndHandle = handle;\n    }\n    /**\n     * @param {?} elementRef\n     * @return {?}\n     */\n    registerDragImage(elementRef) {\n        this.dndDragImageElementRef = elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    determineDragImage() {\n        // evaluate custom drag image existence\n        if (typeof this.dndDragImageElementRef !== \"undefined\") {\n            this.dragImage = /** @type {?} */ (this.dndDragImageElementRef.nativeElement);\n        }\n        else {\n            this.dragImage = this.elementRef.nativeElement;\n        }\n    }\n}\nDndDraggableDirective.ɵfac = function DndDraggableDirective_Factory(t) { return new (t || DndDraggableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nDndDraggableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DndDraggableDirective, selectors: [[\"\", \"dndDraggable\", \"\"]], hostVars: 1, hostBindings: function DndDraggableDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"dragstart\", function DndDraggableDirective_dragstart_HostBindingHandler($event) { return ctx.onDragStart($event); })(\"dragend\", function DndDraggableDirective_dragend_HostBindingHandler($event) { return ctx.onDragEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"draggable\", ctx.draggable);\n    } }, inputs: { dndEffectAllowed: \"dndEffectAllowed\", dndDraggingClass: \"dndDraggingClass\", dndDraggingSourceClass: \"dndDraggingSourceClass\", dndDraggableDisabledClass: \"dndDraggableDisabledClass\", dndDragImageOffsetFunction: \"dndDragImageOffsetFunction\", dndDisableIf: \"dndDisableIf\", dndDraggable: \"dndDraggable\", dndType: \"dndType\" }, outputs: { dndStart: \"dndStart\", dndEnd: \"dndEnd\", dndMoved: \"dndMoved\", dndCopied: \"dndCopied\", dndLinked: \"dndLinked\", dndCanceled: \"dndCanceled\" } });\n/**\n * @nocollapse\n */\nDndDraggableDirective.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Renderer2, },\n];\nDndDraggableDirective.propDecorators = {\n    'dndDraggable': [{ type: Input },],\n    'dndEffectAllowed': [{ type: Input },],\n    'dndType': [{ type: Input },],\n    'dndDraggingClass': [{ type: Input },],\n    'dndDraggingSourceClass': [{ type: Input },],\n    'dndDraggableDisabledClass': [{ type: Input },],\n    'dndDragImageOffsetFunction': [{ type: Input },],\n    'dndStart': [{ type: Output },],\n    'dndEnd': [{ type: Output },],\n    'dndMoved': [{ type: Output },],\n    'dndCopied': [{ type: Output },],\n    'dndLinked': [{ type: Output },],\n    'dndCanceled': [{ type: Output },],\n    'draggable': [{ type: HostBinding, args: [\"attr.draggable\",] },],\n    'dndDisableIf': [{ type: Input },],\n    'onDragStart': [{ type: HostListener, args: [\"dragstart\", [\"$event\"],] },],\n    'onDragEnd': [{ type: HostListener, args: [\"dragend\", [\"$event\"],] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndDraggableDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[dndDraggable]\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { dndEffectAllowed: [{\n            type: Input\n        }], dndDraggingClass: [{\n            type: Input\n        }], dndDraggingSourceClass: [{\n            type: Input\n        }], dndDraggableDisabledClass: [{\n            type: Input\n        }], dndDragImageOffsetFunction: [{\n            type: Input\n        }], dndStart: [{\n            type: Output\n        }], dndEnd: [{\n            type: Output\n        }], dndMoved: [{\n            type: Output\n        }], dndCopied: [{\n            type: Output\n        }], dndLinked: [{\n            type: Output\n        }], dndCanceled: [{\n            type: Output\n        }], draggable: [{\n            type: HostBinding,\n            args: [\"attr.draggable\"]\n        }], dndDisableIf: [{\n            type: Input\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragStart: [{\n            type: HostListener,\n            args: [\"dragstart\", [\"$event\"]]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEnd: [{\n            type: HostListener,\n            args: [\"dragend\", [\"$event\"]]\n        }], dndDraggable: [{\n            type: Input\n        }], dndType: [{\n            type: Input\n        }] }); })();\n\nclass DndPlaceholderRefDirective {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nDndPlaceholderRefDirective.ɵfac = function DndPlaceholderRefDirective_Factory(t) { return new (t || DndPlaceholderRefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDndPlaceholderRefDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DndPlaceholderRefDirective, selectors: [[\"\", \"dndPlaceholderRef\", \"\"]] });\n/**\n * @nocollapse\n */\nDndPlaceholderRefDirective.ctorParameters = () => [\n    { type: ElementRef, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndPlaceholderRefDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[dndPlaceholderRef]\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nclass DndDropzoneDirective {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.dndAllowExternal = false;\n        this.dndHorizontal = false;\n        this.dndDragoverClass = \"dndDragover\";\n        this.dndDropzoneDisabledClass = \"dndDropzoneDisabled\";\n        this.dndDragover = new EventEmitter();\n        this.dndDrop = new EventEmitter();\n        this.placeholder = null;\n        this.disabled = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dndDisableIf(value) {\n        this.disabled = !!value;\n        if (this.disabled) {\n            this.renderer.addClass(this.elementRef.nativeElement, this.dndDropzoneDisabledClass);\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, this.dndDropzoneDisabledClass);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.placeholder = this.tryGetPlaceholder();\n        if (this.placeholder !== null) {\n            this.placeholder.remove();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEnter(event) {\n        // check if another dropzone is activated\n        if (event._dndDropzoneActive === true) {\n            this.cleanupDragoverState();\n            return;\n        }\n        // set as active if the target element is inside this dropzone\n        if (typeof event._dndDropzoneActive === \"undefined\") {\n            const /** @type {?} */ newTarget = document.elementFromPoint(event.clientX, event.clientY);\n            if (this.elementRef.nativeElement.contains(newTarget)) {\n                event._dndDropzoneActive = true;\n            }\n        }\n        // check if this drag event is allowed to drop on this dropzone\n        const /** @type {?} */ type = getDndType(event);\n        if (this.isDropAllowed(type) === false) {\n            return;\n        }\n        // allow the dragenter\n        event.preventDefault();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        // check if this drag event is allowed to drop on this dropzone\n        const /** @type {?} */ type = getDndType(event);\n        if (this.isDropAllowed(type) === false) {\n            return;\n        }\n        this.checkAndUpdatePlaceholderPosition(event);\n        const /** @type {?} */ dropEffect = getDropEffect(event, this.dndEffectAllowed);\n        if (dropEffect === \"none\") {\n            this.cleanupDragoverState();\n            return;\n        }\n        // allow the dragover\n        event.preventDefault();\n        // set the drop effect\n        setDropEffect(event, dropEffect);\n        this.dndDragover.emit(event);\n        this.renderer.addClass(this.elementRef.nativeElement, this.dndDragoverClass);\n        event.stopPropagation();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        try {\n            // check if this drag event is allowed to drop on this dropzone\n            const /** @type {?} */ type = getDndType(event);\n            if (this.isDropAllowed(type) === false) {\n                return;\n            }\n            const /** @type {?} */ data = getDropData(event, isExternalDrag());\n            if (this.isDropAllowed(data.type) === false) {\n                return;\n            }\n            // signal custom drop handling\n            event.preventDefault();\n            const /** @type {?} */ dropEffect = getDropEffect(event);\n            setDropEffect(event, dropEffect);\n            if (dropEffect === \"none\") {\n                return;\n            }\n            const /** @type {?} */ dropIndex = this.getPlaceholderIndex();\n            this.dndDrop.emit({\n                event: event,\n                dropEffect: dropEffect,\n                isExternal: isExternalDrag(),\n                data: data.data,\n                index: dropIndex,\n                type: type,\n            });\n            event.stopPropagation();\n        }\n        finally {\n            this.cleanupDragoverState();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        // check if still inside this dropzone and not yet handled by another dropzone\n        if (typeof event._dndDropzoneActive === \"undefined\") {\n            const /** @type {?} */ newTarget = document.elementFromPoint(event.clientX, event.clientY);\n            if (this.elementRef.nativeElement.contains(newTarget)) {\n                event._dndDropzoneActive = true;\n                return;\n            }\n        }\n        this.cleanupDragoverState();\n        // cleanup drop effect when leaving dropzone\n        setDropEffect(event, \"none\");\n    }\n    /**\n     * @return {?}\n     */\n    tryGetPlaceholder() {\n        if (typeof this.dndPlaceholderRef !== \"undefined\") {\n            return /** @type {?} */ (this.dndPlaceholderRef.elementRef.nativeElement);\n        }\n        // TODO nasty workaround needed because if ng-container / template is used @ContentChild() or DI will fail because\n        // of wrong context see angular bug https://github.com/angular/angular/issues/13517\n        return this.elementRef.nativeElement.querySelector(\"[dndPlaceholderRef]\");\n    }\n    /**\n     * @param {?=} type\n     * @return {?}\n     */\n    isDropAllowed(type) {\n        // dropzone is disabled -> deny it\n        if (this.disabled === true) {\n            return false;\n        }\n        // if drag did not start from our directive\n        // and external drag sources are not allowed -> deny it\n        if (isExternalDrag() === true\n            && this.dndAllowExternal === false) {\n            return false;\n        }\n        // no filtering by types -> allow it\n        if (!this.dndDropzone) {\n            return true;\n        }\n        // no type set -> allow it\n        if (!type) {\n            return true;\n        }\n        if (Array.isArray(this.dndDropzone) === false) {\n            throw new Error(\"dndDropzone: bound value to [dndDropzone] must be an array!\");\n        }\n        // if dropzone contains type -> allow it\n        return this.dndDropzone.indexOf(type) !== -1;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    checkAndUpdatePlaceholderPosition(event) {\n        if (this.placeholder === null) {\n            return;\n        }\n        // make sure the placeholder is in the DOM\n        if (this.placeholder.parentNode !== this.elementRef.nativeElement) {\n            this.renderer.appendChild(this.elementRef.nativeElement, this.placeholder);\n        }\n        // update the position if the event originates from a child element of the dropzone\n        const /** @type {?} */ directChild = getDirectChildElement(this.elementRef.nativeElement, /** @type {?} */ (event.target));\n        // early exit if no direct child or direct child is placeholder\n        if (directChild === null\n            || directChild === this.placeholder) {\n            return;\n        }\n        const /** @type {?} */ positionPlaceholderBeforeDirectChild = shouldPositionPlaceholderBeforeElement(event, directChild, this.dndHorizontal);\n        if (positionPlaceholderBeforeDirectChild) {\n            // do insert before only if necessary\n            if (directChild.previousSibling !== this.placeholder) {\n                this.renderer.insertBefore(this.elementRef.nativeElement, this.placeholder, directChild);\n            }\n        }\n        else {\n            // do insert after only if necessary\n            if (directChild.nextSibling !== this.placeholder) {\n                this.renderer.insertBefore(this.elementRef.nativeElement, this.placeholder, directChild.nextSibling);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getPlaceholderIndex() {\n        if (this.placeholder === null) {\n            return undefined;\n        }\n        const /** @type {?} */ element = (this.elementRef.nativeElement);\n        return Array.prototype.indexOf.call(element.children, this.placeholder);\n    }\n    /**\n     * @return {?}\n     */\n    cleanupDragoverState() {\n        this.renderer.removeClass(this.elementRef.nativeElement, this.dndDragoverClass);\n        if (this.placeholder !== null) {\n            this.placeholder.remove();\n        }\n    }\n}\nDndDropzoneDirective.ɵfac = function DndDropzoneDirective_Factory(t) { return new (t || DndDropzoneDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nDndDropzoneDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DndDropzoneDirective, selectors: [[\"\", \"dndDropzone\", \"\"]], contentQueries: function DndDropzoneDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DndPlaceholderRefDirective, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dndPlaceholderRef = _t.first);\n    } }, hostBindings: function DndDropzoneDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"dragenter\", function DndDropzoneDirective_dragenter_HostBindingHandler($event) { return ctx.onDragEnter($event); })(\"dragover\", function DndDropzoneDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"drop\", function DndDropzoneDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragleave\", function DndDropzoneDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { dndAllowExternal: \"dndAllowExternal\", dndHorizontal: \"dndHorizontal\", dndDragoverClass: \"dndDragoverClass\", dndDropzoneDisabledClass: \"dndDropzoneDisabledClass\", dndDisableIf: \"dndDisableIf\", dndDropzone: \"dndDropzone\", dndEffectAllowed: \"dndEffectAllowed\" }, outputs: { dndDragover: \"dndDragover\", dndDrop: \"dndDrop\" } });\n/**\n * @nocollapse\n */\nDndDropzoneDirective.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Renderer2, },\n];\nDndDropzoneDirective.propDecorators = {\n    'dndDropzone': [{ type: Input },],\n    'dndEffectAllowed': [{ type: Input },],\n    'dndAllowExternal': [{ type: Input },],\n    'dndHorizontal': [{ type: Input },],\n    'dndDragoverClass': [{ type: Input },],\n    'dndDropzoneDisabledClass': [{ type: Input },],\n    'dndDragover': [{ type: Output },],\n    'dndDrop': [{ type: Output },],\n    'dndPlaceholderRef': [{ type: ContentChild, args: [DndPlaceholderRefDirective,] },],\n    'dndDisableIf': [{ type: Input },],\n    'onDragEnter': [{ type: HostListener, args: [\"dragenter\", [\"$event\"],] },],\n    'onDragOver': [{ type: HostListener, args: [\"dragover\", [\"$event\"],] },],\n    'onDrop': [{ type: HostListener, args: [\"drop\", [\"$event\"],] },],\n    'onDragLeave': [{ type: HostListener, args: [\"dragleave\", [\"$event\"],] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndDropzoneDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[dndDropzone]\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { dndAllowExternal: [{\n            type: Input\n        }], dndHorizontal: [{\n            type: Input\n        }], dndDragoverClass: [{\n            type: Input\n        }], dndDropzoneDisabledClass: [{\n            type: Input\n        }], dndDragover: [{\n            type: Output\n        }], dndDrop: [{\n            type: Output\n        }], dndDisableIf: [{\n            type: Input\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEnter: [{\n            type: HostListener,\n            args: [\"dragenter\", [\"$event\"]]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n            type: HostListener,\n            args: [\"dragover\", [\"$event\"]]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n            type: HostListener,\n            args: [\"drop\", [\"$event\"]]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n            type: HostListener,\n            args: [\"dragleave\", [\"$event\"]]\n        }], dndDropzone: [{\n            type: Input\n        }], dndEffectAllowed: [{\n            type: Input\n        }], dndPlaceholderRef: [{\n            type: ContentChild,\n            args: [DndPlaceholderRefDirective]\n        }] }); })();\n\nclass DndHandleDirective {\n    /**\n     * @param {?} parent\n     */\n    constructor(parent) {\n        this.draggable = true;\n        parent.registerDragHandle(this);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEvent(event) {\n        event._dndUsingHandle = true;\n    }\n}\nDndHandleDirective.ɵfac = function DndHandleDirective_Factory(t) { return new (t || DndHandleDirective)(ɵngcc0.ɵɵdirectiveInject(DndDraggableDirective)); };\nDndHandleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DndHandleDirective, selectors: [[\"\", \"dndHandle\", \"\"]], hostVars: 1, hostBindings: function DndHandleDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"dragstart\", function DndHandleDirective_dragstart_HostBindingHandler($event) { return ctx.onDragEvent($event); })(\"dragend\", function DndHandleDirective_dragend_HostBindingHandler($event) { return ctx.onDragEvent($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"draggable\", ctx.draggable);\n    } } });\n/**\n * @nocollapse\n */\nDndHandleDirective.ctorParameters = () => [\n    { type: DndDraggableDirective, },\n];\nDndHandleDirective.propDecorators = {\n    'draggable': [{ type: HostBinding, args: [\"attr.draggable\",] },],\n    'onDragEvent': [{ type: HostListener, args: [\"dragstart\", [\"$event\"],] }, { type: HostListener, args: [\"dragend\", [\"$event\"],] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndHandleDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[dndHandle]\"\n            }]\n    }], function () { return [{ type: DndDraggableDirective }]; }, { draggable: [{\n            type: HostBinding,\n            args: [\"attr.draggable\"]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragEvent: [{\n            type: HostListener,\n            args: [\"dragstart\", [\"$event\"]]\n        }, {\n            type: HostListener,\n            args: [\"dragend\", [\"$event\"]]\n        }] }); })();\n\nclass DndModule {\n}\nDndModule.ɵfac = function DndModule_Factory(t) { return new (t || DndModule)(); };\nDndModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DndModule });\nDndModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule\n        ]] });\n/**\n * @nocollapse\n */\nDndModule.ctorParameters = () => [];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DndModule, { declarations: function () { return [DndDraggableDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDragImageRefDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DndDraggableDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDragImageRefDirective]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    DndDraggableDirective,\n                    DndDropzoneDirective,\n                    DndHandleDirective,\n                    DndPlaceholderRefDirective,\n                    DndDragImageRefDirective\n                ],\n                exports: [\n                    DndDraggableDirective,\n                    DndDropzoneDirective,\n                    DndHandleDirective,\n                    DndPlaceholderRefDirective,\n                    DndDragImageRefDirective\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DndDragImageRefDirective, DndDraggableDirective, DndPlaceholderRefDirective, DndDropzoneDirective, DndHandleDirective, DndModule };\n\n//# sourceMappingURL=ngx-drag-drop.js.map"]},"metadata":{},"sourceType":"module"}