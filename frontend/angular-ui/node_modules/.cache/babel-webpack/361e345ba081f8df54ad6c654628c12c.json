{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { assignSlotNames, baseStyles, CdsBaseButton, id, property, syncProps } from '@cds/core/internal';\nimport { html } from 'lit-element';\nimport { styles } from './tag.element.css.js';\n/**\n * Tags show concise metadata in a compact format.\n * Tags are visually styled to differentiate them from buttons.\n *\n * ```typescript\n * import '@cds/core/tag/register.js';\n * ```\n *\n * ```html\n * <cds-tag status=\"info\">Info</cds-tag>\n * ```\n *\n * @element cds-tag\n * @slot - Content slot for inside the tag\n * @cssprop --background\n * @cssprop --border-color\n * @cssprop --border-radius\n * @cssprop --border-width\n * @cssprop --color\n * @cssprop --font-size\n * @cssprop --padding\n * @cssprop --size\n */\n\nexport var CdsTag = /*#__PURE__*/function (_CdsBaseButton) {\n  _inherits(CdsTag, _CdsBaseButton);\n\n  var _super = _createSuper(CdsTag);\n\n  function CdsTag() {\n    var _this;\n\n    _classCallCheck(this, CdsTag);\n\n    _this = _super.apply(this, arguments);\n    /**\n     * @type {neutral | info | success | warning | danger}\n     * Sets the color of the tag (and badge if present) from the following predefined list of statuses:\n     */\n\n    _this.status = 'neutral';\n    /** If present, shows a close icon to one side of the tag.\n     *  Note that applications must wire up the action to remove the tag on click and also\n     *  that you cannot have a clickable AND closable tag. The closable attribute-property\n     *  shows the close icon. What happens when the tag is clicked is for application developers\n     *  to decide.\n     *  If closable is present, the tag will be considered \"clickable\".\n     */\n\n    _this.closable = false;\n    return _this;\n  }\n\n  _createClass(CdsTag, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(CdsTag.prototype), \"connectedCallback\", this).call(this);\n\n      assignSlotNames([this.icon, 'tag-icon'], [this.badge, 'tag-badge']);\n    }\n  }, {\n    key: \"updated\",\n    value: function updated(props) {\n      _get(_getPrototypeOf(CdsTag.prototype), \"updated\", this).call(this, props);\n\n      if (props.has('closable') && props.get('closable') === true) {\n        this.readonly = false;\n      }\n\n      if (this.badge) {\n        syncProps(this.badge, this, {\n          status: props.has('status'),\n          color: props.has('color')\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div\\n        class=\\\"private-host\\\"\\n        role=\\\"group\\\"\\n        aria-labelledby=\\\"\", \"\\\"\\n        cds-layout=\\\"horizontal align:vertical-center\\\"\\n      >\\n        <slot name=\\\"tag-icon\\\"></slot>\\n        <span id=\\\"\", \"\\\" class=\\\"tag-content\\\" cds-text=\\\"lhe\\\"><slot></slot></span>\\n        <slot name=\\\"tag-badge\\\"></slot>\\n        \", \"\\n      </div>\\n    \"])), this.groupLabelId, this.groupLabelId, this.closable ? html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<cds-icon shape=\\\"times\\\"></cds-icon>\"]))) : html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\"]))));\n    }\n  }], [{\n    key: \"styles\",\n    get: function get() {\n      return [baseStyles, styles];\n    }\n  }]);\n\n  return CdsTag;\n}(CdsBaseButton);\n\n__decorate([property({\n  type: String\n})], CdsTag.prototype, \"status\", void 0);\n\n__decorate([property({\n  type: String\n})], CdsTag.prototype, \"color\", void 0);\n\n__decorate([property({\n  type: Boolean\n})], CdsTag.prototype, \"closable\", void 0);\n\n__decorate([id()], CdsTag.prototype, \"groupLabelId\", void 0); //# sourceMappingURL=tag.element.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@cds/core/tag/tag.element.js"],"names":["__decorate","assignSlotNames","baseStyles","CdsBaseButton","id","property","syncProps","html","styles","CdsTag","arguments","status","closable","icon","badge","props","has","get","readonly","color","groupLabelId","type","String","prototype","Boolean"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,aAAtC,EAAqDC,EAArD,EAAyDC,QAAzD,EAAmEC,SAAnE,QAAoF,oBAApF;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAaC,MAAb;AAAA;;AAAA;;AACI,oBAAc;AAAA;;AAAA;;AACV,+BAASC,SAAT;AACA;AACR;AACA;AACA;;AACQ,UAAKC,MAAL,GAAc,SAAd;AACA;AACR;AACA;AACA;AACA;AACA;AACA;;AACQ,UAAKC,QAAL,GAAgB,KAAhB;AAdU;AAeb;;AAhBL;AAAA;AAAA,WAoBI,6BAAoB;AAChB;;AACAX,MAAAA,eAAe,CAAC,CAAC,KAAKY,IAAN,EAAY,UAAZ,CAAD,EAA0B,CAAC,KAAKC,KAAN,EAAa,WAAb,CAA1B,CAAf;AACH;AAvBL;AAAA;AAAA,WAwBI,iBAAQC,KAAR,EAAe;AACX,0EAAcA,KAAd;;AACA,UAAIA,KAAK,CAACC,GAAN,CAAU,UAAV,KAAyBD,KAAK,CAACE,GAAN,CAAU,UAAV,MAA0B,IAAvD,EAA6D;AACzD,aAAKC,QAAL,GAAgB,KAAhB;AACH;;AACD,UAAI,KAAKJ,KAAT,EAAgB;AACZR,QAAAA,SAAS,CAAC,KAAKQ,KAAN,EAAa,IAAb,EAAmB;AAAEH,UAAAA,MAAM,EAAEI,KAAK,CAACC,GAAN,CAAU,QAAV,CAAV;AAA+BG,UAAAA,KAAK,EAAEJ,KAAK,CAACC,GAAN,CAAU,OAAV;AAAtC,SAAnB,CAAT;AACH;AACJ;AAhCL;AAAA;AAAA,WAiCI,kBAAS;AACL,aAAOT,IAAP,0bAImB,KAAKa,YAJxB,EAQY,KAAKA,YARjB,EAUE,KAAKR,QAAL,GAAgBL,IAAhB,+GAA6DA,IAA7D,uEAVF;AAaH;AA/CL;AAAA;AAAA,SAiBI,eAAoB;AAChB,aAAO,CAACL,UAAD,EAAaM,MAAb,CAAP;AACH;AAnBL;;AAAA;AAAA,EAA4BL,aAA5B;;AAiDAH,UAAU,CAAC,CACPK,QAAQ,CAAC;AAAEgB,EAAAA,IAAI,EAAEC;AAAR,CAAD,CADD,CAAD,EAEPb,MAAM,CAACc,SAFA,EAEW,QAFX,EAEqB,KAAK,CAF1B,CAAV;;AAGAvB,UAAU,CAAC,CACPK,QAAQ,CAAC;AAAEgB,EAAAA,IAAI,EAAEC;AAAR,CAAD,CADD,CAAD,EAEPb,MAAM,CAACc,SAFA,EAEW,OAFX,EAEoB,KAAK,CAFzB,CAAV;;AAGAvB,UAAU,CAAC,CACPK,QAAQ,CAAC;AAAEgB,EAAAA,IAAI,EAAEG;AAAR,CAAD,CADD,CAAD,EAEPf,MAAM,CAACc,SAFA,EAEW,UAFX,EAEuB,KAAK,CAF5B,CAAV;;AAGAvB,UAAU,CAAC,CACPI,EAAE,EADK,CAAD,EAEPK,MAAM,CAACc,SAFA,EAEW,cAFX,EAE2B,KAAK,CAFhC,CAAV,C,CAGA","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { assignSlotNames, baseStyles, CdsBaseButton, id, property, syncProps } from '@cds/core/internal';\nimport { html } from 'lit-element';\nimport { styles } from './tag.element.css.js';\n/**\n * Tags show concise metadata in a compact format.\n * Tags are visually styled to differentiate them from buttons.\n *\n * ```typescript\n * import '@cds/core/tag/register.js';\n * ```\n *\n * ```html\n * <cds-tag status=\"info\">Info</cds-tag>\n * ```\n *\n * @element cds-tag\n * @slot - Content slot for inside the tag\n * @cssprop --background\n * @cssprop --border-color\n * @cssprop --border-radius\n * @cssprop --border-width\n * @cssprop --color\n * @cssprop --font-size\n * @cssprop --padding\n * @cssprop --size\n */\nexport class CdsTag extends CdsBaseButton {\n    constructor() {\n        super(...arguments);\n        /**\n         * @type {neutral | info | success | warning | danger}\n         * Sets the color of the tag (and badge if present) from the following predefined list of statuses:\n         */\n        this.status = 'neutral';\n        /** If present, shows a close icon to one side of the tag.\n         *  Note that applications must wire up the action to remove the tag on click and also\n         *  that you cannot have a clickable AND closable tag. The closable attribute-property\n         *  shows the close icon. What happens when the tag is clicked is for application developers\n         *  to decide.\n         *  If closable is present, the tag will be considered \"clickable\".\n         */\n        this.closable = false;\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        assignSlotNames([this.icon, 'tag-icon'], [this.badge, 'tag-badge']);\n    }\n    updated(props) {\n        super.updated(props);\n        if (props.has('closable') && props.get('closable') === true) {\n            this.readonly = false;\n        }\n        if (this.badge) {\n            syncProps(this.badge, this, { status: props.has('status'), color: props.has('color') });\n        }\n    }\n    render() {\n        return html `\n      <div\n        class=\"private-host\"\n        role=\"group\"\n        aria-labelledby=\"${this.groupLabelId}\"\n        cds-layout=\"horizontal align:vertical-center\"\n      >\n        <slot name=\"tag-icon\"></slot>\n        <span id=\"${this.groupLabelId}\" class=\"tag-content\" cds-text=\"lhe\"><slot></slot></span>\n        <slot name=\"tag-badge\"></slot>\n        ${this.closable ? html `<cds-icon shape=\"times\"></cds-icon>` : html ``}\n      </div>\n    `;\n    }\n}\n__decorate([\n    property({ type: String })\n], CdsTag.prototype, \"status\", void 0);\n__decorate([\n    property({ type: String })\n], CdsTag.prototype, \"color\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsTag.prototype, \"closable\", void 0);\n__decorate([\n    id()\n], CdsTag.prototype, \"groupLabelId\", void 0);\n//# sourceMappingURL=tag.element.js.map"]},"metadata":{},"sourceType":"module"}