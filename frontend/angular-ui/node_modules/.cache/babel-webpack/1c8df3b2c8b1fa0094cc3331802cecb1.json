{"ast":null,"code":"/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\nimport { isNilOrEmpty, isNumericString } from './identity.js';\nexport function transformToString(delimiter, fns) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return fns.map(function (fn) {\n    return fn.apply(void 0, args);\n  }).join(delimiter).trim();\n} // have to go this route because ramda curry throws typescript for loops\n\nexport function transformToSpacedString(fns) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return transformToString.apply(void 0, [' ', fns].concat(args));\n}\nexport function transformToUnspacedString(fns) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return transformToString.apply(void 0, ['', fns].concat(args));\n}\nexport function camelCaseToKebabCase(value) {\n  return value.replace(/[A-Z]/g, function (l) {\n    return \"-\".concat(l.toLowerCase());\n  });\n}\nexport function kebabCaseToCamelCase(str) {\n  return str.split('-').map(function (item, index) {\n    return index ? item.charAt(0).toUpperCase() + item.slice(1).toLowerCase() : item;\n  }).join('');\n}\nexport function kebabCaseToPascalCase(string) {\n  var camelCase = kebabCaseToCamelCase(string);\n  return capitalizeFirstLetter(camelCase);\n}\n/**\r\n * Take a object map of css properties and if value concatenate string of all computed values\r\n * Useful for dynamic style tags in lit-html templates\r\n */\n\nexport function setStyles(styles) {\n  return createPropStyleSelectors(Object.keys(styles), styles);\n}\nexport function setPropStyles(styles) {\n  return createPropStyleSelectors(Object.keys(styles).filter(function (prop) {\n    return prop.startsWith('--');\n  }), styles);\n}\n\nfunction createPropStyleSelectors(props, styles) {\n  return props.reduce(function (allStyles, prop) {\n    return \"\".concat(allStyles).concat(styles[prop] ? \"\".concat(prop, \":\").concat(styles[prop], \";\") : '');\n  }, '');\n}\n\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/** Used for Storybook docs to define knob group for css properties */\n\nexport var cssGroup = 'CSS Custom Properties';\n/** Used for Storybook docs to define knob group for JavaScript properties */\n\nexport var propertiesGroup = 'Default Properties';\nexport function getNumericValueFromCssSecondsStyleValue(styleValueInSeconds) {\n  var secondsStringChecker = /(\\d+)?\\.?(\\d+)?s/g;\n\n  if (!styleValueInSeconds || !styleValueInSeconds.match(secondsStringChecker)) {\n    return 0; // validate expected input\n  }\n\n  var copyVal = styleValueInSeconds.substr(0, styleValueInSeconds.length - 1); // cut off trailing 's'\n\n  return isNumericString(copyVal) ? Number(copyVal) : 0;\n}\nexport function isPrefixedOrSuffixedBy(str, stringFix) {\n  var prefixOrSuffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'prefix';\n\n  if (isNilOrEmpty(stringFix) || isNilOrEmpty(str)) {\n    return false;\n  }\n\n  var myFixToTest = prefixOrSuffix === 'prefix' ? str.substr(0, stringFix.length) : str.substr(-1 * stringFix.length);\n  return myFixToTest === stringFix;\n}\nexport function isPrefixedBy(str, prefix) {\n  return isPrefixedOrSuffixedBy(str, prefix, 'prefix');\n}\nexport function isSuffixedBy(str, suffix) {\n  return isPrefixedOrSuffixedBy(str, suffix, 'suffix');\n}\nexport function removePrefixOrSuffix(str, stringFix) {\n  var prefixOrSuffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'prefix';\n\n  if (isNilOrEmpty(str)) {\n    return '';\n  }\n\n  if (isNilOrEmpty(stringFix) || !isPrefixedOrSuffixedBy(str, stringFix, prefixOrSuffix)) {\n    return str;\n  }\n\n  switch (prefixOrSuffix) {\n    case 'prefix':\n      return str.substr(stringFix.length);\n\n    case 'suffix':\n      return str.substr(0, str.length - stringFix.length);\n\n    default:\n      return str;\n  }\n}\nexport function removePrefix(str, prefix) {\n  return removePrefixOrSuffix(str, prefix, 'prefix');\n}\nexport function removeSuffix(str, suffix) {\n  return removePrefixOrSuffix(str, suffix, 'suffix');\n} //# sourceMappingURL=string.js.map","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@cds/core/internal/utils/string.js"],"names":["isNilOrEmpty","isNumericString","transformToString","delimiter","fns","args","map","fn","join","trim","transformToSpacedString","transformToUnspacedString","camelCaseToKebabCase","value","replace","l","toLowerCase","kebabCaseToCamelCase","str","split","item","index","charAt","toUpperCase","slice","kebabCaseToPascalCase","string","camelCase","capitalizeFirstLetter","setStyles","styles","createPropStyleSelectors","Object","keys","setPropStyles","filter","prop","startsWith","props","reduce","allStyles","cssGroup","propertiesGroup","getNumericValueFromCssSecondsStyleValue","styleValueInSeconds","secondsStringChecker","match","copyVal","substr","length","Number","isPrefixedOrSuffixedBy","stringFix","prefixOrSuffix","myFixToTest","isPrefixedBy","prefix","isSuffixedBy","suffix","removePrefixOrSuffix","removePrefix","removeSuffix"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\r\nimport { isNilOrEmpty, isNumericString } from './identity.js';\r\nexport function transformToString(delimiter, fns, ...args) {\r\n    return fns\r\n        .map(fn => {\r\n        return fn(...args);\r\n    })\r\n        .join(delimiter)\r\n        .trim();\r\n}\r\n// have to go this route because ramda curry throws typescript for loops\r\nexport function transformToSpacedString(fns, ...args) {\r\n    return transformToString(' ', fns, ...args);\r\n}\r\nexport function transformToUnspacedString(fns, ...args) {\r\n    return transformToString('', fns, ...args);\r\n}\r\nexport function camelCaseToKebabCase(value) {\r\n    return value.replace(/[A-Z]/g, l => `-${l.toLowerCase()}`);\r\n}\r\nexport function kebabCaseToCamelCase(str) {\r\n    return str\r\n        .split('-')\r\n        .map((item, index) => (index ? item.charAt(0).toUpperCase() + item.slice(1).toLowerCase() : item))\r\n        .join('');\r\n}\r\nexport function kebabCaseToPascalCase(string) {\r\n    const camelCase = kebabCaseToCamelCase(string);\r\n    return capitalizeFirstLetter(camelCase);\r\n}\r\n/**\r\n * Take a object map of css properties and if value concatenate string of all computed values\r\n * Useful for dynamic style tags in lit-html templates\r\n */\r\nexport function setStyles(styles) {\r\n    return createPropStyleSelectors(Object.keys(styles), styles);\r\n}\r\nexport function setPropStyles(styles) {\r\n    return createPropStyleSelectors(Object.keys(styles).filter(prop => prop.startsWith('--')), styles);\r\n}\r\nfunction createPropStyleSelectors(props, styles) {\r\n    return props.reduce((allStyles, prop) => `${allStyles}${styles[prop] ? `${prop}:${styles[prop]};` : ''}`, '');\r\n}\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n/** Used for Storybook docs to define knob group for css properties */\r\nexport const cssGroup = 'CSS Custom Properties';\r\n/** Used for Storybook docs to define knob group for JavaScript properties */\r\nexport const propertiesGroup = 'Default Properties';\r\nexport function getNumericValueFromCssSecondsStyleValue(styleValueInSeconds) {\r\n    const secondsStringChecker = /(\\d+)?\\.?(\\d+)?s/g;\r\n    if (!styleValueInSeconds || !styleValueInSeconds.match(secondsStringChecker)) {\r\n        return 0; // validate expected input\r\n    }\r\n    const copyVal = styleValueInSeconds.substr(0, styleValueInSeconds.length - 1); // cut off trailing 's'\r\n    return isNumericString(copyVal) ? Number(copyVal) : 0;\r\n}\r\nexport function isPrefixedOrSuffixedBy(str, stringFix, prefixOrSuffix = 'prefix') {\r\n    if (isNilOrEmpty(stringFix) || isNilOrEmpty(str)) {\r\n        return false;\r\n    }\r\n    const myFixToTest = prefixOrSuffix === 'prefix' ? str.substr(0, stringFix.length) : str.substr(-1 * stringFix.length);\r\n    return myFixToTest === stringFix;\r\n}\r\nexport function isPrefixedBy(str, prefix) {\r\n    return isPrefixedOrSuffixedBy(str, prefix, 'prefix');\r\n}\r\nexport function isSuffixedBy(str, suffix) {\r\n    return isPrefixedOrSuffixedBy(str, suffix, 'suffix');\r\n}\r\nexport function removePrefixOrSuffix(str, stringFix, prefixOrSuffix = 'prefix') {\r\n    if (isNilOrEmpty(str)) {\r\n        return '';\r\n    }\r\n    if (isNilOrEmpty(stringFix) || !isPrefixedOrSuffixedBy(str, stringFix, prefixOrSuffix)) {\r\n        return str;\r\n    }\r\n    switch (prefixOrSuffix) {\r\n        case 'prefix':\r\n            return str.substr(stringFix.length);\r\n        case 'suffix':\r\n            return str.substr(0, str.length - stringFix.length);\r\n        default:\r\n            return str;\r\n    }\r\n}\r\nexport function removePrefix(str, prefix) {\r\n    return removePrefixOrSuffix(str, prefix, 'prefix');\r\n}\r\nexport function removeSuffix(str, suffix) {\r\n    return removePrefixOrSuffix(str, suffix, 'suffix');\r\n}\r\n//# sourceMappingURL=string.js.map"]},"metadata":{},"sourceType":"module"}