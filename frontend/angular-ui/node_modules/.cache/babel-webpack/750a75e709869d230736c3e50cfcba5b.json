{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\r\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\r\n * cyclical data structures.\r\n *\r\n * Dispatches symmetrically to the `equals` methods of both arguments, if\r\n * present.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.15.0\r\n * @category Relation\r\n * @sig a -> b -> Boolean\r\n * @param {*} a\r\n * @param {*} b\r\n * @return {Boolean}\r\n * @example\r\n *\r\n *      R.equals(1, 1); //=> true\r\n *      R.equals(1, '1'); //=> false\r\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\r\n *\r\n *      const a = {}; a.v = a;\r\n *      const b = {}; b.v = b;\r\n *      R.equals(a, b); //=> true\r\n */\n\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/ramda/es/equals.js"],"names":["_curry2","_equals","equals","a","b"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GACV,aACAF,OAAO,CAAC,SAASE,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC5B,SAAOH,OAAO,CAACE,CAAD,EAAIC,CAAJ,EAAO,EAAP,EAAW,EAAX,CAAd;AACD,CAFM,CAFP;;AAMA,eAAeF,MAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\r\nimport _equals from \"./internal/_equals.js\";\r\n/**\r\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\r\n * cyclical data structures.\r\n *\r\n * Dispatches symmetrically to the `equals` methods of both arguments, if\r\n * present.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.15.0\r\n * @category Relation\r\n * @sig a -> b -> Boolean\r\n * @param {*} a\r\n * @param {*} b\r\n * @return {Boolean}\r\n * @example\r\n *\r\n *      R.equals(1, 1); //=> true\r\n *      R.equals(1, '1'); //=> false\r\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\r\n *\r\n *      const a = {}; a.v = a;\r\n *      const b = {}; b.v = b;\r\n *      R.equals(a, b); //=> true\r\n */\r\n\r\nvar equals =\r\n/*#__PURE__*/\r\n_curry2(function equals(a, b) {\r\n  return _equals(a, b, [], []);\r\n});\r\n\r\nexport default equals;"]},"metadata":{},"sourceType":"module"}