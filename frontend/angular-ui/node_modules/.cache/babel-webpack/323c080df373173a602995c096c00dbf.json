{"ast":null,"code":"import _defineProperty from \"C:/Users/hp/OneDrive/Desktop/17portalnew/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/hp/OneDrive/Desktop/17portalnew/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hp/OneDrive/Desktop/17portalnew/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { InjectionToken, Injectable, Inject, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { mergeMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as ɵngcc0 from '@angular/core';\nvar JWT_OPTIONS = new InjectionToken('JWT_OPTIONS'); // tslint:disable:no-bitwise\n\nvar JwtHelperService = /*#__PURE__*/function () {\n  function JwtHelperService() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, JwtHelperService);\n\n    this.tokenGetter = config && config.tokenGetter || function () {};\n  }\n\n  _createClass(JwtHelperService, [{\n    key: \"urlBase64Decode\",\n    value: function urlBase64Decode(str) {\n      var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n\n      switch (output.length % 4) {\n        case 0:\n          {\n            break;\n          }\n\n        case 2:\n          {\n            output += \"==\";\n            break;\n          }\n\n        case 3:\n          {\n            output += \"=\";\n            break;\n          }\n\n        default:\n          {\n            throw new Error(\"Illegal base64url string!\");\n          }\n      }\n\n      return this.b64DecodeUnicode(output);\n    } // credits for decoder goes to https://github.com/atk\n\n  }, {\n    key: \"b64decode\",\n    value: function b64decode(str) {\n      var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var output = \"\";\n      str = String(str).replace(/=+$/, \"\");\n\n      if (str.length % 4 === 1) {\n        throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n      }\n\n      for ( // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0; // get next character\n      buffer = str.charAt(idx++); // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n      }\n\n      return output;\n    }\n  }, {\n    key: \"b64DecodeUnicode\",\n    value: function b64DecodeUnicode(str) {\n      return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(\"\"));\n    }\n  }, {\n    key: \"decodeToken\",\n    value: function decodeToken() {\n      var token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.tokenGetter();\n\n      if (!token || token === \"\") {\n        return null;\n      }\n\n      var parts = token.split(\".\");\n\n      if (parts.length !== 3) {\n        throw new Error(\"The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.\");\n      }\n\n      var decoded = this.urlBase64Decode(parts[1]);\n\n      if (!decoded) {\n        throw new Error(\"Cannot decode the token.\");\n      }\n\n      return JSON.parse(decoded);\n    }\n  }, {\n    key: \"getTokenExpirationDate\",\n    value: function getTokenExpirationDate() {\n      var token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.tokenGetter();\n      var decoded;\n      decoded = this.decodeToken(token);\n\n      if (!decoded || !decoded.hasOwnProperty(\"exp\")) {\n        return null;\n      }\n\n      var date = new Date(0);\n      date.setUTCSeconds(decoded.exp);\n      return date;\n    }\n  }, {\n    key: \"isTokenExpired\",\n    value: function isTokenExpired() {\n      var token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.tokenGetter();\n      var offsetSeconds = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (!token || token === \"\") {\n        return true;\n      }\n\n      var date = this.getTokenExpirationDate(token);\n      offsetSeconds = offsetSeconds || 0;\n\n      if (date === null) {\n        return false;\n      }\n\n      return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n    }\n  }, {\n    key: \"getAuthScheme\",\n    value: function getAuthScheme(authScheme, request) {\n      if (typeof authScheme === \"function\") {\n        return authScheme(request);\n      }\n\n      return authScheme;\n    }\n  }]);\n\n  return JwtHelperService;\n}();\n\nJwtHelperService.ɵfac = function JwtHelperService_Factory(t) {\n  return new (t || JwtHelperService)(ɵngcc0.ɵɵinject(JWT_OPTIONS));\n};\n\nJwtHelperService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: JwtHelperService,\n  factory: JwtHelperService.ɵfac\n});\n\nJwtHelperService.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [JWT_OPTIONS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JwtHelperService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [JWT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n\nvar JwtInterceptor = /*#__PURE__*/function () {\n  function JwtInterceptor(config, jwtHelper, document) {\n    _classCallCheck(this, JwtInterceptor);\n\n    this.jwtHelper = jwtHelper;\n    this.document = document;\n    this.standardPorts = [\"80\", \"443\"];\n    this.tokenGetter = config.tokenGetter;\n    this.headerName = config.headerName || \"Authorization\";\n    this.authScheme = config.authScheme || config.authScheme === \"\" ? config.authScheme : \"Bearer \";\n    this.allowedDomains = config.allowedDomains || [];\n    this.disallowedRoutes = config.disallowedRoutes || [];\n    this.throwNoTokenError = config.throwNoTokenError || false;\n    this.skipWhenExpired = config.skipWhenExpired;\n  }\n\n  _createClass(JwtInterceptor, [{\n    key: \"isAllowedDomain\",\n    value: function isAllowedDomain(request) {\n      var requestUrl = new URL(request.url, this.document.location.origin); // If the host equals the current window origin,\n      // the domain is allowed by default\n\n      if (requestUrl.host === this.document.location.host) {\n        return true;\n      } // If not the current domain, check the allowed list\n\n\n      var hostName = \"\".concat(requestUrl.hostname).concat(requestUrl.port && !this.standardPorts.includes(requestUrl.port) ? \":\" + requestUrl.port : \"\");\n      return this.allowedDomains.findIndex(function (domain) {\n        return typeof domain === \"string\" ? domain === hostName : domain instanceof RegExp ? domain.test(hostName) : false;\n      }) > -1;\n    }\n  }, {\n    key: \"isDisallowedRoute\",\n    value: function isDisallowedRoute(request) {\n      var _this = this;\n\n      var requestedUrl = new URL(request.url, this.document.location.origin);\n      return this.disallowedRoutes.findIndex(function (route) {\n        if (typeof route === \"string\") {\n          var parsedRoute = new URL(route, _this.document.location.origin);\n          return parsedRoute.hostname === requestedUrl.hostname && parsedRoute.pathname === requestedUrl.pathname;\n        }\n\n        if (route instanceof RegExp) {\n          return route.test(request.url);\n        }\n\n        return false;\n      }) > -1;\n    }\n  }, {\n    key: \"handleInterception\",\n    value: function handleInterception(token, request, next) {\n      var authScheme = this.jwtHelper.getAuthScheme(this.authScheme, request);\n      var tokenIsExpired = false;\n\n      if (!token && this.throwNoTokenError) {\n        throw new Error(\"Could not get token from tokenGetter function.\");\n      }\n\n      if (this.skipWhenExpired) {\n        tokenIsExpired = token ? this.jwtHelper.isTokenExpired(token) : true;\n      }\n\n      if (token && tokenIsExpired && this.skipWhenExpired) {\n        request = request.clone();\n      } else if (token) {\n        request = request.clone({\n          setHeaders: _defineProperty({}, this.headerName, \"\".concat(authScheme).concat(token))\n        });\n      }\n\n      return next.handle(request);\n    }\n  }, {\n    key: \"intercept\",\n    value: function intercept(request, next) {\n      var _this2 = this;\n\n      if (!this.isAllowedDomain(request) || this.isDisallowedRoute(request)) {\n        return next.handle(request);\n      }\n\n      var token = this.tokenGetter(request);\n\n      if (token instanceof Promise) {\n        return from(token).pipe(mergeMap(function (asyncToken) {\n          return _this2.handleInterception(asyncToken, request, next);\n        }));\n      } else {\n        return this.handleInterception(token, request, next);\n      }\n    }\n  }]);\n\n  return JwtInterceptor;\n}();\n\nJwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) {\n  return new (t || JwtInterceptor)(ɵngcc0.ɵɵinject(JWT_OPTIONS), ɵngcc0.ɵɵinject(JwtHelperService), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nJwtInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: JwtInterceptor,\n  factory: JwtInterceptor.ɵfac\n});\n\nJwtInterceptor.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [JWT_OPTIONS]\n    }]\n  }, {\n    type: JwtHelperService\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JwtInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [JWT_OPTIONS]\n      }]\n    }, {\n      type: JwtHelperService\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nvar JwtModule = /*#__PURE__*/function () {\n  function JwtModule(parentModule) {\n    _classCallCheck(this, JwtModule);\n\n    if (parentModule) {\n      throw new Error(\"JwtModule is already loaded. It should only be imported in your application's main module.\");\n    }\n  }\n\n  _createClass(JwtModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot(options) {\n      return {\n        ngModule: JwtModule,\n        providers: [{\n          provide: HTTP_INTERCEPTORS,\n          useClass: JwtInterceptor,\n          multi: true\n        }, options.jwtOptionsProvider || {\n          provide: JWT_OPTIONS,\n          useValue: options.config\n        }, JwtHelperService]\n      };\n    }\n  }]);\n\n  return JwtModule;\n}();\n\nJwtModule.ɵfac = function JwtModule_Factory(t) {\n  return new (t || JwtModule)(ɵngcc0.ɵɵinject(JwtModule, 12));\n};\n\nJwtModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: JwtModule\n});\nJwtModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n\nJwtModule.ctorParameters = function () {\n  return [{\n    type: JwtModule,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JwtModule, [{\n    type: NgModule\n  }], function () {\n    return [{\n      type: JwtModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }];\n  }, null);\n})();\n/*\r\n * Public API Surface of angular-jwt\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { JWT_OPTIONS, JwtHelperService, JwtInterceptor, JwtModule }; //# sourceMappingURL=auth0-angular-jwt.js.map","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/17portalnew/CNS-Portal/frontend/angular-ui/node_modules/@auth0/angular-jwt/fesm2015/auth0-angular-jwt.js"],"names":["InjectionToken","Injectable","Inject","NgModule","Optional","SkipSelf","DOCUMENT","mergeMap","from","HTTP_INTERCEPTORS","ɵngcc0","JWT_OPTIONS","JwtHelperService","config","tokenGetter","str","output","replace","length","Error","b64DecodeUnicode","chars","String","bc","bs","buffer","idx","charAt","fromCharCode","indexOf","decodeURIComponent","Array","prototype","map","call","b64decode","c","charCodeAt","toString","slice","join","token","parts","split","decoded","urlBase64Decode","JSON","parse","decodeToken","hasOwnProperty","date","Date","setUTCSeconds","exp","offsetSeconds","getTokenExpirationDate","valueOf","authScheme","request","ɵfac","JwtHelperService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","factory","ctorParameters","type","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","JwtInterceptor","jwtHelper","document","standardPorts","headerName","allowedDomains","disallowedRoutes","throwNoTokenError","skipWhenExpired","requestUrl","URL","url","location","origin","host","hostName","hostname","port","includes","findIndex","domain","RegExp","test","requestedUrl","route","parsedRoute","pathname","next","getAuthScheme","tokenIsExpired","isTokenExpired","clone","setHeaders","handle","isAllowedDomain","isDisallowedRoute","Promise","pipe","asyncToken","handleInterception","JwtInterceptor_Factory","Document","JwtModule","parentModule","options","ngModule","providers","provide","useClass","multi","jwtOptionsProvider","useValue","JwtModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"mappings":"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","sourcesContent":["import { InjectionToken, Injectable, Inject, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { from } from 'rxjs';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport * as ɵngcc0 from '@angular/core';\r\nconst JWT_OPTIONS = new InjectionToken('JWT_OPTIONS');\r\n\r\n// tslint:disable:no-bitwise\r\nclass JwtHelperService {\r\n    constructor(config = null) {\r\n        this.tokenGetter = (config && config.tokenGetter) || function () { };\r\n    }\r\n    urlBase64Decode(str) {\r\n        let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (output.length % 4) {\r\n            case 0: {\r\n                break;\r\n            }\r\n            case 2: {\r\n                output += \"==\";\r\n                break;\r\n            }\r\n            case 3: {\r\n                output += \"=\";\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error(\"Illegal base64url string!\");\r\n            }\r\n        }\r\n        return this.b64DecodeUnicode(output);\r\n    }\r\n    // credits for decoder goes to https://github.com/atk\r\n    b64decode(str) {\r\n        const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        let output = \"\";\r\n        str = String(str).replace(/=+$/, \"\");\r\n        if (str.length % 4 === 1) {\r\n            throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\r\n        }\r\n        for (\r\n        // initialize result and counters\r\n        let bc = 0, bs, buffer, idx = 0; \r\n        // get next character\r\n        (buffer = str.charAt(idx++)); \r\n        // character found in table? initialize bit storage and add its ascii value;\r\n        ~buffer &&\r\n            ((bs = bc % 4 ? bs * 64 + buffer : buffer),\r\n                // and if not first of each 4 characters,\r\n                // convert the first 8 bits to one ascii character\r\n                bc++ % 4)\r\n            ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\r\n            : 0) {\r\n            // try to find character in table (0-63, not found => -1)\r\n            buffer = chars.indexOf(buffer);\r\n        }\r\n        return output;\r\n    }\r\n    b64DecodeUnicode(str) {\r\n        return decodeURIComponent(Array.prototype.map\r\n            .call(this.b64decode(str), (c) => {\r\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n        })\r\n            .join(\"\"));\r\n    }\r\n    decodeToken(token = this.tokenGetter()) {\r\n        if (!token || token === \"\") {\r\n            return null;\r\n        }\r\n        const parts = token.split(\".\");\r\n        if (parts.length !== 3) {\r\n            throw new Error(\"The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.\");\r\n        }\r\n        const decoded = this.urlBase64Decode(parts[1]);\r\n        if (!decoded) {\r\n            throw new Error(\"Cannot decode the token.\");\r\n        }\r\n        return JSON.parse(decoded);\r\n    }\r\n    getTokenExpirationDate(token = this.tokenGetter()) {\r\n        let decoded;\r\n        decoded = this.decodeToken(token);\r\n        if (!decoded || !decoded.hasOwnProperty(\"exp\")) {\r\n            return null;\r\n        }\r\n        const date = new Date(0);\r\n        date.setUTCSeconds(decoded.exp);\r\n        return date;\r\n    }\r\n    isTokenExpired(token = this.tokenGetter(), offsetSeconds) {\r\n        if (!token || token === \"\") {\r\n            return true;\r\n        }\r\n        const date = this.getTokenExpirationDate(token);\r\n        offsetSeconds = offsetSeconds || 0;\r\n        if (date === null) {\r\n            return false;\r\n        }\r\n        return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\r\n    }\r\n    getAuthScheme(authScheme, request) {\r\n        if (typeof authScheme === \"function\") {\r\n            return authScheme(request);\r\n        }\r\n        return authScheme;\r\n    }\r\n}\r\nJwtHelperService.ɵfac = function JwtHelperService_Factory(t) { return new (t || JwtHelperService)(ɵngcc0.ɵɵinject(JWT_OPTIONS)); };\r\nJwtHelperService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JwtHelperService, factory: JwtHelperService.ɵfac });\r\nJwtHelperService.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [JWT_OPTIONS,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JwtHelperService, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [JWT_OPTIONS]\r\n            }] }]; }, null); })();\r\n\r\nclass JwtInterceptor {\r\n    constructor(config, jwtHelper, document) {\r\n        this.jwtHelper = jwtHelper;\r\n        this.document = document;\r\n        this.standardPorts = [\"80\", \"443\"];\r\n        this.tokenGetter = config.tokenGetter;\r\n        this.headerName = config.headerName || \"Authorization\";\r\n        this.authScheme =\r\n            config.authScheme || config.authScheme === \"\"\r\n                ? config.authScheme\r\n                : \"Bearer \";\r\n        this.allowedDomains = config.allowedDomains || [];\r\n        this.disallowedRoutes = config.disallowedRoutes || [];\r\n        this.throwNoTokenError = config.throwNoTokenError || false;\r\n        this.skipWhenExpired = config.skipWhenExpired;\r\n    }\r\n    isAllowedDomain(request) {\r\n        const requestUrl = new URL(request.url, this.document.location.origin);\r\n        // If the host equals the current window origin,\r\n        // the domain is allowed by default\r\n        if (requestUrl.host === this.document.location.host) {\r\n            return true;\r\n        }\r\n        // If not the current domain, check the allowed list\r\n        const hostName = `${requestUrl.hostname}${requestUrl.port && !this.standardPorts.includes(requestUrl.port)\r\n            ? \":\" + requestUrl.port\r\n            : \"\"}`;\r\n        return (this.allowedDomains.findIndex((domain) => typeof domain === \"string\"\r\n            ? domain === hostName\r\n            : domain instanceof RegExp\r\n                ? domain.test(hostName)\r\n                : false) > -1);\r\n    }\r\n    isDisallowedRoute(request) {\r\n        const requestedUrl = new URL(request.url, this.document.location.origin);\r\n        return (this.disallowedRoutes.findIndex((route) => {\r\n            if (typeof route === \"string\") {\r\n                const parsedRoute = new URL(route, this.document.location.origin);\r\n                return (parsedRoute.hostname === requestedUrl.hostname &&\r\n                    parsedRoute.pathname === requestedUrl.pathname);\r\n            }\r\n            if (route instanceof RegExp) {\r\n                return route.test(request.url);\r\n            }\r\n            return false;\r\n        }) > -1);\r\n    }\r\n    handleInterception(token, request, next) {\r\n        const authScheme = this.jwtHelper.getAuthScheme(this.authScheme, request);\r\n        let tokenIsExpired = false;\r\n        if (!token && this.throwNoTokenError) {\r\n            throw new Error(\"Could not get token from tokenGetter function.\");\r\n        }\r\n        if (this.skipWhenExpired) {\r\n            tokenIsExpired = token ? this.jwtHelper.isTokenExpired(token) : true;\r\n        }\r\n        if (token && tokenIsExpired && this.skipWhenExpired) {\r\n            request = request.clone();\r\n        }\r\n        else if (token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    [this.headerName]: `${authScheme}${token}`,\r\n                },\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n    intercept(request, next) {\r\n        if (!this.isAllowedDomain(request) || this.isDisallowedRoute(request)) {\r\n            return next.handle(request);\r\n        }\r\n        const token = this.tokenGetter(request);\r\n        if (token instanceof Promise) {\r\n            return from(token).pipe(mergeMap((asyncToken) => {\r\n                return this.handleInterception(asyncToken, request, next);\r\n            }));\r\n        }\r\n        else {\r\n            return this.handleInterception(token, request, next);\r\n        }\r\n    }\r\n}\r\nJwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) { return new (t || JwtInterceptor)(ɵngcc0.ɵɵinject(JWT_OPTIONS), ɵngcc0.ɵɵinject(JwtHelperService), ɵngcc0.ɵɵinject(DOCUMENT)); };\r\nJwtInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JwtInterceptor, factory: JwtInterceptor.ɵfac });\r\nJwtInterceptor.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [JWT_OPTIONS,] }] },\r\n    { type: JwtHelperService },\r\n    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JwtInterceptor, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [JWT_OPTIONS]\r\n            }] }, { type: JwtHelperService }, { type: Document, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\n\r\nclass JwtModule {\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error(\"JwtModule is already loaded. It should only be imported in your application's main module.\");\r\n        }\r\n    }\r\n    static forRoot(options) {\r\n        return {\r\n            ngModule: JwtModule,\r\n            providers: [\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: JwtInterceptor,\r\n                    multi: true,\r\n                },\r\n                options.jwtOptionsProvider || {\r\n                    provide: JWT_OPTIONS,\r\n                    useValue: options.config,\r\n                },\r\n                JwtHelperService,\r\n            ],\r\n        };\r\n    }\r\n}\r\nJwtModule.ɵfac = function JwtModule_Factory(t) { return new (t || JwtModule)(ɵngcc0.ɵɵinject(JwtModule, 12)); };\r\nJwtModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: JwtModule });\r\nJwtModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\r\nJwtModule.ctorParameters = () => [\r\n    { type: JwtModule, decorators: [{ type: Optional }, { type: SkipSelf }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JwtModule, [{\r\n        type: NgModule\r\n    }], function () { return [{ type: JwtModule, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: SkipSelf\r\n            }] }]; }, null); })();\r\n\r\n/*\r\n * Public API Surface of angular-jwt\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { JWT_OPTIONS, JwtHelperService, JwtInterceptor, JwtModule };\r\n\r\n//# sourceMappingURL=auth0-angular-jwt.js.map"]},"metadata":{},"sourceType":"module"}