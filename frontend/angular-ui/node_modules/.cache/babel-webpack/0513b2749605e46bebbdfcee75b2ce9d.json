{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at\r\n * http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at\r\n * http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\nimport { AttributePart, directive } from '../lit-html.js';\nvar previousValues = new WeakMap();\n/**\r\n * For AttributeParts, sets the attribute if the value is defined and removes\r\n * the attribute if the value is undefined.\r\n *\r\n * For other part types, this directive is a no-op.\r\n */\n\nexport var ifDefined = directive(function (value) {\n  return function (part) {\n    var previousValue = previousValues.get(part);\n\n    if (value === undefined && part instanceof AttributePart) {\n      // If the value is undefined, remove the attribute, but only if the value\n      // was previously defined.\n      if (previousValue !== undefined || !previousValues.has(part)) {\n        var name = part.committer.name;\n        part.committer.element.removeAttribute(name);\n      }\n    } else if (value !== previousValue) {\n      part.setValue(value);\n    }\n\n    previousValues.set(part, value);\n  };\n}); //# sourceMappingURL=if-defined.js.map","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/17portalnew/CNS-Portal/frontend/angular-ui/node_modules/lit-html/directives/if-defined.js"],"names":["AttributePart","directive","previousValues","WeakMap","ifDefined","value","part","previousValue","get","undefined","has","name","committer","element","removeAttribute","setValue","set"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,gBAAzC;AACA,IAAMC,cAAc,GAAG,IAAIC,OAAJ,EAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,SAAS,GAAGH,SAAS,CAAC,UAACI,KAAD;AAAA,SAAW,UAACC,IAAD,EAAU;AACpD,QAAMC,aAAa,GAAGL,cAAc,CAACM,GAAf,CAAmBF,IAAnB,CAAtB;;AACA,QAAID,KAAK,KAAKI,SAAV,IAAuBH,IAAI,YAAYN,aAA3C,EAA0D;AACtD;AACA;AACA,UAAIO,aAAa,KAAKE,SAAlB,IAA+B,CAACP,cAAc,CAACQ,GAAf,CAAmBJ,IAAnB,CAApC,EAA8D;AAC1D,YAAMK,IAAI,GAAGL,IAAI,CAACM,SAAL,CAAeD,IAA5B;AACAL,QAAAA,IAAI,CAACM,SAAL,CAAeC,OAAf,CAAuBC,eAAvB,CAAuCH,IAAvC;AACH;AACJ,KAPD,MAQK,IAAIN,KAAK,KAAKE,aAAd,EAA6B;AAC9BD,MAAAA,IAAI,CAACS,QAAL,CAAcV,KAAd;AACH;;AACDH,IAAAA,cAAc,CAACc,GAAf,CAAmBV,IAAnB,EAAyBD,KAAzB;AACH,GAdkC;AAAA,CAAD,CAA3B,C,CAeP","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at\r\n * http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at\r\n * http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\nimport { AttributePart, directive } from '../lit-html.js';\r\nconst previousValues = new WeakMap();\r\n/**\r\n * For AttributeParts, sets the attribute if the value is defined and removes\r\n * the attribute if the value is undefined.\r\n *\r\n * For other part types, this directive is a no-op.\r\n */\r\nexport const ifDefined = directive((value) => (part) => {\r\n    const previousValue = previousValues.get(part);\r\n    if (value === undefined && part instanceof AttributePart) {\r\n        // If the value is undefined, remove the attribute, but only if the value\r\n        // was previously defined.\r\n        if (previousValue !== undefined || !previousValues.has(part)) {\r\n            const name = part.committer.name;\r\n            part.committer.element.removeAttribute(name);\r\n        }\r\n    }\r\n    else if (value !== previousValue) {\r\n        part.setValue(value);\r\n    }\r\n    previousValues.set(part, value);\r\n});\r\n//# sourceMappingURL=if-defined.js.map"]},"metadata":{},"sourceType":"module"}