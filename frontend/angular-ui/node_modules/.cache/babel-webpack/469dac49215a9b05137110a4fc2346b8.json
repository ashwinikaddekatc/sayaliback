{"ast":null,"code":"import _classCallCheck from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport var EventEmitter = /*#__PURE__*/function () {\n  function EventEmitter(target, eventName) {\n    _classCallCheck(this, EventEmitter);\n\n    this.target = target;\n    this.eventName = eventName;\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"emit\",\n    value: function emit(value, options) {\n      this.target.dispatchEvent(new CustomEvent(this.eventName, Object.assign({\n        detail: value\n      }, options)));\n    }\n  }]);\n\n  return EventEmitter;\n}(); // Legacy TS Decorator\n\nfunction legacyEvent(descriptor, protoOrDescriptor, name) {\n  Object.defineProperty(protoOrDescriptor, name, descriptor);\n} // TC39 Decorators proposal\n\n\nfunction standardEvent(descriptor, element) {\n  return {\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor: descriptor\n  };\n}\n\nexport function event() {\n  return function (protoOrDescriptor, name) {\n    var descriptor = {\n      get: function get() {\n        return new EventEmitter(this, name !== undefined ? name : protoOrDescriptor.key);\n      },\n      enumerable: true,\n      configurable: true\n    };\n    return name !== undefined ? legacyEvent(descriptor, protoOrDescriptor, name) : standardEvent(descriptor, protoOrDescriptor);\n  };\n} //# sourceMappingURL=event.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@cds/core/internal/decorators/event.js"],"names":["EventEmitter","target","eventName","value","options","dispatchEvent","CustomEvent","Object","assign","detail","legacyEvent","descriptor","protoOrDescriptor","name","defineProperty","standardEvent","element","kind","placement","key","event","get","undefined","enumerable","configurable"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,WAAaA,YAAb;AACI,wBAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AAJL;AAAA;AAAA,WAKI,cAAKC,KAAL,EAAYC,OAAZ,EAAqB;AACjB,WAAKH,MAAL,CAAYI,aAAZ,CAA0B,IAAIC,WAAJ,CAAgB,KAAKJ,SAArB,EAAgCK,MAAM,CAACC,MAAP,CAAc;AAAEC,QAAAA,MAAM,EAAEN;AAAV,OAAd,EAAiCC,OAAjC,CAAhC,CAA1B;AACH;AAPL;;AAAA;AAAA,I,CASA;;AACA,SAASM,WAAT,CAAqBC,UAArB,EAAiCC,iBAAjC,EAAoDC,IAApD,EAA0D;AACtDN,EAAAA,MAAM,CAACO,cAAP,CAAsBF,iBAAtB,EAAyCC,IAAzC,EAA+CF,UAA/C;AACH,C,CACD;;;AACA,SAASI,aAAT,CAAuBJ,UAAvB,EAAmCK,OAAnC,EAA4C;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHC,IAAAA,SAAS,EAAE,WAFR;AAGHC,IAAAA,GAAG,EAAEH,OAAO,CAACG,GAHV;AAIHR,IAAAA,UAAU,EAAVA;AAJG,GAAP;AAMH;;AACD,OAAO,SAASS,KAAT,GAAiB;AACpB,SAAO,UAACR,iBAAD,EAAoBC,IAApB,EAA6B;AAChC,QAAMF,UAAU,GAAG;AACfU,MAAAA,GADe,iBACT;AACF,eAAO,IAAIrB,YAAJ,CAAiB,IAAjB,EAAuBa,IAAI,KAAKS,SAAT,GAAqBT,IAArB,GAA4BD,iBAAiB,CAACO,GAArE,CAAP;AACH,OAHc;AAIfI,MAAAA,UAAU,EAAE,IAJG;AAKfC,MAAAA,YAAY,EAAE;AALC,KAAnB;AAOA,WAAOX,IAAI,KAAKS,SAAT,GACDZ,WAAW,CAACC,UAAD,EAAaC,iBAAb,EAAgCC,IAAhC,CADV,GAEDE,aAAa,CAACJ,UAAD,EAAaC,iBAAb,CAFnB;AAGH,GAXD;AAYH,C,CACD","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport class EventEmitter {\n    constructor(target, eventName) {\n        this.target = target;\n        this.eventName = eventName;\n    }\n    emit(value, options) {\n        this.target.dispatchEvent(new CustomEvent(this.eventName, Object.assign({ detail: value }, options)));\n    }\n}\n// Legacy TS Decorator\nfunction legacyEvent(descriptor, protoOrDescriptor, name) {\n    Object.defineProperty(protoOrDescriptor, name, descriptor);\n}\n// TC39 Decorators proposal\nfunction standardEvent(descriptor, element) {\n    return {\n        kind: 'method',\n        placement: 'prototype',\n        key: element.key,\n        descriptor,\n    };\n}\nexport function event() {\n    return (protoOrDescriptor, name) => {\n        const descriptor = {\n            get() {\n                return new EventEmitter(this, name !== undefined ? name : protoOrDescriptor.key);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return name !== undefined\n            ? legacyEvent(descriptor, protoOrDescriptor, name)\n            : standardEvent(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=event.js.map"]},"metadata":{},"sourceType":"module"}