{"ast":null,"code":"/*\r\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\n\n/**\r\n * sleep() is used in animation code and also in some unit tests where async behavior needs to\r\n * be tested.\r\n *\r\n * Use sleep() inside an async function to delay execution for a short period of time.\r\n *\r\n * ```\r\n * async function ohai() {\r\n *    await sleep(55); // delays execution by at least 55 ms\r\n *    return 'ohai';\r\n * }\r\n * ```\r\n *\r\n * NOTE: the time sent to sleep is the MINIMUM time duration to execution. It is not and will not\r\n * be the exact time to execution.\r\n *\r\n */\nexport function sleep() {\n  var millisecondsToWait = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, millisecondsToWait);\n  });\n} //# sourceMappingURL=async.js.map","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@cds/core/internal/utils/async.js"],"names":["sleep","millisecondsToWait","Promise","resolve","setTimeout"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,KAAT,GAAwC;AAAA,MAAzBC,kBAAyB,uEAAJ,EAAI;AAC3C,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,kBAAV,CAAd;AAAA,GAAnB,CAAP;AACH,C,CACD","sourcesContent":["/*\r\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\r\n/**\r\n * sleep() is used in animation code and also in some unit tests where async behavior needs to\r\n * be tested.\r\n *\r\n * Use sleep() inside an async function to delay execution for a short period of time.\r\n *\r\n * ```\r\n * async function ohai() {\r\n *    await sleep(55); // delays execution by at least 55 ms\r\n *    return 'ohai';\r\n * }\r\n * ```\r\n *\r\n * NOTE: the time sent to sleep is the MINIMUM time duration to execution. It is not and will not\r\n * be the exact time to execution.\r\n *\r\n */\r\nexport function sleep(millisecondsToWait = 10) {\r\n    return new Promise(resolve => setTimeout(resolve, millisecondsToWait));\r\n}\r\n//# sourceMappingURL=async.js.map"]},"metadata":{},"sourceType":"module"}