{"ast":null,"code":"import _classCallCheck from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { browserFeatures } from '../utils/supports.js';\n/**\r\n * @internal\r\n * This base class allows us to conditionally apply the css shim needed\r\n * for Safari to use CSS Gap API. CSS Gap is used within our layout utilities.\r\n *\r\n * The shim is loaded in the `base.element.scss` and conditionally applied\r\n * when the `_nfg` (no flex gap) attribute is on the component. Unfortunately\r\n * there is no way to detect flex gap support with only CSS and JS is required.\r\n *\r\n * The Class is applied during the registration step of the custom element.\r\n * This shim CSS is also applied at the global level for applications in\r\n * the `module.shims.css` file.\r\n *\r\n * Once Safari ships Flex Gap support this can be removed. Currently Safari\r\n * supports Flex Gap in the Safari Technical Preview so it should be available\r\n * in the next major release.\r\n */\n\nexport function applyCSSGapShim(elementClass) {\n  var GapShim = /*#__PURE__*/function (_elementClass) {\n    _inherits(GapShim, _elementClass);\n\n    var _super = _createSuper(GapShim);\n\n    function GapShim() {\n      _classCallCheck(this, GapShim);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(GapShim, [{\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(GapShim.prototype), \"connectedCallback\", this).call(this);\n\n        this.setAttribute('_nfg', '');\n      }\n    }]);\n\n    return GapShim;\n  }(elementClass);\n\n  return browserFeatures.supports.flexGap ? elementClass : GapShim;\n} //# sourceMappingURL=css-gap.base.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@cds/core/internal/base/css-gap.base.js"],"names":["browserFeatures","applyCSSGapShim","elementClass","GapShim","setAttribute","supports","flexGap"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,sBAAhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,YAAzB,EAAuC;AAAA,MACpCC,OADoC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,aAEtC,6BAAoB;AAChB;;AACA,aAAKC,YAAL,CAAkB,MAAlB,EAA0B,EAA1B;AACH;AALqC;;AAAA;AAAA,IACpBF,YADoB;;AAO1C,SAAOF,eAAe,CAACK,QAAhB,CAAyBC,OAAzB,GAAmCJ,YAAnC,GAAkDC,OAAzD;AACH,C,CACD","sourcesContent":["import { browserFeatures } from '../utils/supports.js';\r\n/**\r\n * @internal\r\n * This base class allows us to conditionally apply the css shim needed\r\n * for Safari to use CSS Gap API. CSS Gap is used within our layout utilities.\r\n *\r\n * The shim is loaded in the `base.element.scss` and conditionally applied\r\n * when the `_nfg` (no flex gap) attribute is on the component. Unfortunately\r\n * there is no way to detect flex gap support with only CSS and JS is required.\r\n *\r\n * The Class is applied during the registration step of the custom element.\r\n * This shim CSS is also applied at the global level for applications in\r\n * the `module.shims.css` file.\r\n *\r\n * Once Safari ships Flex Gap support this can be removed. Currently Safari\r\n * supports Flex Gap in the Safari Technical Preview so it should be available\r\n * in the next major release.\r\n */\r\nexport function applyCSSGapShim(elementClass) {\r\n    class GapShim extends elementClass {\r\n        connectedCallback() {\r\n            super.connectedCallback();\r\n            this.setAttribute('_nfg', '');\r\n        }\r\n    }\r\n    return browserFeatures.supports.flexGap ? elementClass : GapShim;\r\n}\r\n//# sourceMappingURL=css-gap.base.js.map"]},"metadata":{},"sourceType":"module"}