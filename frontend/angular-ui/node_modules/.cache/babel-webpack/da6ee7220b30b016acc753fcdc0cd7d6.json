{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xfilter from \"./internal/_xfilter.js\";\nimport keys from \"./keys.js\";\n/**\r\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\r\n * same type containing the members of the given filterable which satisfy the\r\n * given predicate. Filterable objects include plain objects or any object\r\n * that has a filter method such as `Array`.\r\n *\r\n * Dispatches to the `filter` method of the second argument, if present.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\r\n * @param {Function} pred\r\n * @param {Array} filterable\r\n * @return {Array} Filterable\r\n * @see R.reject, R.transduce, R.addIndex\r\n * @example\r\n *\r\n *      const isEven = n => n % 2 === 0;\r\n *\r\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\r\n *\r\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\r\n */\n\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;","map":{"version":3,"sources":["C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/ramda/es/filter.js"],"names":["_curry2","_dispatchable","_filter","_isObject","_reduce","_xfilter","keys","filter","pred","filterable","acc","key"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GACV,aACAP,OAAO,EACP,aACAC,aAAa,CAAC,CAAC,QAAD,CAAD,EAAaI,QAAb,EAAuB,UAAUG,IAAV,EAAgBC,UAAhB,EAA4B;AAC9D,SAAON,SAAS,CAACM,UAAD,CAAT,GAAwBL,OAAO,CAAC,UAAUM,GAAV,EAAeC,GAAf,EAAoB;AACzD,QAAIH,IAAI,CAACC,UAAU,CAACE,GAAD,CAAX,CAAR,EAA2B;AACzBD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWF,UAAU,CAACE,GAAD,CAArB;AACD;;AAED,WAAOD,GAAP;AACD,GANqC,EAMnC,EANmC,EAM/BJ,IAAI,CAACG,UAAD,CAN2B,CAA/B,GAMoB;AAC3BP,EAAAA,OAAO,CAACM,IAAD,EAAOC,UAAP,CAPP;AAQD,CATY,CAFN,CAFP;;AAeA,eAAeF,MAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\r\nimport _dispatchable from \"./internal/_dispatchable.js\";\r\nimport _filter from \"./internal/_filter.js\";\r\nimport _isObject from \"./internal/_isObject.js\";\r\nimport _reduce from \"./internal/_reduce.js\";\r\nimport _xfilter from \"./internal/_xfilter.js\";\r\nimport keys from \"./keys.js\";\r\n/**\r\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\r\n * same type containing the members of the given filterable which satisfy the\r\n * given predicate. Filterable objects include plain objects or any object\r\n * that has a filter method such as `Array`.\r\n *\r\n * Dispatches to the `filter` method of the second argument, if present.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\r\n * @param {Function} pred\r\n * @param {Array} filterable\r\n * @return {Array} Filterable\r\n * @see R.reject, R.transduce, R.addIndex\r\n * @example\r\n *\r\n *      const isEven = n => n % 2 === 0;\r\n *\r\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\r\n *\r\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\r\n */\r\n\r\nvar filter =\r\n/*#__PURE__*/\r\n_curry2(\r\n/*#__PURE__*/\r\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\r\n  return _isObject(filterable) ? _reduce(function (acc, key) {\r\n    if (pred(filterable[key])) {\r\n      acc[key] = filterable[key];\r\n    }\r\n\r\n    return acc;\r\n  }, {}, keys(filterable)) : // else\r\n  _filter(pred, filterable);\r\n}));\r\n\r\nexport default filter;"]},"metadata":{},"sourceType":"module"}