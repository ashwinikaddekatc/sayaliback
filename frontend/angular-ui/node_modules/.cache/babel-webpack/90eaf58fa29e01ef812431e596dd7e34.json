{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _templateObject, _templateObject2;\n\n/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement } from 'lit-element';\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\nimport { property, internalProperty } from '../decorators/property.js';\nimport { querySlot } from '../decorators/query-slot.js';\nimport { onAnyKey } from '../utils/keycodes.js';\nimport { stopEvent } from './../utils/events.js'; // @dynamic\n\nexport var CdsBaseButton = /*#__PURE__*/function (_LitElement) {\n  _inherits(CdsBaseButton, _LitElement);\n\n  var _super = _createSuper(CdsBaseButton);\n\n  function CdsBaseButton() {\n    var _this;\n\n    _classCallCheck(this, CdsBaseButton);\n\n    _this = _super.apply(this, arguments);\n    _this.readonly = false;\n    _this.disabled = false;\n    _this.ariaDisabled = 'false';\n    _this.focused = false;\n    _this.active = false;\n    _this.role = 'button';\n    _this.isAnchor = false;\n    return _this;\n  }\n\n  _createClass(CdsBaseButton, [{\n    key: \"render\",\n    value: function render() {\n      return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\" <slot></slot> \"])));\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(CdsBaseButton.prototype), \"connectedCallback\", this).call(this);\n\n      this.tabIndex = 0; // initialize immediately so button can be focused synchronously\n    }\n  }, {\n    key: \"updated\",\n    value: function updated(props) {\n      _get(_getPrototypeOf(CdsBaseButton.prototype), \"updated\", this).call(this, props);\n\n      this.updateButtonAttributes(props);\n    }\n    /** This mimics the mouse-click visual behavior for keyboard only users and screen readers.\r\n     * Browsers do not apply the CSS psuedo-selector :active in those instances. So we need this\r\n     * for our :active styles to show.\r\n     *\r\n     * Make sure to update a component's CSS to account for the presence of the [_active] attribute\r\n     * in all instance where :active is defined.\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"showClick\",\n    value: function showClick() {\n      var _this2 = this;\n\n      this.active = true;\n      var clickTimer = setTimeout(function () {\n        _this2.active = false;\n        clearTimeout(clickTimer);\n      }, 300);\n    }\n  }, {\n    key: \"setupNativeButtonBehavior\",\n    value: function setupNativeButtonBehavior(readonly) {\n      if (readonly) {\n        this.removeEventListener('click', this.triggerNativeButtonBehavior);\n        this.removeEventListener('keydown', this.emulateKeyBoardEventBehavior);\n      } else {\n        this.addEventListener('click', this.triggerNativeButtonBehavior);\n        this.addEventListener('keydown', this.emulateKeyBoardEventBehavior);\n      }\n    }\n    /**\r\n     * We have to append a hidden button outside the web component in the light DOM\r\n     * This allows us to trigger native submit events within a form element.\r\n     */\n\n  }, {\n    key: \"triggerNativeButtonBehavior\",\n    value: function triggerNativeButtonBehavior(event) {\n      if (!this.readonly) {\n        if (this.disabled) {\n          stopEvent(event);\n        } else if (!event.defaultPrevented) {\n          var buttonTemplate = html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<button\\n          class=\\\"cds-hidden-button\\\"\\n          aria-hidden=\\\"true\\\"\\n          ?disabled=\\\"\", \"\\\"\\n          tabindex=\\\"-1\\\"\\n          style=\\\"display: none !important\\\"\\n          value=\\\"\", \"\\\"\\n          name=\\\"\", \"\\\"\\n          type=\\\"\", \"\\\"\\n        ></button>\"])), this.disabled, ifDefined(this.value), ifDefined(this.name), ifDefined(this.type));\n          this.showClick();\n          this.appendChild(buttonTemplate.getTemplateElement().content.cloneNode(true));\n          var button = this.querySelector('.cds-hidden-button');\n          button.dispatchEvent(new MouseEvent('click', {\n            relatedTarget: this,\n            composed: true\n          }));\n          button.remove();\n        }\n      }\n    }\n  }, {\n    key: \"emulateKeyBoardEventBehavior\",\n    value: function emulateKeyBoardEventBehavior(evt) {\n      var _this3 = this;\n\n      onAnyKey(['enter', 'space'], evt, function () {\n        _this3.click();\n\n        stopEvent(evt);\n      });\n    }\n  }, {\n    key: \"updateButtonAttributes\",\n    value: function updateButtonAttributes(props) {\n      var _a;\n\n      this.isAnchor = ((_a = this.parentElement) === null || _a === void 0 ? void 0 : _a.tagName) === 'A';\n\n      if (this.isAnchor && this.parentElement) {\n        this.parentElement.style.lineHeight = '0';\n        this.parentElement.style.textDecoration = 'none'; // fixes issue when style is applied to text node\n      }\n\n      this.readonly = this.readonly || this.isAnchor;\n\n      if (this.readonly) {\n        this.role = null;\n        this.tabIndexAttr = null;\n        this.ariaDisabled = null;\n      } else {\n        this.role = 'button';\n        this.tabIndexAttr = this.disabled ? -1 : 0;\n        this.ariaDisabled = this.disabled ? 'true' : 'false';\n      }\n\n      if (props.has('readonly')) {\n        this.setupNativeButtonBehavior(this.readonly);\n      }\n    }\n  }]);\n\n  return CdsBaseButton;\n}(LitElement);\n\n__decorate([property({\n  type: Boolean\n})], CdsBaseButton.prototype, \"readonly\", void 0);\n\n__decorate([property({\n  type: String\n})], CdsBaseButton.prototype, \"type\", void 0);\n\n__decorate([property({\n  type: String\n})], CdsBaseButton.prototype, \"name\", void 0);\n\n__decorate([property({\n  type: String\n})], CdsBaseButton.prototype, \"value\", void 0);\n\n__decorate([property({\n  type: Boolean\n})], CdsBaseButton.prototype, \"disabled\", void 0);\n\n__decorate([internalProperty({\n  type: String,\n  attribute: 'aria-disabled',\n  reflect: true\n})], CdsBaseButton.prototype, \"ariaDisabled\", void 0);\n\n__decorate([internalProperty({\n  type: Number,\n  attribute: 'tabindex',\n  reflect: true\n})], CdsBaseButton.prototype, \"tabIndexAttr\", void 0);\n\n__decorate([internalProperty({\n  type: Boolean,\n  reflect: true\n})], CdsBaseButton.prototype, \"focused\", void 0);\n\n__decorate([internalProperty({\n  type: Boolean,\n  reflect: true\n})], CdsBaseButton.prototype, \"active\", void 0);\n\n__decorate([internalProperty({\n  type: String,\n  reflect: true,\n  attribute: 'role'\n})], CdsBaseButton.prototype, \"role\", void 0);\n\n__decorate([internalProperty({\n  type: Boolean,\n  reflect: true\n})], CdsBaseButton.prototype, \"isAnchor\", void 0);\n\n__decorate([querySlot('cds-icon')], CdsBaseButton.prototype, \"icon\", void 0);\n\n__decorate([querySlot('cds-badge')], CdsBaseButton.prototype, \"badge\", void 0); //# sourceMappingURL=button.base.js.map","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@cds/core/internal/base/button.base.js"],"names":["__decorate","html","LitElement","ifDefined","property","internalProperty","querySlot","onAnyKey","stopEvent","CdsBaseButton","arguments","readonly","disabled","ariaDisabled","focused","active","role","isAnchor","tabIndex","props","updateButtonAttributes","clickTimer","setTimeout","clearTimeout","removeEventListener","triggerNativeButtonBehavior","emulateKeyBoardEventBehavior","addEventListener","event","defaultPrevented","buttonTemplate","value","name","type","showClick","appendChild","getTemplateElement","content","cloneNode","button","querySelector","dispatchEvent","MouseEvent","relatedTarget","composed","remove","evt","click","_a","parentElement","tagName","style","lineHeight","textDecoration","tabIndexAttr","has","setupNativeButtonBehavior","Boolean","prototype","String","attribute","reflect","Number"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\r\nimport { __decorate } from \"tslib\";\r\nimport { html, LitElement } from 'lit-element';\r\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\r\nimport { property, internalProperty } from '../decorators/property.js';\r\nimport { querySlot } from '../decorators/query-slot.js';\r\nimport { onAnyKey } from '../utils/keycodes.js';\r\nimport { stopEvent } from './../utils/events.js';\r\n// @dynamic\r\nexport class CdsBaseButton extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.readonly = false;\r\n        this.disabled = false;\r\n        this.ariaDisabled = 'false';\r\n        this.focused = false;\r\n        this.active = false;\r\n        this.role = 'button';\r\n        this.isAnchor = false;\r\n    }\r\n    render() {\r\n        return html ` <slot></slot> `;\r\n    }\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        this.tabIndex = 0; // initialize immediately so button can be focused synchronously\r\n    }\r\n    updated(props) {\r\n        super.updated(props);\r\n        this.updateButtonAttributes(props);\r\n    }\r\n    /** This mimics the mouse-click visual behavior for keyboard only users and screen readers.\r\n     * Browsers do not apply the CSS psuedo-selector :active in those instances. So we need this\r\n     * for our :active styles to show.\r\n     *\r\n     * Make sure to update a component's CSS to account for the presence of the [_active] attribute\r\n     * in all instance where :active is defined.\r\n     *\r\n     * @private\r\n     */\r\n    showClick() {\r\n        this.active = true;\r\n        const clickTimer = setTimeout(() => {\r\n            this.active = false;\r\n            clearTimeout(clickTimer);\r\n        }, 300);\r\n    }\r\n    setupNativeButtonBehavior(readonly) {\r\n        if (readonly) {\r\n            this.removeEventListener('click', this.triggerNativeButtonBehavior);\r\n            this.removeEventListener('keydown', this.emulateKeyBoardEventBehavior);\r\n        }\r\n        else {\r\n            this.addEventListener('click', this.triggerNativeButtonBehavior);\r\n            this.addEventListener('keydown', this.emulateKeyBoardEventBehavior);\r\n        }\r\n    }\r\n    /**\r\n     * We have to append a hidden button outside the web component in the light DOM\r\n     * This allows us to trigger native submit events within a form element.\r\n     */\r\n    triggerNativeButtonBehavior(event) {\r\n        if (!this.readonly) {\r\n            if (this.disabled) {\r\n                stopEvent(event);\r\n            }\r\n            else if (!event.defaultPrevented) {\r\n                const buttonTemplate = html `<button\r\n          class=\"cds-hidden-button\"\r\n          aria-hidden=\"true\"\r\n          ?disabled=\"${this.disabled}\"\r\n          tabindex=\"-1\"\r\n          style=\"display: none !important\"\r\n          value=\"${ifDefined(this.value)}\"\r\n          name=\"${ifDefined(this.name)}\"\r\n          type=\"${ifDefined(this.type)}\"\r\n        ></button>`;\r\n                this.showClick();\r\n                this.appendChild(buttonTemplate.getTemplateElement().content.cloneNode(true));\r\n                const button = this.querySelector('.cds-hidden-button');\r\n                button.dispatchEvent(new MouseEvent('click', { relatedTarget: this, composed: true }));\r\n                button.remove();\r\n            }\r\n        }\r\n    }\r\n    emulateKeyBoardEventBehavior(evt) {\r\n        onAnyKey(['enter', 'space'], evt, () => {\r\n            this.click();\r\n            stopEvent(evt);\r\n        });\r\n    }\r\n    updateButtonAttributes(props) {\r\n        var _a;\r\n        this.isAnchor = ((_a = this.parentElement) === null || _a === void 0 ? void 0 : _a.tagName) === 'A';\r\n        if (this.isAnchor && this.parentElement) {\r\n            this.parentElement.style.lineHeight = '0';\r\n            this.parentElement.style.textDecoration = 'none'; // fixes issue when style is applied to text node\r\n        }\r\n        this.readonly = this.readonly || this.isAnchor;\r\n        if (this.readonly) {\r\n            this.role = null;\r\n            this.tabIndexAttr = null;\r\n            this.ariaDisabled = null;\r\n        }\r\n        else {\r\n            this.role = 'button';\r\n            this.tabIndexAttr = this.disabled ? -1 : 0;\r\n            this.ariaDisabled = this.disabled ? 'true' : 'false';\r\n        }\r\n        if (props.has('readonly')) {\r\n            this.setupNativeButtonBehavior(this.readonly);\r\n        }\r\n    }\r\n}\r\n__decorate([\r\n    property({ type: Boolean })\r\n], CdsBaseButton.prototype, \"readonly\", void 0);\r\n__decorate([\r\n    property({ type: String })\r\n], CdsBaseButton.prototype, \"type\", void 0);\r\n__decorate([\r\n    property({ type: String })\r\n], CdsBaseButton.prototype, \"name\", void 0);\r\n__decorate([\r\n    property({ type: String })\r\n], CdsBaseButton.prototype, \"value\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], CdsBaseButton.prototype, \"disabled\", void 0);\r\n__decorate([\r\n    internalProperty({ type: String, attribute: 'aria-disabled', reflect: true })\r\n], CdsBaseButton.prototype, \"ariaDisabled\", void 0);\r\n__decorate([\r\n    internalProperty({ type: Number, attribute: 'tabindex', reflect: true })\r\n], CdsBaseButton.prototype, \"tabIndexAttr\", void 0);\r\n__decorate([\r\n    internalProperty({ type: Boolean, reflect: true })\r\n], CdsBaseButton.prototype, \"focused\", void 0);\r\n__decorate([\r\n    internalProperty({ type: Boolean, reflect: true })\r\n], CdsBaseButton.prototype, \"active\", void 0);\r\n__decorate([\r\n    internalProperty({ type: String, reflect: true, attribute: 'role' })\r\n], CdsBaseButton.prototype, \"role\", void 0);\r\n__decorate([\r\n    internalProperty({ type: Boolean, reflect: true })\r\n], CdsBaseButton.prototype, \"isAnchor\", void 0);\r\n__decorate([\r\n    querySlot('cds-icon')\r\n], CdsBaseButton.prototype, \"icon\", void 0);\r\n__decorate([\r\n    querySlot('cds-badge')\r\n], CdsBaseButton.prototype, \"badge\", void 0);\r\n//# sourceMappingURL=button.base.js.map"]},"metadata":{},"sourceType":"module"}