{"ast":null,"code":"/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\nimport { property as prop } from 'lit-element';\nimport { camelCaseToKebabCase, kebabCaseToPascalCase, capitalizeFirstLetter } from '../utils/string.js';\nimport { LogService } from '../services/log.service.js';\nimport { getAngularVersion, getReactVersion, getVueVersion } from '../utils/framework.js';\nimport { isNilOrEmpty } from '../utils/identity.js';\n/**\r\n * https://developers.google.com/web/fundamentals/web-components/best-practices\r\n */\n\nexport function getDefaultOptions(propertyKey, options) {\n  var type = options ? options.type : options;\n\n  switch (type) {\n    case Array:\n      return Object.assign({\n        reflect: false\n      }, options);\n\n    case Object:\n      return Object.assign({\n        reflect: false\n      }, options);\n\n    case String:\n      return Object.assign({\n        reflect: true,\n        attribute: camelCaseToKebabCase(propertyKey),\n        converter: {\n          toAttribute: function toAttribute(value) {\n            return value ? value : null;\n          }\n        }\n      }, options);\n\n    case Number:\n      return Object.assign({\n        reflect: true,\n        attribute: camelCaseToKebabCase(propertyKey)\n      }, options);\n\n    case Boolean:\n      return Object.assign({\n        reflect: true,\n        attribute: camelCaseToKebabCase(propertyKey),\n        converter: {\n          // Mimic standard HTML boolean attributes + support \"false\" attribute values\n          // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n          toAttribute: function toAttribute(value) {\n            return value ? '' : null;\n          },\n          fromAttribute: function fromAttribute(value) {\n            return value !== 'false' && value !== null;\n          }\n        }\n      }, options);\n\n    case Date:\n      {\n        return Object.assign({\n          // Parse date strings from attributes but do not reflect back into attribute\n          reflect: false,\n          converter: {\n            fromAttribute: function fromAttribute(value) {\n              return new Date(value);\n            }\n          }\n        }, options);\n      }\n\n    default:\n      return options;\n  }\n}\nexport function requirePropertyCheck(protoOrDescriptor, name, options) {\n  var targetFirstUpdated = protoOrDescriptor.firstUpdated;\n\n  function firstUpdated(props) {\n    if (options && options.required && isNilOrEmpty(this[name])) {\n      var message = options.requiredMessage || getRequiredMessage(options.required, name, this.tagName);\n\n      if (options.required === 'error') {\n        throw new Error(message);\n      } else {\n        LogService.warn(message, this);\n      }\n    }\n\n    if (targetFirstUpdated) {\n      targetFirstUpdated.apply(this, [props]);\n    }\n  }\n\n  protoOrDescriptor.firstUpdated = firstUpdated;\n}\n\nfunction getRequiredMessage() {\n  var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'warning';\n  var propertyName = arguments.length > 1 ? arguments[1] : undefined;\n  var tagName = arguments.length > 2 ? arguments[2] : undefined;\n  var tag = tagName.toLocaleLowerCase();\n  return \"\".concat(capitalizeFirstLetter(level), \": \").concat(propertyName, \" is required to use \").concat(tag, \" component. Set the JS Property or HTML Attribute.\\n\\n\") + \"\".concat(getAngularVersion() ? \"Angular: <\".concat(tag, \" [\").concat(propertyName, \"]=\\\"...\\\"></\").concat(tag, \">\\n\") : '') + \"\".concat(getVueVersion() ? \"Vue: <\".concat(tag, \" :\").concat(propertyName, \"=\\\"...\\\"></\").concat(tag, \">\\n\") : '') + \"\".concat(getReactVersion() ? \"React: <\".concat(kebabCaseToPascalCase(tag), \" \").concat(propertyName, \"={...} />\\n\") : '') + \"\".concat(\"HTML: <\".concat(tag, \" \").concat(camelCaseToKebabCase(propertyName), \"=\\\"...\\\"></\").concat(tag, \">\\n\")) + \"\".concat(\"JavaScript: document.querySelector('\".concat(tag, \"').\").concat(propertyName, \" = '...';\\n\\n\"));\n}\n/**\r\n * lit-element @property decorator with custom defaults specific to Clarity.\r\n * https://lit-element.polymer-project.org/guide/properties#property-options\r\n *\r\n * A property decorator which creates a LitElement property which reflects a\r\n * corresponding attribute value. A PropertyDeclaration may optionally be\r\n * supplied to configure property features.\r\n *\r\n * @ExportDecoratedItems\r\n */\n\n\nexport function property(options) {\n  return function (protoOrDescriptor, name) {\n    requirePropertyCheck(protoOrDescriptor, name, options);\n    return prop(getDefaultOptions(name, options))(protoOrDescriptor, name);\n  };\n}\n/**\r\n * lit-element @internalProperty decorator with custom defaults specific to Clarity.\r\n *\r\n * This is used for communication between internal component properties\r\n * that are not exposed as part of the public component API.\r\n *\r\n * A internalProperty decorator which creates a LitElement property which will\r\n * trigger a re-render when set but not allow the value to be updated through\r\n * public attributes.\r\n *\r\n * @ExportDecoratedItems\r\n */\n\nexport function internalProperty(options) {\n  return function (protoOrDescriptor, name) {\n    var defaultOptions = getDefaultOptions(name, options);\n\n    if (defaultOptions) {\n      defaultOptions.reflect = (options === null || options === void 0 ? void 0 : options.reflect) ? options.reflect : false; // prevent attr reflection by default\n\n      if (defaultOptions.reflect && !(options === null || options === void 0 ? void 0 : options.attribute)) {\n        // mark as internal attr if reflect and no provided attr\n        // see description for more detail https://github.com/vmware/clarity/pull/5431\n        defaultOptions.attribute = \"_\".concat(camelCaseToKebabCase(name));\n      }\n    }\n\n    return prop(defaultOptions)(protoOrDescriptor, name);\n  };\n} //# sourceMappingURL=property.js.map","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/CNS-Portal/frontend/angular-ui/node_modules/@cds/core/internal/decorators/property.js"],"names":["property","prop","camelCaseToKebabCase","kebabCaseToPascalCase","capitalizeFirstLetter","LogService","getAngularVersion","getReactVersion","getVueVersion","isNilOrEmpty","getDefaultOptions","propertyKey","options","type","Array","Object","assign","reflect","String","attribute","converter","toAttribute","value","Number","Boolean","fromAttribute","Date","requirePropertyCheck","protoOrDescriptor","name","targetFirstUpdated","firstUpdated","props","required","message","requiredMessage","getRequiredMessage","tagName","Error","warn","apply","level","propertyName","tag","toLocaleLowerCase","internalProperty","defaultOptions"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\r\nimport { property as prop } from 'lit-element';\r\nimport { camelCaseToKebabCase, kebabCaseToPascalCase, capitalizeFirstLetter } from '../utils/string.js';\r\nimport { LogService } from '../services/log.service.js';\r\nimport { getAngularVersion, getReactVersion, getVueVersion } from '../utils/framework.js';\r\nimport { isNilOrEmpty } from '../utils/identity.js';\r\n/**\r\n * https://developers.google.com/web/fundamentals/web-components/best-practices\r\n */\r\nexport function getDefaultOptions(propertyKey, options) {\r\n    const type = options ? options.type : options;\r\n    switch (type) {\r\n        case Array:\r\n            return Object.assign({ reflect: false }, options);\r\n        case Object:\r\n            return Object.assign({ reflect: false }, options);\r\n        case String:\r\n            return Object.assign({ reflect: true, attribute: camelCaseToKebabCase(propertyKey), converter: {\r\n                    toAttribute: (value) => (value ? value : null),\r\n                } }, options);\r\n        case Number:\r\n            return Object.assign({ reflect: true, attribute: camelCaseToKebabCase(propertyKey) }, options);\r\n        case Boolean:\r\n            return Object.assign({ reflect: true, attribute: camelCaseToKebabCase(propertyKey), converter: {\r\n                    // Mimic standard HTML boolean attributes + support \"false\" attribute values\r\n                    // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\r\n                    toAttribute: (value) => (value ? '' : null),\r\n                    fromAttribute: (value) => value !== 'false' && value !== null,\r\n                } }, options);\r\n        case Date: {\r\n            return Object.assign({ \r\n                // Parse date strings from attributes but do not reflect back into attribute\r\n                reflect: false, converter: {\r\n                    fromAttribute: (value) => new Date(value),\r\n                } }, options);\r\n        }\r\n        default:\r\n            return options;\r\n    }\r\n}\r\nexport function requirePropertyCheck(protoOrDescriptor, name, options) {\r\n    const targetFirstUpdated = protoOrDescriptor.firstUpdated;\r\n    function firstUpdated(props) {\r\n        if (options && options.required && isNilOrEmpty(this[name])) {\r\n            const message = options.requiredMessage || getRequiredMessage(options.required, name, this.tagName);\r\n            if (options.required === 'error') {\r\n                throw new Error(message);\r\n            }\r\n            else {\r\n                LogService.warn(message, this);\r\n            }\r\n        }\r\n        if (targetFirstUpdated) {\r\n            targetFirstUpdated.apply(this, [props]);\r\n        }\r\n    }\r\n    protoOrDescriptor.firstUpdated = firstUpdated;\r\n}\r\nfunction getRequiredMessage(level = 'warning', propertyName, tagName) {\r\n    const tag = tagName.toLocaleLowerCase();\r\n    return (`${capitalizeFirstLetter(level)}: ${propertyName} is required to use ${tag} component. Set the JS Property or HTML Attribute.\\n\\n` +\r\n        `${getAngularVersion() ? `Angular: <${tag} [${propertyName}]=\"...\"></${tag}>\\n` : ''}` +\r\n        `${getVueVersion() ? `Vue: <${tag} :${propertyName}=\"...\"></${tag}>\\n` : ''}` +\r\n        `${getReactVersion() ? `React: <${kebabCaseToPascalCase(tag)} ${propertyName}={...} />\\n` : ''}` +\r\n        `${`HTML: <${tag} ${camelCaseToKebabCase(propertyName)}=\"...\"></${tag}>\\n`}` +\r\n        `${`JavaScript: document.querySelector('${tag}').${propertyName} = '...';\\n\\n`}`);\r\n}\r\n/**\r\n * lit-element @property decorator with custom defaults specific to Clarity.\r\n * https://lit-element.polymer-project.org/guide/properties#property-options\r\n *\r\n * A property decorator which creates a LitElement property which reflects a\r\n * corresponding attribute value. A PropertyDeclaration may optionally be\r\n * supplied to configure property features.\r\n *\r\n * @ExportDecoratedItems\r\n */\r\nexport function property(options) {\r\n    return (protoOrDescriptor, name) => {\r\n        requirePropertyCheck(protoOrDescriptor, name, options);\r\n        return prop(getDefaultOptions(name, options))(protoOrDescriptor, name);\r\n    };\r\n}\r\n/**\r\n * lit-element @internalProperty decorator with custom defaults specific to Clarity.\r\n *\r\n * This is used for communication between internal component properties\r\n * that are not exposed as part of the public component API.\r\n *\r\n * A internalProperty decorator which creates a LitElement property which will\r\n * trigger a re-render when set but not allow the value to be updated through\r\n * public attributes.\r\n *\r\n * @ExportDecoratedItems\r\n */\r\nexport function internalProperty(options) {\r\n    return (protoOrDescriptor, name) => {\r\n        const defaultOptions = getDefaultOptions(name, options);\r\n        if (defaultOptions) {\r\n            defaultOptions.reflect = (options === null || options === void 0 ? void 0 : options.reflect) ? options.reflect : false; // prevent attr reflection by default\r\n            if (defaultOptions.reflect && !(options === null || options === void 0 ? void 0 : options.attribute)) {\r\n                // mark as internal attr if reflect and no provided attr\r\n                // see description for more detail https://github.com/vmware/clarity/pull/5431\r\n                defaultOptions.attribute = `_${camelCaseToKebabCase(name)}`;\r\n            }\r\n        }\r\n        return prop(defaultOptions)(protoOrDescriptor, name);\r\n    };\r\n}\r\n//# sourceMappingURL=property.js.map"]},"metadata":{},"sourceType":"module"}