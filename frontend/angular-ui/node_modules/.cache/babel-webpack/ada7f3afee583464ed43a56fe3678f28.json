{"ast":null,"code":"/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\nexport function elementResize(element, callbackFn) {\n  var observer = new ResizeObserver(function () {\n    // We wrap the callback in requestAnimationFrame to\n    // avoid the error of \"ResizeObserver loop limit exceeded\".\n    window.requestAnimationFrame(function () {\n      return callbackFn();\n    });\n  });\n  observer.observe(element);\n  observer.__testTrigger = callbackFn; // hook to trigger resize event as ResizeObserver does not run in headless chrome.\n\n  return observer;\n}\n/**\r\n * Given a ResponsiveComponent this function will loop through a list of layout\r\n * options and change the layout of the component until the components layout\r\n * condition is satisfied.\r\n */\n\nexport function updateComponentLayout(component, layoutConfig, fn) {\n  return elementResize(component, function () {\n    if (component.responsive) {\n      calculateOptimalLayout(component, layoutConfig).then(function (updated) {\n        if (updated) {\n          fn();\n        }\n      });\n    }\n  });\n}\n\nfunction calculateOptimalLayout(component, layoutConfig) {\n  return component.updateComplete.then(function () {\n    var currentLayout = component.layout;\n    component.layout = layoutConfig.layouts[0];\n    return layoutConfig.layouts.reduce(function (prev, next) {\n      return prev.then(function () {\n        if (component.layout === layoutConfig.initialLayout) {\n          return next;\n        } else {\n          var _prev = component.layout;\n          component.layout = next;\n          return component.updateComplete.then(function () {\n            component.layout = component.layoutStable ? component.layout : _prev;\n            return next;\n          });\n        }\n      });\n    }, Promise.resolve(layoutConfig.layouts[0])).then(function () {\n      return currentLayout !== component.layout;\n    });\n  });\n} //# sourceMappingURL=responsive.js.map","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/19portal/CNS-Portal/frontend/angular-ui/node_modules/@cds/core/internal/utils/responsive.js"],"names":["elementResize","element","callbackFn","observer","ResizeObserver","window","requestAnimationFrame","observe","__testTrigger","updateComponentLayout","component","layoutConfig","fn","responsive","calculateOptimalLayout","then","updated","updateComplete","currentLayout","layout","layouts","reduce","prev","next","initialLayout","layoutStable","Promise","resolve"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAT,CAAuBC,OAAvB,EAAgCC,UAAhC,EAA4C;AAC/C,MAAMC,QAAQ,GAAG,IAAIC,cAAJ,CAAmB,YAAM;AACtC;AACA;AACAC,IAAAA,MAAM,CAACC,qBAAP,CAA6B;AAAA,aAAMJ,UAAU,EAAhB;AAAA,KAA7B;AACH,GAJgB,CAAjB;AAKAC,EAAAA,QAAQ,CAACI,OAAT,CAAiBN,OAAjB;AACAE,EAAAA,QAAQ,CAACK,aAAT,GAAyBN,UAAzB,CAP+C,CAOV;;AACrC,SAAOC,QAAP;AACH;AACD;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,qBAAT,CAA+BC,SAA/B,EAA0CC,YAA1C,EAAwDC,EAAxD,EAA4D;AAC/D,SAAOZ,aAAa,CAACU,SAAD,EAAY,YAAM;AAClC,QAAIA,SAAS,CAACG,UAAd,EAA0B;AACtBC,MAAAA,sBAAsB,CAACJ,SAAD,EAAYC,YAAZ,CAAtB,CAAgDI,IAAhD,CAAqD,UAAAC,OAAO,EAAI;AAC5D,YAAIA,OAAJ,EAAa;AACTJ,UAAAA,EAAE;AACL;AACJ,OAJD;AAKH;AACJ,GARmB,CAApB;AASH;;AACD,SAASE,sBAAT,CAAgCJ,SAAhC,EAA2CC,YAA3C,EAAyD;AACrD,SAAOD,SAAS,CAACO,cAAV,CAAyBF,IAAzB,CAA8B,YAAM;AACvC,QAAMG,aAAa,GAAGR,SAAS,CAACS,MAAhC;AACAT,IAAAA,SAAS,CAACS,MAAV,GAAmBR,YAAY,CAACS,OAAb,CAAqB,CAArB,CAAnB;AACA,WAAOT,YAAY,CAACS,OAAb,CACFC,MADE,CACK,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACxB,aAAOD,IAAI,CAACP,IAAL,CAAU,YAAM;AACnB,YAAIL,SAAS,CAACS,MAAV,KAAqBR,YAAY,CAACa,aAAtC,EAAqD;AACjD,iBAAOD,IAAP;AACH,SAFD,MAGK;AACD,cAAMD,KAAI,GAAGZ,SAAS,CAACS,MAAvB;AACAT,UAAAA,SAAS,CAACS,MAAV,GAAmBI,IAAnB;AACA,iBAAOb,SAAS,CAACO,cAAV,CAAyBF,IAAzB,CAA8B,YAAM;AACvCL,YAAAA,SAAS,CAACS,MAAV,GAAmBT,SAAS,CAACe,YAAV,GAAyBf,SAAS,CAACS,MAAnC,GAA4CG,KAA/D;AACA,mBAAOC,IAAP;AACH,WAHM,CAAP;AAIH;AACJ,OAZM,CAAP;AAaH,KAfM,EAeJG,OAAO,CAACC,OAAR,CAAgBhB,YAAY,CAACS,OAAb,CAAqB,CAArB,CAAhB,CAfI,EAgBFL,IAhBE,CAgBG;AAAA,aAAMG,aAAa,KAAKR,SAAS,CAACS,MAAlC;AAAA,KAhBH,CAAP;AAiBH,GApBM,CAAP;AAqBH,C,CACD","sourcesContent":["/*\r\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\r\nexport function elementResize(element, callbackFn) {\r\n    const observer = new ResizeObserver(() => {\r\n        // We wrap the callback in requestAnimationFrame to\r\n        // avoid the error of \"ResizeObserver loop limit exceeded\".\r\n        window.requestAnimationFrame(() => callbackFn());\r\n    });\r\n    observer.observe(element);\r\n    observer.__testTrigger = callbackFn; // hook to trigger resize event as ResizeObserver does not run in headless chrome.\r\n    return observer;\r\n}\r\n/**\r\n * Given a ResponsiveComponent this function will loop through a list of layout\r\n * options and change the layout of the component until the components layout\r\n * condition is satisfied.\r\n */\r\nexport function updateComponentLayout(component, layoutConfig, fn) {\r\n    return elementResize(component, () => {\r\n        if (component.responsive) {\r\n            calculateOptimalLayout(component, layoutConfig).then(updated => {\r\n                if (updated) {\r\n                    fn();\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\nfunction calculateOptimalLayout(component, layoutConfig) {\r\n    return component.updateComplete.then(() => {\r\n        const currentLayout = component.layout;\r\n        component.layout = layoutConfig.layouts[0];\r\n        return layoutConfig.layouts\r\n            .reduce((prev, next) => {\r\n            return prev.then(() => {\r\n                if (component.layout === layoutConfig.initialLayout) {\r\n                    return next;\r\n                }\r\n                else {\r\n                    const prev = component.layout;\r\n                    component.layout = next;\r\n                    return component.updateComplete.then(() => {\r\n                        component.layout = component.layoutStable ? component.layout : prev;\r\n                        return next;\r\n                    });\r\n                }\r\n            });\r\n        }, Promise.resolve(layoutConfig.layouts[0]))\r\n            .then(() => currentLayout !== component.layout);\r\n    });\r\n}\r\n//# sourceMappingURL=responsive.js.map"]},"metadata":{},"sourceType":"module"}