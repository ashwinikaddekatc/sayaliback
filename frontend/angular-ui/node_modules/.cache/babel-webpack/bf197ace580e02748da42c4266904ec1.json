{"ast":null,"code":"/*\r\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\nimport { createId } from './../utils/identity.js';\n\nvar legacyId = function legacyId(descriptor, proto, name) {\n  Object.defineProperty(proto, name, descriptor);\n};\n\nvar standardId = function standardId(descriptor, element) {\n  return {\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor: descriptor\n  };\n};\n\nexport function id() {\n  return function (protoOrDescriptor, name) {\n    var descriptor = {\n      get: function get() {\n        var propertyName = name !== undefined ? name : protoOrDescriptor.key;\n\n        if (!this[\"__\".concat(propertyName)]) {\n          // _ is used to ensure number is not first since this can create an invalid css selector\n          this[\"__\".concat(propertyName)] = createId();\n        }\n\n        return this[\"__\".concat(propertyName)];\n      },\n      enumerable: true,\n      configurable: true\n    };\n    return name !== undefined ? legacyId(descriptor, protoOrDescriptor, name) : standardId(descriptor, protoOrDescriptor);\n  };\n} //# sourceMappingURL=id.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@cds/core/internal/decorators/id.js"],"names":["createId","legacyId","descriptor","proto","name","Object","defineProperty","standardId","element","kind","placement","key","id","protoOrDescriptor","get","propertyName","undefined","enumerable","configurable"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,wBAAzB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAaC,KAAb,EAAoBC,IAApB,EAA6B;AAC1CC,EAAAA,MAAM,CAACC,cAAP,CAAsBH,KAAtB,EAA6BC,IAA7B,EAAmCF,UAAnC;AACH,CAFD;;AAGA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACL,UAAD,EAAaM,OAAb;AAAA,SAA0B;AACzCC,IAAAA,IAAI,EAAE,QADmC;AAEzCC,IAAAA,SAAS,EAAE,WAF8B;AAGzCC,IAAAA,GAAG,EAAEH,OAAO,CAACG,GAH4B;AAIzCT,IAAAA,UAAU,EAAVA;AAJyC,GAA1B;AAAA,CAAnB;;AAMA,OAAO,SAASU,EAAT,GAAc;AACjB,SAAO,UAACC,iBAAD,EAAoBT,IAApB,EAA6B;AAChC,QAAMF,UAAU,GAAG;AACfY,MAAAA,GADe,iBACT;AACF,YAAMC,YAAY,GAAGX,IAAI,KAAKY,SAAT,GAAqBZ,IAArB,GAA4BS,iBAAiB,CAACF,GAAnE;;AACA,YAAI,CAAC,iBAAUI,YAAV,EAAL,EAAgC;AAC5B;AACA,2BAAUA,YAAV,KAA4Bf,QAAQ,EAApC;AACH;;AACD,eAAO,iBAAUe,YAAV,EAAP;AACH,OARc;AASfE,MAAAA,UAAU,EAAE,IATG;AAUfC,MAAAA,YAAY,EAAE;AAVC,KAAnB;AAYA,WAAOd,IAAI,KAAKY,SAAT,GACDf,QAAQ,CAACC,UAAD,EAAaW,iBAAb,EAAgCT,IAAhC,CADP,GAEDG,UAAU,CAACL,UAAD,EAAaW,iBAAb,CAFhB;AAGH,GAhBD;AAiBH,C,CACD","sourcesContent":["/*\r\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\r\n * This software is released under MIT license.\r\n * The full license information can be found in LICENSE in the root directory of this project.\r\n */\r\nimport { createId } from './../utils/identity.js';\r\nconst legacyId = (descriptor, proto, name) => {\r\n    Object.defineProperty(proto, name, descriptor);\r\n};\r\nconst standardId = (descriptor, element) => ({\r\n    kind: 'method',\r\n    placement: 'prototype',\r\n    key: element.key,\r\n    descriptor,\r\n});\r\nexport function id() {\r\n    return (protoOrDescriptor, name) => {\r\n        const descriptor = {\r\n            get() {\r\n                const propertyName = name !== undefined ? name : protoOrDescriptor.key;\r\n                if (!this[`__${propertyName}`]) {\r\n                    // _ is used to ensure number is not first since this can create an invalid css selector\r\n                    this[`__${propertyName}`] = createId();\r\n                }\r\n                return this[`__${propertyName}`];\r\n            },\r\n            enumerable: true,\r\n            configurable: true,\r\n        };\r\n        return name !== undefined\r\n            ? legacyId(descriptor, protoOrDescriptor, name)\r\n            : standardId(descriptor, protoOrDescriptor);\r\n    };\r\n}\r\n//# sourceMappingURL=id.js.map"]},"metadata":{},"sourceType":"module"}