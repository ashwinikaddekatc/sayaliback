{"ast":null,"code":"import _classCallCheck from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport var componentStringsDefault = {\n  alert: {\n    closeButtonAriaLabel: 'Close',\n    loading: 'Loading',\n    info: 'Info',\n    success: 'Success',\n    warning: 'Warning',\n    danger: 'Error'\n  },\n  dropdown: {\n    open: 'Open'\n  },\n  file: {\n    browse: 'browse',\n    files: 'files',\n    removeFile: 'remove file'\n  },\n  modal: {\n    closeButtonAriaLabel: 'Close modal',\n    contentStart: 'Beginning of Modal Content',\n    contentBox: 'Scrollable Modal Body',\n    contentEnd: 'End of Modal Content'\n  },\n  password: {\n    showButtonAriaLabel: 'Show password',\n    hideButtonAriaLabel: 'Hide password'\n  }\n};\n/**\n * I18nService is a static class that gives users the ability to use and override\n * strings within the components for internationalization / globalization. One\n * can override default values globally for their application or override per\n * component instance as needed.\n *\n * Use the localize method to override values globally. For per component instance,\n * use the i18n decorator.\n */\n\nexport var I18nService = /*#__PURE__*/function () {\n  function I18nService() {\n    _classCallCheck(this, I18nService);\n  }\n\n  _createClass(I18nService, null, [{\n    key: \"keys\",\n    get: function get() {\n      return I18nService.strings;\n    }\n  }, {\n    key: \"localize\",\n    value: function localize(overrides) {\n      for (var _i = 0, _Object$keys = Object.keys(overrides); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        I18nService.strings[key] = Object.assign(Object.assign({}, I18nService.strings[key]), overrides[key]);\n      }\n    }\n  }]);\n\n  return I18nService;\n}();\nI18nService.strings = Object.assign({}, componentStringsDefault); //# sourceMappingURL=i18n.service.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@cds/core/internal/services/i18n.service.js"],"names":["componentStringsDefault","alert","closeButtonAriaLabel","loading","info","success","warning","danger","dropdown","open","file","browse","files","removeFile","modal","contentStart","contentBox","contentEnd","password","showButtonAriaLabel","hideButtonAriaLabel","I18nService","strings","overrides","Object","keys","key","assign"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,uBAAuB,GAAG;AACnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,oBAAoB,EAAE,OADnB;AAEHC,IAAAA,OAAO,EAAE,SAFN;AAGHC,IAAAA,IAAI,EAAE,MAHH;AAIHC,IAAAA,OAAO,EAAE,SAJN;AAKHC,IAAAA,OAAO,EAAE,SALN;AAMHC,IAAAA,MAAM,EAAE;AANL,GAD4B;AASnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE;AADA,GATyB;AAYnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,QADN;AAEFC,IAAAA,KAAK,EAAE,OAFL;AAGFC,IAAAA,UAAU,EAAE;AAHV,GAZ6B;AAiBnCC,EAAAA,KAAK,EAAE;AACHZ,IAAAA,oBAAoB,EAAE,aADnB;AAEHa,IAAAA,YAAY,EAAE,4BAFX;AAGHC,IAAAA,UAAU,EAAE,uBAHT;AAIHC,IAAAA,UAAU,EAAE;AAJT,GAjB4B;AAuBnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,mBAAmB,EAAE,eADf;AAENC,IAAAA,mBAAmB,EAAE;AAFf;AAvByB,CAAhC;AA4BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,SACI,eAAkB;AACd,aAAOA,WAAW,CAACC,OAAnB;AACH;AAHL;AAAA;AAAA,WAII,kBAAgBC,SAAhB,EAA2B;AACvB,sCAAkBC,MAAM,CAACC,IAAP,CAAYF,SAAZ,CAAlB,kCAA0C;AAArC,YAAMG,GAAG,mBAAT;AACDL,QAAAA,WAAW,CAACC,OAAZ,CAAoBI,GAApB,IAA2BF,MAAM,CAACG,MAAP,CAAcH,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBN,WAAW,CAACC,OAAZ,CAAoBI,GAApB,CAAlB,CAAd,EAA2DH,SAAS,CAACG,GAAD,CAApE,CAA3B;AACH;AACJ;AARL;;AAAA;AAAA;AAUAL,WAAW,CAACC,OAAZ,GAAsBE,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkB3B,uBAAlB,CAAtB,C,CACA","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport const componentStringsDefault = {\n    alert: {\n        closeButtonAriaLabel: 'Close',\n        loading: 'Loading',\n        info: 'Info',\n        success: 'Success',\n        warning: 'Warning',\n        danger: 'Error',\n    },\n    dropdown: {\n        open: 'Open',\n    },\n    file: {\n        browse: 'browse',\n        files: 'files',\n        removeFile: 'remove file',\n    },\n    modal: {\n        closeButtonAriaLabel: 'Close modal',\n        contentStart: 'Beginning of Modal Content',\n        contentBox: 'Scrollable Modal Body',\n        contentEnd: 'End of Modal Content',\n    },\n    password: {\n        showButtonAriaLabel: 'Show password',\n        hideButtonAriaLabel: 'Hide password',\n    },\n};\n/**\n * I18nService is a static class that gives users the ability to use and override\n * strings within the components for internationalization / globalization. One\n * can override default values globally for their application or override per\n * component instance as needed.\n *\n * Use the localize method to override values globally. For per component instance,\n * use the i18n decorator.\n */\nexport class I18nService {\n    static get keys() {\n        return I18nService.strings;\n    }\n    static localize(overrides) {\n        for (const key of Object.keys(overrides)) {\n            I18nService.strings[key] = Object.assign(Object.assign({}, I18nService.strings[key]), overrides[key]);\n        }\n    }\n}\nI18nService.strings = Object.assign({}, componentStringsDefault);\n//# sourceMappingURL=i18n.service.js.map"]},"metadata":{},"sourceType":"module"}