{"ast":null,"code":"/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isBrowser } from './exists.js';\nimport { getAngularVersion, getReactVersion, getVueVersion, getAngularJSVersion } from './framework.js';\nimport { browserFeatures } from './supports.js';\nimport { LogService } from '../services/log.service.js';\nexport function setupCDSGlobal() {\n  if (isBrowser()) {\n    initializeCDSGlobal();\n    setRunningVersion();\n  }\n}\n\nfunction getVersion() {\n  var log = {\n    versions: window.CDS._version,\n    environment: window.CDS.environment,\n    userAgent: navigator.userAgent,\n    supports: window.CDS._supports,\n    angularVersion: getAngularVersion(false),\n    angularJSVersion: getAngularJSVersion(false),\n    reactVersion: getReactVersion(false),\n    vueVersion: getVueVersion(false),\n    loadedElements: window.CDS._loadedElements\n  };\n  return log;\n}\n\nfunction logVersion() {\n  console.log(JSON.stringify(getVersion(), null, 2));\n}\n\nfunction initializeCDSGlobal() {\n  window.CDS = window.CDS || {\n    _version: [],\n    _loadedElements: [],\n    _react: {\n      version: undefined\n    },\n    _supports: browserFeatures.supports,\n    environment: {\n      production: false\n    },\n    getVersion: getVersion,\n    logVersion: logVersion\n  };\n}\n\nfunction setRunningVersion() {\n  var loadedVersion = '5.2.0';\n\n  if (window.CDS._version.indexOf(loadedVersion) < 0) {\n    window.CDS._version.push(loadedVersion);\n  }\n\n  document.querySelector('body').setAttribute('cds-version', window.CDS._version[0]);\n\n  if (window.CDS._version.length > 1) {\n    LogService.warn('Running more than one version of Clarity can cause unexpected issues. Please ensure only one version is loaded.');\n  }\n} //# sourceMappingURL=global.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/new cns-portal/CNS-Portal/frontend/angular-ui/node_modules/@cds/core/internal/utils/global.js"],"names":["isBrowser","getAngularVersion","getReactVersion","getVueVersion","getAngularJSVersion","browserFeatures","LogService","setupCDSGlobal","initializeCDSGlobal","setRunningVersion","getVersion","log","versions","window","CDS","_version","environment","userAgent","navigator","supports","_supports","angularVersion","angularJSVersion","reactVersion","vueVersion","loadedElements","_loadedElements","logVersion","console","JSON","stringify","_react","version","undefined","production","loadedVersion","indexOf","push","document","querySelector","setAttribute","length","warn"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,aAA7C,EAA4DC,mBAA5D,QAAuF,gBAAvF;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAO,SAASC,cAAT,GAA0B;AAC7B,MAAIP,SAAS,EAAb,EAAiB;AACbQ,IAAAA,mBAAmB;AACnBC,IAAAA,iBAAiB;AACpB;AACJ;;AACD,SAASC,UAAT,GAAsB;AAClB,MAAMC,GAAG,GAAG;AACRC,IAAAA,QAAQ,EAAEC,MAAM,CAACC,GAAP,CAAWC,QADb;AAERC,IAAAA,WAAW,EAAEH,MAAM,CAACC,GAAP,CAAWE,WAFhB;AAGRC,IAAAA,SAAS,EAAEC,SAAS,CAACD,SAHb;AAIRE,IAAAA,QAAQ,EAAEN,MAAM,CAACC,GAAP,CAAWM,SAJb;AAKRC,IAAAA,cAAc,EAAEpB,iBAAiB,CAAC,KAAD,CALzB;AAMRqB,IAAAA,gBAAgB,EAAElB,mBAAmB,CAAC,KAAD,CAN7B;AAORmB,IAAAA,YAAY,EAAErB,eAAe,CAAC,KAAD,CAPrB;AAQRsB,IAAAA,UAAU,EAAErB,aAAa,CAAC,KAAD,CARjB;AASRsB,IAAAA,cAAc,EAAEZ,MAAM,CAACC,GAAP,CAAWY;AATnB,GAAZ;AAWA,SAAOf,GAAP;AACH;;AACD,SAASgB,UAAT,GAAsB;AAClBC,EAAAA,OAAO,CAACjB,GAAR,CAAYkB,IAAI,CAACC,SAAL,CAAepB,UAAU,EAAzB,EAA6B,IAA7B,EAAmC,CAAnC,CAAZ;AACH;;AACD,SAASF,mBAAT,GAA+B;AAC3BK,EAAAA,MAAM,CAACC,GAAP,GAAaD,MAAM,CAACC,GAAP,IAAc;AACvBC,IAAAA,QAAQ,EAAE,EADa;AAEvBW,IAAAA,eAAe,EAAE,EAFM;AAGvBK,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAEC;AAAX,KAHe;AAIvBb,IAAAA,SAAS,EAAEf,eAAe,CAACc,QAJJ;AAKvBH,IAAAA,WAAW,EAAE;AACTkB,MAAAA,UAAU,EAAE;AADH,KALU;AAQvBxB,IAAAA,UAAU,EAAVA,UARuB;AASvBiB,IAAAA,UAAU,EAAVA;AATuB,GAA3B;AAWH;;AACD,SAASlB,iBAAT,GAA6B;AACzB,MAAM0B,aAAa,GAAG,OAAtB;;AACA,MAAItB,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoBqB,OAApB,CAA4BD,aAA5B,IAA6C,CAAjD,EAAoD;AAChDtB,IAAAA,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoBsB,IAApB,CAAyBF,aAAzB;AACH;;AACDG,EAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,YAA/B,CAA4C,aAA5C,EAA2D3B,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,CAApB,CAA3D;;AACA,MAAIF,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB0B,MAApB,GAA6B,CAAjC,EAAoC;AAChCnC,IAAAA,UAAU,CAACoC,IAAX,CAAgB,iHAAhB;AACH;AACJ,C,CACD","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isBrowser } from './exists.js';\nimport { getAngularVersion, getReactVersion, getVueVersion, getAngularJSVersion } from './framework.js';\nimport { browserFeatures } from './supports.js';\nimport { LogService } from '../services/log.service.js';\nexport function setupCDSGlobal() {\n    if (isBrowser()) {\n        initializeCDSGlobal();\n        setRunningVersion();\n    }\n}\nfunction getVersion() {\n    const log = {\n        versions: window.CDS._version,\n        environment: window.CDS.environment,\n        userAgent: navigator.userAgent,\n        supports: window.CDS._supports,\n        angularVersion: getAngularVersion(false),\n        angularJSVersion: getAngularJSVersion(false),\n        reactVersion: getReactVersion(false),\n        vueVersion: getVueVersion(false),\n        loadedElements: window.CDS._loadedElements,\n    };\n    return log;\n}\nfunction logVersion() {\n    console.log(JSON.stringify(getVersion(), null, 2));\n}\nfunction initializeCDSGlobal() {\n    window.CDS = window.CDS || {\n        _version: [],\n        _loadedElements: [],\n        _react: { version: undefined },\n        _supports: browserFeatures.supports,\n        environment: {\n            production: false,\n        },\n        getVersion,\n        logVersion,\n    };\n}\nfunction setRunningVersion() {\n    const loadedVersion = '5.2.0';\n    if (window.CDS._version.indexOf(loadedVersion) < 0) {\n        window.CDS._version.push(loadedVersion);\n    }\n    document.querySelector('body').setAttribute('cds-version', window.CDS._version[0]);\n    if (window.CDS._version.length > 1) {\n        LogService.warn('Running more than one version of Clarity can cause unexpected issues. Please ensure only one version is loaded.');\n    }\n}\n//# sourceMappingURL=global.js.map"]},"metadata":{},"sourceType":"module"}