{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _templateObject, _templateObject2;\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { baseStyles, hasStringPropertyChanged, hasStringPropertyChangedAndNotNil, property, internalProperty, isString, pxToRem } from '@cds/core/internal';\nimport { html, LitElement, query, svg } from 'lit-element';\nimport { styles } from './icon.element.css.js';\nimport { ClarityIcons } from './icon.service.js';\nimport { updateIconSizeStyle } from './utils/icon.classnames.js';\nimport { getIconBadgeSVG, getIconSVG } from './utils/icon.svg-helpers.js';\n/**\n * Icon component that renders svg shapes that can be customized.\n * To load an icon, import the icon with the icon service.\n *\n * ```typescript\n * import '@cds/core/icon/register.js';\n * import { ClarityIcons, userIcon } from '@cds/core/icon';\n *\n * ClarityIcons.addIcons(userIcon);\n * ```\n *\n * ```html\n * <cds-icon shape=\"user\"></cds-icon>\n * ```\n *\n * @element cds-icon\n * @cssprop --color\n * @cssprop --badge-color\n */\n\nexport var CdsIcon = /*#__PURE__*/function (_LitElement) {\n  _inherits(CdsIcon, _LitElement);\n\n  var _super = _createSuper(CdsIcon);\n\n  function CdsIcon() {\n    var _this;\n\n    _classCallCheck(this, CdsIcon);\n\n    _this = _super.apply(this, arguments);\n    _this._shape = 'unknown';\n    /**\n     * Displays most icons in their \"filled\" version if set to `true`.\n     */\n\n    _this.solid = false;\n    /**\n     * Inverts color of icon fills and outlines if `true`.\n     * Useful for displaying icons on a dark background.\n     */\n\n    _this.inverse = false;\n    return _this;\n  }\n\n  _createClass(CdsIcon, [{\n    key: \"shape\",\n    get: function get() {\n      return this._shape;\n    }\n    /**\n     * Changes the svg glyph displayed in the icon component. Defaults to the 'unknown' icon if\n     * the specified icon cannot be found in the icon registry.\n     */\n    ,\n    set: function set(val) {\n      if (hasStringPropertyChangedAndNotNil(val, this._shape)) {\n        var oldVal = this._shape;\n        this._shape = val;\n        this.requestUpdate('shape', oldVal);\n      }\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._size;\n    }\n    /**\n     * @type {string | xs | sm | md | lg | xl | xxl}\n     * Apply numerical width-height or a t-shirt-sized CSS classname\n     */\n    ,\n    set: function set(val) {\n      if (hasStringPropertyChanged(val, this._size)) {\n        var oldVal = this._size;\n        this._size = val;\n        updateIconSizeStyle(this, val);\n        this.requestUpdate('size', oldVal);\n      }\n    }\n  }, {\n    key: \"updated\",\n    value: function updated(props) {\n      if (props.has('innerOffset') && this.innerOffset > 0) {\n        var val = pxToRem(this.innerOffset);\n        var dimension = \"calc(100% + \".concat(Number(val.replace('rem', '')) * 2, \"rem)\");\n        this.svg.style.width = dimension;\n        this.svg.style.height = dimension;\n        this.svg.style.margin = \"-\".concat(val, \" 0 0 -\").concat(val);\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(CdsIcon.prototype), \"connectedCallback\", this).call(this);\n\n      this.subscription = ClarityIcons.iconUpdates.subscribe(function (shape) {\n        if (shape === _this2.shape) {\n          _this2.requestUpdate();\n        }\n      });\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      _get(_getPrototypeOf(CdsIcon.prototype), \"disconnectedCallback\", this).call(this);\n\n      this.subscription.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return isString(ClarityIcons.registry[this.shape]) ? html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<span .innerHTML=\\\"\", \"\\\"></span>\"])), ClarityIcons.registry[this.shape]) : svg(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"<svg .innerHTML=\\\"\", \"\\\" viewBox=\\\"0 0 36 36\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" aria-hidden=\\\"true\\\"></svg>\"])), getIconSVG(this) + getIconBadgeSVG(this));\n    }\n  }], [{\n    key: \"styles\",\n    get: function get() {\n      return [baseStyles, styles];\n    }\n  }]);\n\n  return CdsIcon;\n}(LitElement);\n\n__decorate([property({\n  type: String\n})], CdsIcon.prototype, \"shape\", null);\n\n__decorate([property({\n  type: String\n})], CdsIcon.prototype, \"size\", null);\n\n__decorate([property({\n  type: String\n})], CdsIcon.prototype, \"direction\", void 0);\n\n__decorate([property({\n  type: String\n})], CdsIcon.prototype, \"flip\", void 0);\n\n__decorate([property({\n  type: Boolean\n})], CdsIcon.prototype, \"solid\", void 0);\n\n__decorate([property({\n  type: String\n})], CdsIcon.prototype, \"status\", void 0);\n\n__decorate([property({\n  type: Boolean\n})], CdsIcon.prototype, \"inverse\", void 0);\n\n__decorate([property({\n  type: String\n})], CdsIcon.prototype, \"badge\", void 0);\n\n__decorate([internalProperty({\n  type: Number\n})], CdsIcon.prototype, \"innerOffset\", void 0);\n\n__decorate([query('svg')], CdsIcon.prototype, \"svg\", void 0); //# sourceMappingURL=icon.element.js.map","map":{"version":3,"sources":["C:/Users/HP/Desktop/CNS-Portal-ashwini15523/frontend/angular-ui/node_modules/@cds/core/icon/icon.element.js"],"names":["__decorate","baseStyles","hasStringPropertyChanged","hasStringPropertyChangedAndNotNil","property","internalProperty","isString","pxToRem","html","LitElement","query","svg","styles","ClarityIcons","updateIconSizeStyle","getIconBadgeSVG","getIconSVG","CdsIcon","arguments","_shape","solid","inverse","val","oldVal","requestUpdate","_size","props","has","innerOffset","dimension","Number","replace","style","width","height","margin","subscription","iconUpdates","subscribe","shape","unsubscribe","registry","type","String","prototype","Boolean"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { baseStyles, hasStringPropertyChanged, hasStringPropertyChangedAndNotNil, property, internalProperty, isString, pxToRem, } from '@cds/core/internal';\nimport { html, LitElement, query, svg } from 'lit-element';\nimport { styles } from './icon.element.css.js';\nimport { ClarityIcons } from './icon.service.js';\nimport { updateIconSizeStyle } from './utils/icon.classnames.js';\nimport { getIconBadgeSVG, getIconSVG } from './utils/icon.svg-helpers.js';\n/**\n * Icon component that renders svg shapes that can be customized.\n * To load an icon, import the icon with the icon service.\n *\n * ```typescript\n * import '@cds/core/icon/register.js';\n * import { ClarityIcons, userIcon } from '@cds/core/icon';\n *\n * ClarityIcons.addIcons(userIcon);\n * ```\n *\n * ```html\n * <cds-icon shape=\"user\"></cds-icon>\n * ```\n *\n * @element cds-icon\n * @cssprop --color\n * @cssprop --badge-color\n */\nexport class CdsIcon extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._shape = 'unknown';\n        /**\n         * Displays most icons in their \"filled\" version if set to `true`.\n         */\n        this.solid = false;\n        /**\n         * Inverts color of icon fills and outlines if `true`.\n         * Useful for displaying icons on a dark background.\n         */\n        this.inverse = false;\n    }\n    static get styles() {\n        return [baseStyles, styles];\n    }\n    get shape() {\n        return this._shape;\n    }\n    /**\n     * Changes the svg glyph displayed in the icon component. Defaults to the 'unknown' icon if\n     * the specified icon cannot be found in the icon registry.\n     */\n    set shape(val) {\n        if (hasStringPropertyChangedAndNotNil(val, this._shape)) {\n            const oldVal = this._shape;\n            this._shape = val;\n            this.requestUpdate('shape', oldVal);\n        }\n    }\n    get size() {\n        return this._size;\n    }\n    /**\n     * @type {string | xs | sm | md | lg | xl | xxl}\n     * Apply numerical width-height or a t-shirt-sized CSS classname\n     */\n    set size(val) {\n        if (hasStringPropertyChanged(val, this._size)) {\n            const oldVal = this._size;\n            this._size = val;\n            updateIconSizeStyle(this, val);\n            this.requestUpdate('size', oldVal);\n        }\n    }\n    updated(props) {\n        if (props.has('innerOffset') && this.innerOffset > 0) {\n            const val = pxToRem(this.innerOffset);\n            const dimension = `calc(100% + ${Number(val.replace('rem', '')) * 2}rem)`;\n            this.svg.style.width = dimension;\n            this.svg.style.height = dimension;\n            this.svg.style.margin = `-${val} 0 0 -${val}`;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.subscription = ClarityIcons.iconUpdates.subscribe(shape => {\n            if (shape === this.shape) {\n                this.requestUpdate();\n            }\n        });\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.subscription.unsubscribe();\n    }\n    render() {\n        return isString(ClarityIcons.registry[this.shape])\n            ? html `<span .innerHTML=\"${ClarityIcons.registry[this.shape]}\"></span>`\n            : svg `<svg .innerHTML=\"${getIconSVG(this) + getIconBadgeSVG(this)}\" viewBox=\"0 0 36 36\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"></svg>`;\n    }\n}\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"shape\", null);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"size\", null);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"direction\", void 0);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"flip\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsIcon.prototype, \"solid\", void 0);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"status\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CdsIcon.prototype, \"inverse\", void 0);\n__decorate([\n    property({ type: String })\n], CdsIcon.prototype, \"badge\", void 0);\n__decorate([\n    internalProperty({ type: Number })\n], CdsIcon.prototype, \"innerOffset\", void 0);\n__decorate([\n    query('svg')\n], CdsIcon.prototype, \"svg\", void 0);\n//# sourceMappingURL=icon.element.js.map"]},"metadata":{},"sourceType":"module"}