/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { NgModule } from '@angular/core';
import { ClarityIcons, ellipsisHorizontalIcon } from '@cds/core/icon';
import { ClrButtonGroupModule } from './button-group/button-group.module';
import { ClrLoadingButtonModule } from './button-loading/loading-button.module';
import * as ɵngcc0 from '@angular/core';
export class ClrButtonModule {
    constructor() {
        ClarityIcons.addIcons(ellipsisHorizontalIcon);
    }
}
ClrButtonModule.ɵfac = function ClrButtonModule_Factory(t) { return new (t || ClrButtonModule)(); };
ClrButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrButtonModule });
ClrButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [ClrLoadingButtonModule, ClrButtonGroupModule] });
ClrButtonModule.ctorParameters = () => [];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrButtonModule, { exports: function () { return [ClrLoadingButtonModule, ClrButtonGroupModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrButtonModule, [{
        type: NgModule,
        args: [{
                exports: [ClrLoadingButtonModule, ClrButtonGroupModule]
            }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL2J1dHRvbi9idXR0b24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXRFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDOztBQUtoRixNQUFNLE9BQU8sZUFBZTtBQUM1QixJQUFFO0FBQ0YsUUFBSSxZQUFZLENBQUMsUUFBUSxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFDbEQsSUFBRSxDQUFDO0FBQ0g7MkNBUEMsUUFBUSxTQUFDLGtCQUNSLE9BQU8sRUFBRSxDQUFDO1NBQXNCLEVBQUUsb0JBQW9CLENBQUMsZUFDeEQ7NEdBQ0k7QUFBQzs7Ozs7OztnREFDVztBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsYXJpdHlJY29ucywgZWxsaXBzaXNIb3Jpem9udGFsSWNvbiB9IGZyb20gJ0BjZHMvY29yZS9pY29uJztcblxuaW1wb3J0IHsgQ2xyQnV0dG9uR3JvdXBNb2R1bGUgfSBmcm9tICcuL2J1dHRvbi1ncm91cC9idXR0b24tZ3JvdXAubW9kdWxlJztcbmltcG9ydCB7IENsckxvYWRpbmdCdXR0b25Nb2R1bGUgfSBmcm9tICcuL2J1dHRvbi1sb2FkaW5nL2xvYWRpbmctYnV0dG9uLm1vZHVsZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGV4cG9ydHM6IFtDbHJMb2FkaW5nQnV0dG9uTW9kdWxlLCBDbHJCdXR0b25Hcm91cE1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIENsckJ1dHRvbk1vZHVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIENsYXJpdHlJY29ucy5hZGRJY29ucyhlbGxpcHNpc0hvcml6b250YWxJY29uKTtcbiAgfVxufVxuIl19