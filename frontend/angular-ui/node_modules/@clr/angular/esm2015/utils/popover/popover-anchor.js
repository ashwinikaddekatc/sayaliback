/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 *
 */
import { Directive, ElementRef } from '@angular/core';
import { ClrPopoverEventsService } from './providers/popover-events.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './providers/popover-events.service';
export class ClrPopoverAnchor {
    constructor(smartEventService, element) {
        smartEventService.anchorButtonRef = element;
    }
}
ClrPopoverAnchor.ɵfac = function ClrPopoverAnchor_Factory(t) { return new (t || ClrPopoverAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ClrPopoverEventsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ClrPopoverAnchor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrPopoverAnchor, selectors: [["", "clrPopoverAnchor", ""]], hostVars: 2, hostBindings: function ClrPopoverAnchor_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("clr-anchor", true);
    } } });
ClrPopoverAnchor.ctorParameters = () => [
    { type: ClrPopoverEventsService },
    { type: ElementRef }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrPopoverAnchor, [{
        type: Directive,
        args: [{
                selector: '[clrPopoverAnchor]',
                host: {
                    '[class.clr-anchor]': 'true'
                }
            }]
    }], function () { return [{ type: ɵngcc1.ClrPopoverEventsService }, { type: ɵngcc0.ElementRef }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1hbmNob3IuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nsci1hbmd1bGFyL3NyYy91dGlscy9wb3BvdmVyL3BvcG92ZXItYW5jaG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7OztBQVE3RSxNQUFNLE9BQU8sZ0JBQWdCO0FBQzdCLElBQUUsWUFBWSxpQkFBMEMsRUFBRSxPQUFtQjtBQUM3RSxRQUFJLGlCQUFpQixDQUFDLGVBQWUsR0FBRyxPQUFPLENBQUM7QUFDaEQsSUFBRSxDQUFDO0FBQ0g7NENBVkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxvQkFBb0Isa0JBQzlCLElBQUksRUFBRSxzQkFDSixvQkFBb0IsRUFBRSxNQUFNLG1CQUM3QjthQUNGOztXQUNJO0FBQUM7QUFDVSxZQVRQLHVCQUF1QjtBQUFJLFlBRGhCLFVBQVU7QUFBRzs7Ozs7Ozs7O3FIQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICpcbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsclBvcG92ZXJFdmVudHNTZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvcG9wb3Zlci1ldmVudHMuc2VydmljZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tjbHJQb3BvdmVyQW5jaG9yXScsXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLmNsci1hbmNob3JdJzogJ3RydWUnLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBDbHJQb3BvdmVyQW5jaG9yIHtcbiAgY29uc3RydWN0b3Ioc21hcnRFdmVudFNlcnZpY2U6IENsclBvcG92ZXJFdmVudHNTZXJ2aWNlLCBlbGVtZW50OiBFbGVtZW50UmVmKSB7XG4gICAgc21hcnRFdmVudFNlcnZpY2UuYW5jaG9yQnV0dG9uUmVmID0gZWxlbWVudDtcbiAgfVxufVxuIl19