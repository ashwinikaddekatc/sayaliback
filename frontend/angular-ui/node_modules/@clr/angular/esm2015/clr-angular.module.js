/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { NgModule } from '@angular/core';
import { ClrButtonModule } from './button/button.module';
import { ClrDataModule } from './data/data.module';
import { ClrDragAndDropModule } from './utils/drag-and-drop/drag-and-drop.module';
import { ClrEmphasisModule } from './emphasis/emphasis.module';
import { ClrFormsModule } from './forms/forms.module';
import { ClrIconModule } from './icon/icon.module';
import { ClrLayoutModule } from './layout/layout.module';
import { ClrModalModule } from './modal/modal.module';
import { ClrPopoverModule } from './popover/popover.module';
import { ClrConditionalModule } from './utils/conditional/conditional.module';
import { ClrFocusOnViewInitModule } from './utils/focus/focus-on-view-init/focus-on-view-init.module';
import { ClrFocusTrapModule } from './utils/focus-trap/focus-trap.module';
import { ClrLoadingModule } from './utils/loading/loading.module';
import { ClrWizardModule } from './wizard/wizard.module';
import { ClrStepperModule } from './accordion/stepper/stepper.module';
import { ClrSpinnerModule } from './progress/spinner/spinner.module';
import { ClrProgressBarModule } from './progress/progress-bars/progress-bar.module';
import { ClrPopoverModuleNext } from './utils/popover/popover.module';
import { ClrTimelineModule } from './timeline/timeline.module';
// Register the icon library
import '@cds/core/icon/register';
import * as ɵngcc0 from '@angular/core';
export class ClarityModule {
}
ClarityModule.ɵfac = function ClarityModule_Factory(t) { return new (t || ClarityModule)(); };
ClarityModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClarityModule });
ClarityModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [ClrEmphasisModule,
        ClrDataModule,
        ClrIconModule,
        ClrModalModule,
        ClrLoadingModule,
        ClrConditionalModule,
        ClrFocusTrapModule,
        ClrFocusOnViewInitModule,
        ClrButtonModule,
        ClrFormsModule,
        ClrLayoutModule,
        ClrPopoverModule,
        ClrWizardModule,
        ClrDragAndDropModule,
        ClrStepperModule,
        ClrSpinnerModule,
        ClrProgressBarModule,
        ClrPopoverModuleNext,
        ClrTimelineModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClarityModule, { exports: function () { return [ClrEmphasisModule,
        ClrDataModule,
        ClrIconModule,
        ClrModalModule,
        ClrLoadingModule,
        ClrConditionalModule,
        ClrFocusTrapModule,
        ClrFocusOnViewInitModule,
        ClrButtonModule,
        ClrFormsModule,
        ClrLayoutModule,
        ClrPopoverModule,
        ClrWizardModule,
        ClrDragAndDropModule,
        ClrStepperModule,
        ClrSpinnerModule,
        ClrProgressBarModule,
        ClrPopoverModuleNext,
        ClrTimelineModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClarityModule, [{
        type: NgModule,
        args: [{
                exports: [
                    ClrEmphasisModule,
                    ClrDataModule,
                    ClrIconModule,
                    ClrModalModule,
                    ClrLoadingModule,
                    ClrConditionalModule,
                    ClrFocusTrapModule,
                    ClrFocusOnViewInitModule,
                    ClrButtonModule,
                    ClrFormsModule,
                    ClrLayoutModule,
                    ClrPopoverModule,
                    ClrWizardModule,
                    ClrDragAndDropModule,
                    ClrStepperModule,
                    ClrSpinnerModule,
                    ClrProgressBarModule,
                    ClrPopoverModuleNext,
                    ClrTimelineModule,
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xyLWFuZ3VsYXIubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy9jbHItYW5ndWxhci9zcmMvY2xyLWFuZ3VsYXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNsRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDOUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFDdEcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDMUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRS9ELDRCQUE0QjtBQUM1QixPQUFPLHlCQUF5QixDQUFDOztBQXlCakMsTUFBTSxPQUFPLGFBQWE7QUFBRzt5Q0F2QjVCLFFBQVEsU0FBQyxrQkFDUixPQUFPLEVBQUU7WUFDUCxpQkFBaUIsc0JBQ2pCLGFBQWE7ZUFDYixhQUFhLHNCQUNiLGNBQWM7VUFDZDtHQUFnQjtFQUNoQixvQkFBb0I7b0JBQ3BCO1lBQWtCO0lBQ2xCO0FBQXdCLHNCQUN4QjtHQUFlO0FBQ2YsY0FBYztZQUNkO0VBQWUsc0JBQ2Y7Y0FBZ0I7V0FDaEIsZUFBZTtrQkFDZjtZQUFvQjtRQUNwQixnQkFBZ0I7Z0JBQ2hCO0VBQWdCLHNCQUNoQjthQUFvQixzQkFDcEIsb0JBQW9CLHNCQUNwQixpQkFBaUIsbUJBQ2xCLGVBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDbHJCdXR0b25Nb2R1bGUgfSBmcm9tICcuL2J1dHRvbi9idXR0b24ubW9kdWxlJztcbmltcG9ydCB7IENsckRhdGFNb2R1bGUgfSBmcm9tICcuL2RhdGEvZGF0YS5tb2R1bGUnO1xuaW1wb3J0IHsgQ2xyRHJhZ0FuZERyb3BNb2R1bGUgfSBmcm9tICcuL3V0aWxzL2RyYWctYW5kLWRyb3AvZHJhZy1hbmQtZHJvcC5tb2R1bGUnO1xuaW1wb3J0IHsgQ2xyRW1waGFzaXNNb2R1bGUgfSBmcm9tICcuL2VtcGhhc2lzL2VtcGhhc2lzLm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJGb3Jtc01vZHVsZSB9IGZyb20gJy4vZm9ybXMvZm9ybXMubW9kdWxlJztcbmltcG9ydCB7IENsckljb25Nb2R1bGUgfSBmcm9tICcuL2ljb24vaWNvbi5tb2R1bGUnO1xuaW1wb3J0IHsgQ2xyTGF5b3V0TW9kdWxlIH0gZnJvbSAnLi9sYXlvdXQvbGF5b3V0Lm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJNb2RhbE1vZHVsZSB9IGZyb20gJy4vbW9kYWwvbW9kYWwubW9kdWxlJztcbmltcG9ydCB7IENsclBvcG92ZXJNb2R1bGUgfSBmcm9tICcuL3BvcG92ZXIvcG9wb3Zlci5tb2R1bGUnO1xuaW1wb3J0IHsgQ2xyQ29uZGl0aW9uYWxNb2R1bGUgfSBmcm9tICcuL3V0aWxzL2NvbmRpdGlvbmFsL2NvbmRpdGlvbmFsLm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJGb2N1c09uVmlld0luaXRNb2R1bGUgfSBmcm9tICcuL3V0aWxzL2ZvY3VzL2ZvY3VzLW9uLXZpZXctaW5pdC9mb2N1cy1vbi12aWV3LWluaXQubW9kdWxlJztcbmltcG9ydCB7IENsckZvY3VzVHJhcE1vZHVsZSB9IGZyb20gJy4vdXRpbHMvZm9jdXMtdHJhcC9mb2N1cy10cmFwLm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJMb2FkaW5nTW9kdWxlIH0gZnJvbSAnLi91dGlscy9sb2FkaW5nL2xvYWRpbmcubW9kdWxlJztcbmltcG9ydCB7IENscldpemFyZE1vZHVsZSB9IGZyb20gJy4vd2l6YXJkL3dpemFyZC5tb2R1bGUnO1xuaW1wb3J0IHsgQ2xyU3RlcHBlck1vZHVsZSB9IGZyb20gJy4vYWNjb3JkaW9uL3N0ZXBwZXIvc3RlcHBlci5tb2R1bGUnO1xuaW1wb3J0IHsgQ2xyU3Bpbm5lck1vZHVsZSB9IGZyb20gJy4vcHJvZ3Jlc3Mvc3Bpbm5lci9zcGlubmVyLm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJQcm9ncmVzc0Jhck1vZHVsZSB9IGZyb20gJy4vcHJvZ3Jlc3MvcHJvZ3Jlc3MtYmFycy9wcm9ncmVzcy1iYXIubW9kdWxlJztcbmltcG9ydCB7IENsclBvcG92ZXJNb2R1bGVOZXh0IH0gZnJvbSAnLi91dGlscy9wb3BvdmVyL3BvcG92ZXIubW9kdWxlJztcbmltcG9ydCB7IENsclRpbWVsaW5lTW9kdWxlIH0gZnJvbSAnLi90aW1lbGluZS90aW1lbGluZS5tb2R1bGUnO1xuXG4vLyBSZWdpc3RlciB0aGUgaWNvbiBsaWJyYXJ5XG5pbXBvcnQgJ0BjZHMvY29yZS9pY29uL3JlZ2lzdGVyJztcblxuQE5nTW9kdWxlKHtcbiAgZXhwb3J0czogW1xuICAgIENsckVtcGhhc2lzTW9kdWxlLFxuICAgIENsckRhdGFNb2R1bGUsXG4gICAgQ2xySWNvbk1vZHVsZSxcbiAgICBDbHJNb2RhbE1vZHVsZSxcbiAgICBDbHJMb2FkaW5nTW9kdWxlLFxuICAgIENsckNvbmRpdGlvbmFsTW9kdWxlLFxuICAgIENsckZvY3VzVHJhcE1vZHVsZSxcbiAgICBDbHJGb2N1c09uVmlld0luaXRNb2R1bGUsXG4gICAgQ2xyQnV0dG9uTW9kdWxlLFxuICAgIENsckZvcm1zTW9kdWxlLFxuICAgIENsckxheW91dE1vZHVsZSxcbiAgICBDbHJQb3BvdmVyTW9kdWxlLFxuICAgIENscldpemFyZE1vZHVsZSxcbiAgICBDbHJEcmFnQW5kRHJvcE1vZHVsZSxcbiAgICBDbHJTdGVwcGVyTW9kdWxlLFxuICAgIENsclNwaW5uZXJNb2R1bGUsXG4gICAgQ2xyUHJvZ3Jlc3NCYXJNb2R1bGUsXG4gICAgQ2xyUG9wb3Zlck1vZHVsZU5leHQsXG4gICAgQ2xyVGltZWxpbmVNb2R1bGUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIENsYXJpdHlNb2R1bGUge31cbiJdfQ==