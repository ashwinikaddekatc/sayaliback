/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ClrDatalistInput } from './datalist-input';
import { ClrInputModule } from '../input/input.module';
import { ClrDatalistContainer } from './datalist-container';
import { ClrIconModule } from '../../icon/icon.module';
import { ClrDatalist } from './datalist';
import { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';
import * as ɵngcc0 from '@angular/core';
export class ClrDatalistModule {
    constructor() {
        ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);
    }
}
ClrDatalistModule.ɵfac = function ClrDatalistModule_Factory(t) { return new (t || ClrDatalistModule)(); };
ClrDatalistModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrDatalistModule });
ClrDatalistModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, ClrInputModule, ClrIconModule]] });
ClrDatalistModule.ctorParameters = () => [];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrDatalistModule, { declarations: function () { return [ClrDatalist, ClrDatalistInput, ClrDatalistContainer]; }, imports: function () { return [CommonModule, ClrInputModule, ClrIconModule]; }, exports: function () { return [ClrDatalist, ClrDatalistInput, ClrDatalistContainer]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrDatalistModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ClrInputModule, ClrIconModule],
                declarations: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],
                exports: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer]
            }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWxpc3QubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jbHItYW5ndWxhci9zcmMvZm9ybXMvZGF0YWxpc3QvZGF0YWxpc3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQU90RixNQUFNLE9BQU8saUJBQWlCO0FBQzlCLElBQUU7QUFDRixRQUFJLFlBQVksQ0FBQyxRQUFRLENBQUMscUJBQXFCLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFDbEUsSUFBRSxDQUFDO0FBQ0g7NkNBVEMsUUFBUSxTQUFDLGtCQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRTtXQUFjLEVBQUUsYUFBYSxDQUFDLGtCQUN0RCxZQUFZLEVBQUUsQ0FBQyxXQUFXLEVBQUU7VUFBZ0IsRUFBRSxvQkFBb0IsQ0FBQyxrQkFDbkUsT0FBTyxFQUFFLENBQUMsV0FBVyxFQUFFLGdCQUFnQixFQUFFLG1CQUV0QztBQUYwRCxDQUFDLGVBQy9ELGhCQUNLOzs7Ozs7Ozs7Z0RBQ1c7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2xyRGF0YWxpc3RJbnB1dCB9IGZyb20gJy4vZGF0YWxpc3QtaW5wdXQnO1xuaW1wb3J0IHsgQ2xySW5wdXRNb2R1bGUgfSBmcm9tICcuLi9pbnB1dC9pbnB1dC5tb2R1bGUnO1xuaW1wb3J0IHsgQ2xyRGF0YWxpc3RDb250YWluZXIgfSBmcm9tICcuL2RhdGFsaXN0LWNvbnRhaW5lcic7XG5pbXBvcnQgeyBDbHJJY29uTW9kdWxlIH0gZnJvbSAnLi4vLi4vaWNvbi9pY29uLm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJEYXRhbGlzdCB9IGZyb20gJy4vZGF0YWxpc3QnO1xuaW1wb3J0IHsgY2hlY2tDaXJjbGVJY29uLCBDbGFyaXR5SWNvbnMsIGV4Y2xhbWF0aW9uQ2lyY2xlSWNvbiB9IGZyb20gJ0BjZHMvY29yZS9pY29uJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgQ2xySW5wdXRNb2R1bGUsIENsckljb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtDbHJEYXRhbGlzdCwgQ2xyRGF0YWxpc3RJbnB1dCwgQ2xyRGF0YWxpc3RDb250YWluZXJdLFxuICBleHBvcnRzOiBbQ2xyRGF0YWxpc3QsIENsckRhdGFsaXN0SW5wdXQsIENsckRhdGFsaXN0Q29udGFpbmVyXSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyRGF0YWxpc3RNb2R1bGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBDbGFyaXR5SWNvbnMuYWRkSWNvbnMoZXhjbGFtYXRpb25DaXJjbGVJY29uLCBjaGVja0NpcmNsZUljb24pO1xuICB9XG59XG4iXX0=