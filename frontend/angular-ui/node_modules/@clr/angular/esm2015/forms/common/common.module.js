/**
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';
import { ClrIconModule } from '../../icon/icon.module';
import { ClrControl } from './control';
import { ClrControlContainer } from './control-container';
import { ClrControlError } from './error';
import { ClrForm } from './form';
import { ClrControlHelper } from './helper';
import { ClrIfError } from './if-control-state/if-error';
import { ClrIfSuccess } from './if-control-state/if-success';
import { ClrLabel } from './label';
import { ClrLayout } from './layout';
import { ClrControlSuccess } from './success';
import * as ɵngcc0 from '@angular/core';
export class ClrCommonFormsModule {
    constructor() {
        ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);
    }
}
ClrCommonFormsModule.ɵfac = function ClrCommonFormsModule_Factory(t) { return new (t || ClrCommonFormsModule)(); };
ClrCommonFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrCommonFormsModule });
ClrCommonFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, ClrIconModule]] });
ClrCommonFormsModule.ctorParameters = () => [];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrCommonFormsModule, { declarations: function () { return [ClrLabel,
        ClrControlError,
        ClrControlSuccess,
        ClrControlHelper,
        ClrIfError,
        ClrIfSuccess,
        ClrForm,
        ClrLayout,
        ClrControlContainer,
        ClrControl]; }, imports: function () { return [CommonModule, ClrIconModule]; }, exports: function () { return [ClrLabel,
        ClrControlError,
        ClrControlSuccess,
        ClrControlHelper,
        ClrIfError,
        ClrIfSuccess,
        ClrForm,
        ClrLayout,
        ClrControlContainer,
        ClrControl]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrCommonFormsModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ClrIconModule],
                declarations: [
                    ClrLabel,
                    ClrControlError,
                    ClrControlSuccess,
                    ClrControlHelper,
                    ClrIfError,
                    ClrIfSuccess,
                    ClrForm,
                    ClrLayout,
                    ClrControlContainer,
                    ClrControl,
                ],
                exports: [
                    ClrLabel,
                    ClrControlError,
                    ClrControlSuccess,
                    ClrControlHelper,
                    ClrIfError,
                    ClrIfSuccess,
                    ClrForm,
                    ClrLayout,
                    ClrControlContainer,
                    ClrControl,
                ],
                entryComponents: [ClrControlContainer]
            }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL2Zvcm1zL2NvbW1vbi9jb21tb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxlQUFlLEVBQUUsWUFBWSxFQUFFLHFCQUFxQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDdEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDdkMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUMxQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUM1QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzdELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDbkMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNyQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxXQUFXLENBQUM7O0FBOEI5QyxNQUFNLE9BQU8sb0JBQW9CO0FBQ2pDLElBQUU7QUFDRixRQUFJLFlBQVksQ0FBQyxRQUFRLENBQUMscUJBQXFCLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFDbEUsSUFBRSxDQUFDO0FBQ0g7Z0RBaENDLFFBQVEsU0FBQyxrQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUU7SUFBYSxDQUFDLGtCQUN0QyxZQUFZLEVBQUUsc0JBQ1osUUFBUTtJQUNSLGVBQWUsc0JBQ2YsaUJBQWlCLHNCQUNqQixnQkFBZ0IsRUFzQmY7bUJBckJELFVBQVUsN0JBcUJSO0dBcEJGLFlBQVksc0JBQ1osT0FBTyxzQkFDUCxTQUFTLHNCQUNULG1CQUFtQixzQkFDbkIsVUFBVTtLQUNYLGtCQUNEO0tBQU8sRUFBRTtFQUNQLFFBQVE7TUFDUjtDQUFlO0NBQ2Y7Q0FBaUI7SUFDakIsZ0JBQWdCO2FBQ2hCLFVBQVUsc0JBQ1YsWUFBWSxzQkFDWixPQUFPLHNCQUNQLFNBQVM7VUFDVDtJQUFtQixzQkFDbkI7U0FBVTtFQUNYO0FBQ0QsZUFBZSxFQUFFLENBQUM7ZUFBbUIsQ0FBQztjQUN2Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUVnQjtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY2hlY2tDaXJjbGVJY29uLCBDbGFyaXR5SWNvbnMsIGV4Y2xhbWF0aW9uQ2lyY2xlSWNvbiB9IGZyb20gJ0BjZHMvY29yZS9pY29uJztcbmltcG9ydCB7IENsckljb25Nb2R1bGUgfSBmcm9tICcuLi8uLi9pY29uL2ljb24ubW9kdWxlJztcbmltcG9ydCB7IENsckNvbnRyb2wgfSBmcm9tICcuL2NvbnRyb2wnO1xuaW1wb3J0IHsgQ2xyQ29udHJvbENvbnRhaW5lciB9IGZyb20gJy4vY29udHJvbC1jb250YWluZXInO1xuaW1wb3J0IHsgQ2xyQ29udHJvbEVycm9yIH0gZnJvbSAnLi9lcnJvcic7XG5pbXBvcnQgeyBDbHJGb3JtIH0gZnJvbSAnLi9mb3JtJztcbmltcG9ydCB7IENsckNvbnRyb2xIZWxwZXIgfSBmcm9tICcuL2hlbHBlcic7XG5pbXBvcnQgeyBDbHJJZkVycm9yIH0gZnJvbSAnLi9pZi1jb250cm9sLXN0YXRlL2lmLWVycm9yJztcbmltcG9ydCB7IENscklmU3VjY2VzcyB9IGZyb20gJy4vaWYtY29udHJvbC1zdGF0ZS9pZi1zdWNjZXNzJztcbmltcG9ydCB7IENsckxhYmVsIH0gZnJvbSAnLi9sYWJlbCc7XG5pbXBvcnQgeyBDbHJMYXlvdXQgfSBmcm9tICcuL2xheW91dCc7XG5pbXBvcnQgeyBDbHJDb250cm9sU3VjY2VzcyB9IGZyb20gJy4vc3VjY2Vzcyc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIENsckljb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBDbHJMYWJlbCxcbiAgICBDbHJDb250cm9sRXJyb3IsXG4gICAgQ2xyQ29udHJvbFN1Y2Nlc3MsXG4gICAgQ2xyQ29udHJvbEhlbHBlcixcbiAgICBDbHJJZkVycm9yLFxuICAgIENscklmU3VjY2VzcyxcbiAgICBDbHJGb3JtLFxuICAgIENsckxheW91dCxcbiAgICBDbHJDb250cm9sQ29udGFpbmVyLFxuICAgIENsckNvbnRyb2wsXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBDbHJMYWJlbCxcbiAgICBDbHJDb250cm9sRXJyb3IsXG4gICAgQ2xyQ29udHJvbFN1Y2Nlc3MsXG4gICAgQ2xyQ29udHJvbEhlbHBlcixcbiAgICBDbHJJZkVycm9yLFxuICAgIENscklmU3VjY2VzcyxcbiAgICBDbHJGb3JtLFxuICAgIENsckxheW91dCxcbiAgICBDbHJDb250cm9sQ29udGFpbmVyLFxuICAgIENsckNvbnRyb2wsXG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW0NsckNvbnRyb2xDb250YWluZXJdLFxufSlcbmV4cG9ydCBjbGFzcyBDbHJDb21tb25Gb3Jtc01vZHVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIENsYXJpdHlJY29ucy5hZGRJY29ucyhleGNsYW1hdGlvbkNpcmNsZUljb24sIGNoZWNrQ2lyY2xlSWNvbik7XG4gIH1cbn1cbiJdfQ==