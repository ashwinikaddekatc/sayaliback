/**
 * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Optional } from '@angular/core';
import { ControlIdService } from './providers/control-id.service';
import { ContainerIdService } from './providers/container-id.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './providers/control-id.service';
import * as ɵngcc2 from './providers/container-id.service';
export const CONTROL_SUFFIX = {
    HELPER: 'helper',
    ERROR: 'error',
    SUCCESS: 'success',
    NONE: null,
};
export class ClrAbstractControl {
    constructor(controlIdService, containerIdService) {
        this.controlIdService = controlIdService;
        this.containerIdService = containerIdService;
        /**
         * Hold the suffix for the ID
         */
        this.controlIdSuffix = 'abstract';
    }
    get id() {
        /**
         * The order of witch the id will be pick is:
         *   - Container ID  (Wrapper arround multiple Controls like, Checkbox, Radio, ...)
         *   - Control ID (Single Control wrapper like Input, Textarea, Password, ...)
         *   - None
         */
        if (this.containerIdService) {
            return `${this.containerIdService.id}-${this.controlIdSuffix}`;
        }
        if (this.controlIdService) {
            return `${this.controlIdService.id}-${this.controlIdSuffix}`;
        }
        return null;
    }
}
ClrAbstractControl.ɵfac = function ClrAbstractControl_Factory(t) { return new (t || ClrAbstractControl)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ControlIdService, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContainerIdService, 8)); };
ClrAbstractControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrAbstractControl });
ClrAbstractControl.ctorParameters = () => [
    { type: ControlIdService, decorators: [{ type: Optional }] },
    { type: ContainerIdService, decorators: [{ type: Optional }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrAbstractControl, [{
        type: Directive
    }], function () { return [{ type: ɵngcc1.ControlIdService, decorators: [{
                type: Optional
            }] }, { type: ɵngcc2.ContainerIdService, decorators: [{
                type: Optional
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtY29udHJvbC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL2Zvcm1zL2NvbW1vbi9hYnN0cmFjdC1jb250cm9sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDOzs7O0FBRXRFLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBcUM7QUFDaEUsSUFBRSxNQUFNLEVBQUUsUUFBUTtBQUNsQixJQUFFLEtBQUssRUFBRSxPQUFPO0FBQ2hCLElBQUUsT0FBTyxFQUFFLFNBQVM7QUFDcEIsSUFBRSxJQUFJLEVBQUUsSUFBSTtBQUNaLENBQUMsQ0FBQztBQUdGLE1BQU0sT0FBZ0Isa0JBQWtCO0FBQ3hDLElBS0UsWUFDd0IsZ0JBQWtDLEVBQ2xDLGtCQUFzQztBQUM3RCxRQUZ1QixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0FBQUMsUUFDbkMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtBQUNoRSxRQVJFO0FBQ0Y7QUFFQSxXQURLO0FBQ0wsUUFBUyxvQkFBZSxHQUFHLFVBQVUsQ0FBQztBQUN0QyxJQUlLLENBQUM7QUFDTixJQUNFLElBQVcsRUFBRTtBQUFLLFFBQ2hCO0FBQ0o7QUFDSTtBQUNJO0FBQ0k7QUFFSixXQUREO0FBQ1AsUUFBSSxJQUFJLElBQUksQ0FBQyxrQkFBa0IsRUFBRTtBQUNqQyxZQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztBQUNyRSxTQUFLO0FBQ0wsUUFDSSxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtBQUMvQixZQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztBQUNuRSxTQUFLO0FBQ0wsUUFDSSxPQUFPLElBQUksQ0FBQztBQUNoQixJQUFFLENBQUM7QUFDSDs4Q0E3QkMsU0FBUztpRkFDUjtBQUFDO0FBQ0MsWUFaSyxnQkFBZ0IsdUJBa0JwQixRQUFRO0FBQU8sWUFqQlgsa0JBQWtCLHVCQWtCdEIsUUFBUTtBQUFNOzs7Ozs7O2tDQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIxIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sSWRTZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvY29udHJvbC1pZC5zZXJ2aWNlJztcbmltcG9ydCB7IENvbnRhaW5lcklkU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2NvbnRhaW5lci1pZC5zZXJ2aWNlJztcblxuZXhwb3J0IGNvbnN0IENPTlRST0xfU1VGRklYOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB8IG51bGwgfSA9IHtcbiAgSEVMUEVSOiAnaGVscGVyJyxcbiAgRVJST1I6ICdlcnJvcicsXG4gIFNVQ0NFU1M6ICdzdWNjZXNzJyxcbiAgTk9ORTogbnVsbCxcbn07XG5cbkBEaXJlY3RpdmUoKVxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIENsckFic3RyYWN0Q29udHJvbCB7XG4gIC8qKlxuICAgKiBIb2xkIHRoZSBzdWZmaXggZm9yIHRoZSBJRFxuICAgKi9cbiAgcHVibGljIGNvbnRyb2xJZFN1ZmZpeCA9ICdhYnN0cmFjdCc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQE9wdGlvbmFsKCkgcHJvdGVjdGVkIGNvbnRyb2xJZFNlcnZpY2U6IENvbnRyb2xJZFNlcnZpY2UsXG4gICAgQE9wdGlvbmFsKCkgcHJvdGVjdGVkIGNvbnRhaW5lcklkU2VydmljZTogQ29udGFpbmVySWRTZXJ2aWNlXG4gICkge31cblxuICBwdWJsaWMgZ2V0IGlkKCk6IHN0cmluZyB7XG4gICAgLyoqXG4gICAgICogVGhlIG9yZGVyIG9mIHdpdGNoIHRoZSBpZCB3aWxsIGJlIHBpY2sgaXM6XG4gICAgICogICAtIENvbnRhaW5lciBJRCAgKFdyYXBwZXIgYXJyb3VuZCBtdWx0aXBsZSBDb250cm9scyBsaWtlLCBDaGVja2JveCwgUmFkaW8sIC4uLilcbiAgICAgKiAgIC0gQ29udHJvbCBJRCAoU2luZ2xlIENvbnRyb2wgd3JhcHBlciBsaWtlIElucHV0LCBUZXh0YXJlYSwgUGFzc3dvcmQsIC4uLilcbiAgICAgKiAgIC0gTm9uZVxuICAgICAqL1xuICAgIGlmICh0aGlzLmNvbnRhaW5lcklkU2VydmljZSkge1xuICAgICAgcmV0dXJuIGAke3RoaXMuY29udGFpbmVySWRTZXJ2aWNlLmlkfS0ke3RoaXMuY29udHJvbElkU3VmZml4fWA7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuY29udHJvbElkU2VydmljZSkge1xuICAgICAgcmV0dXJuIGAke3RoaXMuY29udHJvbElkU2VydmljZS5pZH0tJHt0aGlzLmNvbnRyb2xJZFN1ZmZpeH1gO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG59XG4iXX0=