/*
 * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export class NgControlService {
    constructor() {
        // Observable to subscribe to the control, since its not available immediately for projected content
        this._controlChanges = new Subject();
        this._helpers = new Subject();
    }
    get controlChanges() {
        return this._controlChanges.asObservable();
    }
    setControl(control) {
        this._controlChanges.next(control);
    }
    get helpersChange() {
        return this._helpers.asObservable();
    }
    setHelpers(state) {
        this._helpers.next(state);
    }
}
NgControlService.ɵfac = function NgControlService_Factory(t) { return new (t || NgControlService)(); };
NgControlService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgControlService, factory: NgControlService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgControlService, [{
        type: Injectable
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY29udHJvbC5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jbHItYW5ndWxhci9zcmMvZm9ybXMvY29tbW9uL3Byb3ZpZGVycy9uZy1jb250cm9sLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQWMsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQVUzQyxNQUFNLE9BQU8sZ0JBQWdCO0FBQzdCLElBRkE7QUFDRSxRQUNBLG9HQUFvRztBQUN0RyxRQUFVLG9CQUFlLEdBQXVCLElBQUksT0FBTyxFQUFhLENBQUM7QUFDekUsUUFRVSxhQUFRLEdBQXFCLElBQUksT0FBTyxFQUFFLENBQUM7QUFDckQsSUFRQSxDQUFDO0FBQ0QsSUFsQkUsSUFBSSxjQUFjO0FBQUssUUFDckIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxDQUFDO0FBQy9DLElBQUUsQ0FBQztBQUNILElBQ0UsVUFBVSxDQUFDLE9BQWtCO0FBQy9CLFFBQUksSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDdkMsSUFBRSxDQUFDO0FBQ0gsSUFHRSxJQUFJLGFBQWE7QUFBSyxRQUNwQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLENBQUM7QUFDeEMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxVQUFVLENBQUMsS0FBYztBQUMzQixRQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzlCLElBQUUsQ0FBQztBQUNIOzRDQXJCQyxVQUFVOzs7O2dEQUNUO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjEgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGludGVyZmFjZSBIZWxwZXJzIHtcbiAgc2hvdz86IGJvb2xlYW47XG4gIHNob3dJbnZhbGlkPzogYm9vbGVhbjtcbiAgc2hvd1ZhbGlkPzogYm9vbGVhbjtcbiAgc2hvd0hlbHBlcj86IGJvb2xlYW47XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBOZ0NvbnRyb2xTZXJ2aWNlIHtcbiAgLy8gT2JzZXJ2YWJsZSB0byBzdWJzY3JpYmUgdG8gdGhlIGNvbnRyb2wsIHNpbmNlIGl0cyBub3QgYXZhaWxhYmxlIGltbWVkaWF0ZWx5IGZvciBwcm9qZWN0ZWQgY29udGVudFxuICBwcml2YXRlIF9jb250cm9sQ2hhbmdlczogU3ViamVjdDxOZ0NvbnRyb2w+ID0gbmV3IFN1YmplY3Q8TmdDb250cm9sPigpO1xuICBnZXQgY29udHJvbENoYW5nZXMoKTogT2JzZXJ2YWJsZTxOZ0NvbnRyb2w+IHtcbiAgICByZXR1cm4gdGhpcy5fY29udHJvbENoYW5nZXMuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICBzZXRDb250cm9sKGNvbnRyb2w6IE5nQ29udHJvbCkge1xuICAgIHRoaXMuX2NvbnRyb2xDaGFuZ2VzLm5leHQoY29udHJvbCk7XG4gIH1cblxuICBwcml2YXRlIF9oZWxwZXJzOiBTdWJqZWN0PEhlbHBlcnM+ID0gbmV3IFN1YmplY3QoKTtcblxuICBnZXQgaGVscGVyc0NoYW5nZSgpOiBPYnNlcnZhYmxlPEhlbHBlcnM+IHtcbiAgICByZXR1cm4gdGhpcy5faGVscGVycy5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIHNldEhlbHBlcnMoc3RhdGU6IEhlbHBlcnMpIHtcbiAgICB0aGlzLl9oZWxwZXJzLm5leHQoc3RhdGUpO1xuICB9XG59XG4iXX0=