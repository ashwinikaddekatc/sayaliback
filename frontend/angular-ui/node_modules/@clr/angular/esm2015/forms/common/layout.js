/**
 * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input } from '@angular/core';
import { LayoutService } from './providers/layout.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './providers/layout.service';
export class ClrLayout {
    constructor(layoutService) {
        this.layoutService = layoutService;
    }
    ngOnInit() {
        // Only set the layout if it is a valid option
        if (this.layout && this.layoutService.isValid(this.layout)) {
            this.layoutService.layout = this.layout;
        }
    }
}
ClrLayout.ɵfac = function ClrLayout_Factory(t) { return new (t || ClrLayout)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LayoutService)); };
ClrLayout.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrLayout, selectors: [["", "clrForm", "", "clrLayout", ""]], inputs: { layout: ["clrLayout", "layout"] } });
ClrLayout.ctorParameters = () => [
    { type: LayoutService }
];
ClrLayout.propDecorators = {
    layout: [{ type: Input, args: ['clrLayout',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrLayout, [{
        type: Directive,
        args: [{
                selector: '[clrForm][clrLayout]'
            }]
    }], function () { return [{ type: ɵngcc1.LayoutService }]; }, { layout: [{
            type: Input,
            args: ['clrLayout']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jbHItYW5ndWxhci9zcmMvZm9ybXMvY29tbW9uL2xheW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQWlCLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUFLMUUsTUFBTSxPQUFPLFNBQVM7QUFBRyxJQUd2QixZQUFtQixhQUE0QjtBQUFJLFFBQWhDLGtCQUFhLEdBQWIsYUFBYSxDQUFlO0FBQUMsSUFBRSxDQUFDO0FBQ3JELElBQ0UsUUFBUTtBQUNWLFFBQUksOENBQThDO0FBQ2xELFFBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtBQUNoRSxZQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7QUFDOUMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNIO3FDQWRDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsc0JBQXNCLGVBQ2pDOytKQUNJO0FBQUM7QUFBbUMsWUFMakIsYUFBYTtBQUFHO0FBQUc7QUFBNkIscUJBTXJFLEtBQUssU0FBQyxXQUFXO0FBQU07Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMSBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDbHJGb3JtTGF5b3V0LCBMYXlvdXRTZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvbGF5b3V0LnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbY2xyRm9ybV1bY2xyTGF5b3V0XScsXG59KVxuZXhwb3J0IGNsYXNzIENsckxheW91dCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgnY2xyTGF5b3V0JykgbGF5b3V0OiBDbHJGb3JtTGF5b3V0IHwgc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBsYXlvdXRTZXJ2aWNlOiBMYXlvdXRTZXJ2aWNlKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIE9ubHkgc2V0IHRoZSBsYXlvdXQgaWYgaXQgaXMgYSB2YWxpZCBvcHRpb25cbiAgICBpZiAodGhpcy5sYXlvdXQgJiYgdGhpcy5sYXlvdXRTZXJ2aWNlLmlzVmFsaWQodGhpcy5sYXlvdXQpKSB7XG4gICAgICB0aGlzLmxheW91dFNlcnZpY2UubGF5b3V0ID0gdGhpcy5sYXlvdXQ7XG4gICAgfVxuICB9XG59XG4iXX0=