/**
 * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, Optional } from '@angular/core';
import { ClrAbstractControl, CONTROL_SUFFIX } from './abstract-control';
import { ContainerIdService } from './providers/container-id.service';
import { ControlIdService } from './providers/control-id.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './providers/control-id.service';
import * as ɵngcc2 from './providers/container-id.service';

const _c0 = ["*"];
export class ClrControlError extends ClrAbstractControl {
    constructor(controlIdService, containerIdService) {
        super(controlIdService, containerIdService);
        this.controlIdService = controlIdService;
        this.containerIdService = containerIdService;
        this.controlIdSuffix = CONTROL_SUFFIX.ERROR;
    }
}
ClrControlError.ɵfac = function ClrControlError_Factory(t) { return new (t || ClrControlError)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ControlIdService, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContainerIdService, 8)); };
ClrControlError.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrControlError, selectors: [["clr-control-error"]], hostVars: 3, hostBindings: function ClrControlError_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("id", ctx.id);
        ɵngcc0.ɵɵclassProp("clr-subtext", true);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ClrControlError_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
ClrControlError.ctorParameters = () => [
    { type: ControlIdService, decorators: [{ type: Optional }] },
    { type: ContainerIdService, decorators: [{ type: Optional }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrControlError, [{
        type: Component,
        args: [{
                selector: 'clr-control-error',
                template: ` <ng-content></ng-content> `,
                host: {
                    '[class.clr-subtext]': 'true',
                    '[attr.id]': 'id'
                }
            }]
    }], function () { return [{ type: ɵngcc1.ControlIdService, decorators: [{
                type: Optional
            }] }, { type: ɵngcc2.ContainerIdService, decorators: [{
                type: Optional
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nsci1hbmd1bGFyL3NyYy9mb3Jtcy9jb21tb24vZXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOzs7Ozs7QUFVbEUsTUFBTSxPQUFPLGVBQWdCLFNBQVEsa0JBQWtCO0FBQ3ZELElBRUUsWUFDd0IsZ0JBQWtDLEVBQ2xDLGtCQUFzQztBQUM3RCxRQUNDLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0FBQ2hELFFBSjBCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7QUFBQyxRQUNuQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0FBQ2hFLFFBTEUsb0JBQWUsR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDO0FBQ3pDLElBTUUsQ0FBQztBQUNIOzJDQWpCQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLG1CQUFtQixrQkFDN0IsUUFBUSxFQUFFLDZCQUE2QixrQkFDdkMsSUFBSSxFQUFFO0VBQ0oscUJBQXFCLEVBQUUsTUFBTSxzQkFDN0IsV0FBVyxFQUFFLElBQUksbUJBQ2xCLGNBQ0Y7Ozs7Ozs2QkFDSTtBQUFDO0FBQXlDLFlBVnRDLGdCQUFnQix1QkFjcEIsUUFBUTtBQUFPLFlBZlgsa0JBQWtCLHVCQWdCdEIsUUFBUTtBQUFNOzs7Ozs7Ozs7Ozs7Ozs7a0NBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjEgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsckFic3RyYWN0Q29udHJvbCwgQ09OVFJPTF9TVUZGSVggfSBmcm9tICcuL2Fic3RyYWN0LWNvbnRyb2wnO1xuaW1wb3J0IHsgQ29udGFpbmVySWRTZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvY29udGFpbmVyLWlkLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29udHJvbElkU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2NvbnRyb2wtaWQuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nsci1jb250cm9sLWVycm9yJyxcbiAgdGVtcGxhdGU6IGAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PiBgLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5jbHItc3VidGV4dF0nOiAndHJ1ZScsXG4gICAgJ1thdHRyLmlkXSc6ICdpZCcsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIENsckNvbnRyb2xFcnJvciBleHRlbmRzIENsckFic3RyYWN0Q29udHJvbCB7XG4gIGNvbnRyb2xJZFN1ZmZpeCA9IENPTlRST0xfU1VGRklYLkVSUk9SO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBPcHRpb25hbCgpIHByb3RlY3RlZCBjb250cm9sSWRTZXJ2aWNlOiBDb250cm9sSWRTZXJ2aWNlLFxuICAgIEBPcHRpb25hbCgpIHByb3RlY3RlZCBjb250YWluZXJJZFNlcnZpY2U6IENvbnRhaW5lcklkU2VydmljZVxuICApIHtcbiAgICBzdXBlcihjb250cm9sSWRTZXJ2aWNlLCBjb250YWluZXJJZFNlcnZpY2UpO1xuICB9XG59XG4iXX0=