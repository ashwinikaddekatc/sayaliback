/**
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, Input, Optional, Renderer2 } from '@angular/core';
import { NgControlService } from '../common/providers/ng-control.service';
import { LayoutService } from '../common/providers/layout.service';
import { ControlIdService } from '../common/providers/control-id.service';
import { ControlClassService } from '../common/providers/control-class.service';
import { ClrAbstractContainer } from '../common/abstract-container';
import { IfControlStateService } from '../common/if-control-state/if-control-state.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../common/providers/layout.service';
import * as ɵngcc2 from '../common/providers/control-class.service';
import * as ɵngcc3 from '../common/providers/ng-control.service';
import * as ɵngcc4 from '../common/providers/control-id.service';
import * as ɵngcc5 from '../common/if-control-state/if-control-state.service';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from '../common/label';
import * as ɵngcc8 from '../../icon/icon';

function ClrRangeContainer_label_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "label");
} }
function ClrRangeContainer_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 6);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("width", ctx_r1.getRangeProgressFillWidth());
} }
function ClrRangeContainer_cds_icon_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "cds-icon", 7);
} }
function ClrRangeContainer_cds_icon_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "cds-icon", 8);
} }
function ClrRangeContainer_ng_content_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 2, ["*ngIf", "showHelper"]);
} }
function ClrRangeContainer_ng_content_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 3, ["*ngIf", "showInvalid"]);
} }
function ClrRangeContainer_ng_content_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 4, ["*ngIf", "showValid"]);
} }
const _c0 = [[["label"]], [["", "clrRange", ""]], [["clr-control-helper"]], [["clr-control-error"]], [["clr-control-success"]]];
const _c1 = ["label", "[clrRange]", "clr-control-helper", "clr-control-error", "clr-control-success"];
export class ClrRangeContainer extends ClrAbstractContainer {
    constructor(layoutService, controlClassService, ngControlService, renderer, idService, ifControlStateService) {
        super(ifControlStateService, layoutService, controlClassService, ngControlService);
        this.renderer = renderer;
        this.idService = idService;
        this.ifControlStateService = ifControlStateService;
        this._hasProgress = false;
    }
    set hasProgress(val) {
        const valBool = !!val;
        if (valBool !== this._hasProgress) {
            this._hasProgress = valBool;
        }
    }
    get hasProgress() {
        return this._hasProgress;
    }
    getRangeProgressFillWidth() {
        const input = this.renderer.selectRootElement('[clrRange]#' + this.idService.id);
        const inputWidth = input.offsetWidth;
        const inputMinValue = +input.min;
        let inputMaxValue = +input.max;
        if (inputMinValue === 0 && inputMaxValue === 0) {
            inputMaxValue = 100;
        }
        const inputMiddle = (inputMinValue + inputMaxValue) / 2;
        const inputValue = !!this.control && this.control.value !== undefined ? this.control.value : inputMiddle;
        const valueAsPercent = ((inputValue - inputMinValue) * 100) / (inputMaxValue - inputMinValue);
        return (valueAsPercent * inputWidth) / 100 + 'px';
    }
}
ClrRangeContainer.ɵfac = function ClrRangeContainer_Factory(t) { return new (t || ClrRangeContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LayoutService, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ControlClassService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControlService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ControlIdService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.IfControlStateService)); };
ClrRangeContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrRangeContainer, selectors: [["clr-range-container"]], hostVars: 6, hostBindings: function ClrRangeContainer_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("clr-form-control", true)("clr-form-control-disabled", ctx.control == null ? null : ctx.control.disabled)("clr-row", ctx.addGrid());
    } }, inputs: { hasProgress: ["clrRangeHasProgress", "hasProgress"] }, features: [ɵngcc0.ɵɵProvidersFeature([IfControlStateService, NgControlService, ControlIdService, ControlClassService]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 11, vars: 10, consts: [[4, "ngIf"], [1, "clr-control-container", 3, "ngClass"], [1, "clr-range-wrapper"], ["class", "fill-input", 3, "width", 4, "ngIf"], ["class", "clr-validate-icon", "status", "danger", "shape", "exclamation-circle", "aria-hidden", "true", 4, "ngIf"], ["class", "clr-validate-icon", "shape", "check-circle", "status", "success", "aria-hidden", "true", 4, "ngIf"], [1, "fill-input"], ["status", "danger", "shape", "exclamation-circle", "aria-hidden", "true", 1, "clr-validate-icon"], ["shape", "check-circle", "status", "success", "aria-hidden", "true", 1, "clr-validate-icon"]], template: function ClrRangeContainer_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵtemplate(1, ClrRangeContainer_label_1_Template, 1, 0, "label", 0);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵprojection(4, 1);
        ɵngcc0.ɵɵtemplate(5, ClrRangeContainer_span_5_Template, 1, 2, "span", 3);
        ɵngcc0.ɵɵtemplate(6, ClrRangeContainer_cds_icon_6_Template, 1, 0, "cds-icon", 4);
        ɵngcc0.ɵɵtemplate(7, ClrRangeContainer_cds_icon_7_Template, 1, 0, "cds-icon", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, ClrRangeContainer_ng_content_8_Template, 1, 0, "ng-content", 0);
        ɵngcc0.ɵɵtemplate(9, ClrRangeContainer_ng_content_9_Template, 1, 0, "ng-content", 0);
        ɵngcc0.ɵɵtemplate(10, ClrRangeContainer_ng_content_10_Template, 1, 0, "ng-content", 0);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.label && ctx.addGrid());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.controlClass());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("progress-fill", ctx.hasProgress);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasProgress);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showInvalid);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showValid);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showHelper);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showInvalid);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showValid);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgClass, ɵngcc7.ClrLabel, ɵngcc8.CdsIconCustomTag], encapsulation: 2 });
ClrRangeContainer.ctorParameters = () => [
    { type: LayoutService, decorators: [{ type: Optional }] },
    { type: ControlClassService },
    { type: NgControlService },
    { type: Renderer2 },
    { type: ControlIdService },
    { type: IfControlStateService }
];
ClrRangeContainer.propDecorators = {
    hasProgress: [{ type: Input, args: ['clrRangeHasProgress',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrRangeContainer, [{
        type: Component,
        args: [{
                selector: 'clr-range-container',
                template: `
    <ng-content select="label"></ng-content>
    <label *ngIf="!label && addGrid()"></label>
    <div class="clr-control-container" [ngClass]="controlClass()">
      <div class="clr-range-wrapper" [class.progress-fill]="hasProgress">
        <ng-content select="[clrRange]"></ng-content>
        <span *ngIf="hasProgress" class="fill-input" [style.width]="getRangeProgressFillWidth()"></span>
        <cds-icon
          *ngIf="showInvalid"
          class="clr-validate-icon"
          status="danger"
          shape="exclamation-circle"
          aria-hidden="true"
        ></cds-icon>
        <cds-icon
          *ngIf="showValid"
          class="clr-validate-icon"
          shape="check-circle"
          status="success"
          aria-hidden="true"
        ></cds-icon>
      </div>
      <ng-content select="clr-control-helper" *ngIf="showHelper"></ng-content>
      <ng-content select="clr-control-error" *ngIf="showInvalid"></ng-content>
      <ng-content select="clr-control-success" *ngIf="showValid"></ng-content>
    </div>
  `,
                host: {
                    '[class.clr-form-control]': 'true',
                    '[class.clr-form-control-disabled]': 'control?.disabled',
                    '[class.clr-row]': 'addGrid()'
                },
                providers: [IfControlStateService, NgControlService, ControlIdService, ControlClassService]
            }]
    }], function () { return [{ type: ɵngcc1.LayoutService, decorators: [{
                type: Optional
            }] }, { type: ɵngcc2.ControlClassService }, { type: ɵngcc3.NgControlService }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc4.ControlIdService }, { type: ɵngcc5.IfControlStateService }]; }, { hasProgress: [{
            type: Input,
            args: ['clrRangeHasProgress']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,