/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, ElementRef, HostListener } from '@angular/core';
import { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';
import { ClrDropdown } from './dropdown';
import { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './dropdown';
import * as ɵngcc2 from '../../utils/popover/providers/popover-toggle.service';
import * as ɵngcc3 from './providers/dropdown-focus-handler.service';
export class ClrDropdownTrigger {
    constructor(dropdown, toggleService, el, focusHandler) {
        this.toggleService = toggleService;
        this.isRootLevelToggle = true;
        // if the containing dropdown has a parent, then this is not the root level one
        if (dropdown.parent) {
            this.isRootLevelToggle = false;
        }
        focusHandler.trigger = el.nativeElement;
    }
    get active() {
        return this.toggleService.open;
    }
    onDropdownTriggerClick(event) {
        this.toggleService.toggleWithEvent(event);
    }
}
ClrDropdownTrigger.ɵfac = function ClrDropdownTrigger_Factory(t) { return new (t || ClrDropdownTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ClrDropdown), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ClrPopoverToggleService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.DropdownFocusHandler)); };
ClrDropdownTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrDropdownTrigger, selectors: [["", "clrDropdownTrigger", ""], ["", "clrDropdownToggle", ""]], hostVars: 10, hostBindings: function ClrDropdownTrigger_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ClrDropdownTrigger_click_HostBindingHandler($event) { return ctx.onDropdownTriggerClick($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-haspopup", "menu")("aria-expanded", ctx.active);
        ɵngcc0.ɵɵclassProp("dropdown-toggle", ctx.isRootLevelToggle)("dropdown-item", !ctx.isRootLevelToggle)("expandable", !ctx.isRootLevelToggle)("active", ctx.active);
    } } });
ClrDropdownTrigger.ctorParameters = () => [
    { type: ClrDropdown },
    { type: ClrPopoverToggleService },
    { type: ElementRef },
    { type: DropdownFocusHandler }
];
ClrDropdownTrigger.propDecorators = {
    onDropdownTriggerClick: [{ type: HostListener, args: ['click', ['$event'],] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrDropdownTrigger, [{
        type: Directive,
        args: [{
                // We support both selectors for legacy reasons
                selector: '[clrDropdownTrigger],[clrDropdownToggle]',
                host: {
                    '[class.dropdown-toggle]': 'isRootLevelToggle',
                    '[class.dropdown-item]': '!isRootLevelToggle',
                    '[class.expandable]': '!isRootLevelToggle',
                    '[class.active]': 'active',
                    '[attr.aria-haspopup]': '"menu"',
                    '[attr.aria-expanded]': 'active'
                }
            }]
    }], function () { return [{ type: ɵngcc1.ClrDropdown }, { type: ɵngcc2.ClrPopoverToggleService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.DropdownFocusHandler }]; }, { onDropdownTriggerClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tdHJpZ2dlci5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL3BvcG92ZXIvZHJvcGRvd24vZHJvcGRvd24tdHJpZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFcEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFFL0YsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN6QyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQzs7Ozs7QUFjbEYsTUFBTSxPQUFPLGtCQUFrQjtBQUMvQixJQUVFLFlBQ0UsUUFBcUIsRUFDYixhQUFzQyxFQUM5QyxFQUEyQixFQUMzQixZQUFrQztBQUNuQyxRQUhTLGtCQUFhLEdBQWIsYUFBYSxDQUF5QjtBQUFDLFFBSjFDLHNCQUFpQixHQUFHLElBQUksQ0FBQztBQUNsQyxRQU9JLCtFQUErRTtBQUNuRixRQUFJLElBQUksUUFBUSxDQUFDLE1BQU0sRUFBRTtBQUN6QixZQUFNLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7QUFDckMsU0FBSztBQUNMLFFBQUksWUFBWSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUMsYUFBYSxDQUFDO0FBQzVDLElBQUUsQ0FBQztBQUNILElBQ0UsSUFBSSxNQUFNO0FBQUssUUFDYixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDO0FBQ25DLElBQUUsQ0FBQztBQUNILElBRUUsc0JBQXNCLENBQUMsS0FBVTtBQUFJLFFBQ25DLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzlDLElBQUUsQ0FBQztBQUNIOzhDQXBDQyxTQUFTLFNBQUMsa0JBQ1QsK0NBQStDLGlCQUMvQyxRQUFRLEVBQUUsMENBQTBDLGtCQUNwRCxJQUFJLEVBQUUsc0JBQ0oseUJBQXlCLEVBQUUsbUJBQW1CO0FBQzlDLHVCQUF1QixFQUFFLG9CQUFvQixzQkFDN0Msb0JBQW9CLEVBQUUsb0JBQW9CLHNCQUMxQyxnQkFBZ0IsRUFBRSxRQUFRLHNCQUMxQixzQkFBc0IsRUFBRSxRQUFRLHNCQUNoQztNQUFzQixFQUFFLFFBQVEsbUJBQ2pDLGVBQ0Y7Ozs7V0FDSTtBQUFDO0FBQ1UsWUFoQlAsV0FBVztBQUFJLFlBRmYsdUJBQXVCO0FBQUksWUFGaEIsVUFBVTtBQUFJLFlBS3pCLG9CQUFvQjtBQUFHO0FBQUc7QUFBc0MscUNBa0N0RSxZQUFZLFNBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDO0FBQy9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IENsclBvcG92ZXJUb2dnbGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvcG9wb3Zlci9wcm92aWRlcnMvcG9wb3Zlci10b2dnbGUuc2VydmljZSc7XG5cbmltcG9ydCB7IENsckRyb3Bkb3duIH0gZnJvbSAnLi9kcm9wZG93bic7XG5pbXBvcnQgeyBEcm9wZG93bkZvY3VzSGFuZGxlciB9IGZyb20gJy4vcHJvdmlkZXJzL2Ryb3Bkb3duLWZvY3VzLWhhbmRsZXIuc2VydmljZSc7XG5cbkBEaXJlY3RpdmUoe1xuICAvLyBXZSBzdXBwb3J0IGJvdGggc2VsZWN0b3JzIGZvciBsZWdhY3kgcmVhc29uc1xuICBzZWxlY3RvcjogJ1tjbHJEcm9wZG93blRyaWdnZXJdLFtjbHJEcm9wZG93blRvZ2dsZV0nLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5kcm9wZG93bi10b2dnbGVdJzogJ2lzUm9vdExldmVsVG9nZ2xlJyxcbiAgICAnW2NsYXNzLmRyb3Bkb3duLWl0ZW1dJzogJyFpc1Jvb3RMZXZlbFRvZ2dsZScsXG4gICAgJ1tjbGFzcy5leHBhbmRhYmxlXSc6ICchaXNSb290TGV2ZWxUb2dnbGUnLFxuICAgICdbY2xhc3MuYWN0aXZlXSc6ICdhY3RpdmUnLFxuICAgICdbYXR0ci5hcmlhLWhhc3BvcHVwXSc6ICdcIm1lbnVcIicsXG4gICAgJ1thdHRyLmFyaWEtZXhwYW5kZWRdJzogJ2FjdGl2ZScsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIENsckRyb3Bkb3duVHJpZ2dlciB7XG4gIHB1YmxpYyBpc1Jvb3RMZXZlbFRvZ2dsZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgZHJvcGRvd246IENsckRyb3Bkb3duLFxuICAgIHByaXZhdGUgdG9nZ2xlU2VydmljZTogQ2xyUG9wb3ZlclRvZ2dsZVNlcnZpY2UsXG4gICAgZWw6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgIGZvY3VzSGFuZGxlcjogRHJvcGRvd25Gb2N1c0hhbmRsZXJcbiAgKSB7XG4gICAgLy8gaWYgdGhlIGNvbnRhaW5pbmcgZHJvcGRvd24gaGFzIGEgcGFyZW50LCB0aGVuIHRoaXMgaXMgbm90IHRoZSByb290IGxldmVsIG9uZVxuICAgIGlmIChkcm9wZG93bi5wYXJlbnQpIHtcbiAgICAgIHRoaXMuaXNSb290TGV2ZWxUb2dnbGUgPSBmYWxzZTtcbiAgICB9XG4gICAgZm9jdXNIYW5kbGVyLnRyaWdnZXIgPSBlbC5uYXRpdmVFbGVtZW50O1xuICB9XG5cbiAgZ2V0IGFjdGl2ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy50b2dnbGVTZXJ2aWNlLm9wZW47XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXG4gIG9uRHJvcGRvd25UcmlnZ2VyQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQge1xuICAgIHRoaXMudG9nZ2xlU2VydmljZS50b2dnbGVXaXRoRXZlbnQoZXZlbnQpO1xuICB9XG59XG4iXX0=