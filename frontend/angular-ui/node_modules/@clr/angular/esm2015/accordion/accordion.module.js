/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ClrIconModule } from '../icon/icon.module';
import { ClrAccordionPanel } from './accordion-panel';
import { ClrAccordionTitle } from './accordion-title';
import { ClrAccordionDescription } from './accordion-description';
import { ClrAccordion } from './accordion';
import { ClrAccordionContent } from './accordion-content';
import { AccordionOompaLoompa } from './chocolate/accordion-oompa-loompa';
import { AccordionWillyWonka } from './chocolate/accordion-willy-wonka';
import { angleIcon, checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';
import * as ɵngcc0 from '@angular/core';
const declarations = [
    ClrAccordion,
    ClrAccordionPanel,
    ClrAccordionTitle,
    ClrAccordionDescription,
    ClrAccordionContent,
    AccordionOompaLoompa,
    AccordionWillyWonka,
];
export class ClrAccordionModule {
    constructor() {
        ClarityIcons.addIcons(angleIcon, exclamationCircleIcon, checkCircleIcon);
    }
}
ClrAccordionModule.ɵfac = function ClrAccordionModule_Factory(t) { return new (t || ClrAccordionModule)(); };
ClrAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrAccordionModule });
ClrAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, ClrIconModule]] });
ClrAccordionModule.ctorParameters = () => [];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrAccordionModule, { declarations: function () { return [ClrAccordion,
        ClrAccordionPanel,
        ClrAccordionTitle,
        ClrAccordionDescription,
        ClrAccordionContent,
        AccordionOompaLoompa,
        AccordionWillyWonka]; }, imports: function () { return [CommonModule, ClrIconModule]; }, exports: function () { return [ClrAccordion,
        ClrAccordionPanel,
        ClrAccordionTitle,
        ClrAccordionDescription,
        ClrAccordionContent,
        AccordionOompaLoompa,
        AccordionWillyWonka]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrAccordionModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ClrIconModule],
                declarations: [...declarations],
                exports: [...declarations]
            }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL2FjY29yZGlvbi9hY2NvcmRpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLFlBQVksRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUVqRyxNQUFNLFlBQVksR0FBRztBQUNyQixJQUFFLFlBQVk7QUFDZCxJQUFFLGlCQUFpQjtBQUNuQixJQUFFLGlCQUFpQjtBQUNuQixJQUFFLHVCQUF1QjtBQUN6QixJQUFFLG1CQUFtQjtBQUNyQixJQUFFLG9CQUFvQjtBQUN0QixJQUFFLG1CQUFtQjtBQUNyQixDQUFDLENBQUM7QUFPRixNQUFNLE9BQU8sa0JBQWtCO0FBQy9CLElBQUU7QUFDRixRQUFJLFlBQVksQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLHFCQUFxQixFQUFFLGVBQWUsQ0FBQyxDQUFDO0FBQzdFLElBQUUsQ0FBQztBQUNIOzhDQVRDLFFBQVEsU0FBQyxrQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUU7UUFBYSxDQUFDLGtCQUN0QyxZQUFZLEVBQUUsQ0FBQyxHQUFHLFlBQVksQ0FBQyxrQkFDL0I7RUFBTyxFQUFFLENBQUMsR0FBRyxZQUFZLENBQUMsZUFDM0IsNERBQ0k7QUFBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUNXO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ2xySWNvbk1vZHVsZSB9IGZyb20gJy4uL2ljb24vaWNvbi5tb2R1bGUnO1xuaW1wb3J0IHsgQ2xyQWNjb3JkaW9uUGFuZWwgfSBmcm9tICcuL2FjY29yZGlvbi1wYW5lbCc7XG5pbXBvcnQgeyBDbHJBY2NvcmRpb25UaXRsZSB9IGZyb20gJy4vYWNjb3JkaW9uLXRpdGxlJztcbmltcG9ydCB7IENsckFjY29yZGlvbkRlc2NyaXB0aW9uIH0gZnJvbSAnLi9hY2NvcmRpb24tZGVzY3JpcHRpb24nO1xuaW1wb3J0IHsgQ2xyQWNjb3JkaW9uIH0gZnJvbSAnLi9hY2NvcmRpb24nO1xuaW1wb3J0IHsgQ2xyQWNjb3JkaW9uQ29udGVudCB9IGZyb20gJy4vYWNjb3JkaW9uLWNvbnRlbnQnO1xuaW1wb3J0IHsgQWNjb3JkaW9uT29tcGFMb29tcGEgfSBmcm9tICcuL2Nob2NvbGF0ZS9hY2NvcmRpb24tb29tcGEtbG9vbXBhJztcbmltcG9ydCB7IEFjY29yZGlvbldpbGx5V29ua2EgfSBmcm9tICcuL2Nob2NvbGF0ZS9hY2NvcmRpb24td2lsbHktd29ua2EnO1xuaW1wb3J0IHsgYW5nbGVJY29uLCBjaGVja0NpcmNsZUljb24sIENsYXJpdHlJY29ucywgZXhjbGFtYXRpb25DaXJjbGVJY29uIH0gZnJvbSAnQGNkcy9jb3JlL2ljb24nO1xuXG5jb25zdCBkZWNsYXJhdGlvbnMgPSBbXG4gIENsckFjY29yZGlvbixcbiAgQ2xyQWNjb3JkaW9uUGFuZWwsXG4gIENsckFjY29yZGlvblRpdGxlLFxuICBDbHJBY2NvcmRpb25EZXNjcmlwdGlvbixcbiAgQ2xyQWNjb3JkaW9uQ29udGVudCxcbiAgQWNjb3JkaW9uT29tcGFMb29tcGEsXG4gIEFjY29yZGlvbldpbGx5V29ua2EsXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBDbHJJY29uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbLi4uZGVjbGFyYXRpb25zXSxcbiAgZXhwb3J0czogWy4uLmRlY2xhcmF0aW9uc10sXG59KVxuZXhwb3J0IGNsYXNzIENsckFjY29yZGlvbk1vZHVsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIENsYXJpdHlJY29ucy5hZGRJY29ucyhhbmdsZUljb24sIGV4Y2xhbWF0aW9uQ2lyY2xlSWNvbiwgY2hlY2tDaXJjbGVJY29uKTtcbiAgfVxufVxuIl19