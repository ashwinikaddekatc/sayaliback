/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Inject } from '@angular/core';
import { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';
import * as ɵngcc0 from '@angular/core';
export class ClrStackContentInput {
    constructor(uniqueId) {
        this.uniqueId = uniqueId;
    }
}
ClrStackContentInput.ɵfac = function ClrStackContentInput_Factory(t) { return new (t || ClrStackContentInput)(ɵngcc0.ɵɵdirectiveInject(UNIQUE_ID)); };
ClrStackContentInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ClrStackContentInput, selectors: [["", "clrStackInput", ""]], hostVars: 3, hostBindings: function ClrStackContentInput_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-labelledby", ctx.uniqueId);
        ɵngcc0.ɵɵclassProp("clr-input", true);
    } } });
ClrStackContentInput.ctorParameters = () => [
    { type: String, decorators: [{ type: Inject, args: [UNIQUE_ID,] }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrStackContentInput, [{
        type: Directive,
        args: [{
                selector: '[clrStackInput]',
                host: {
                    '[class.clr-input]': 'true',
                    '[attr.aria-labelledby]': 'uniqueId'
                }
            }]
    }], function () { return [{ type: String, decorators: [{
                type: Inject,
                args: [UNIQUE_ID]
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2stY29udGVudC1pbnB1dC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL2RhdGEvc3RhY2stdmlldy9zdGFjay1jb250ZW50LWlucHV0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQzs7QUFTMUUsTUFBTSxPQUFPLG9CQUFvQjtBQUNqQyxJQUFFLFlBQXNDLFFBQWdCO0FBQUksUUFBcEIsYUFBUSxHQUFSLFFBQVEsQ0FBUTtBQUFDLElBQUUsQ0FBQztBQUM1RDtnREFUQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGlCQUFpQixrQkFDM0IsSUFBSSxFQUFFO01BQ0osbUJBQW1CLEVBQUUsTUFBTSxzQkFDM0Isd0JBQXdCLEVBQUUsVUFBVSxtQkFDckMsZUFDRjs7O1dBQ0k7QUFBQztBQUNVLHlDQUFELE1BQU0sU0FBQyxTQUFTO0FBQVE7Ozs7Ozs7Ozs7Ozs7a0NBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVTklRVUVfSUQgfSBmcm9tICcuLi8uLi91dGlscy9pZC1nZW5lcmF0b3IvaWQtZ2VuZXJhdG9yLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbY2xyU3RhY2tJbnB1dF0nLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5jbHItaW5wdXRdJzogJ3RydWUnLFxuICAgICdbYXR0ci5hcmlhLWxhYmVsbGVkYnldJzogJ3VuaXF1ZUlkJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyU3RhY2tDb250ZW50SW5wdXQge1xuICBjb25zdHJ1Y3RvcihASW5qZWN0KFVOSVFVRV9JRCkgcHVibGljIHVuaXF1ZUlkOiBzdHJpbmcpIHt9XG59XG4iXX0=