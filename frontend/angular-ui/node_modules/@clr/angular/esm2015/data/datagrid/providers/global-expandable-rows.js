/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Injectable } from '@angular/core';
import { DetailService } from './detail.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './detail.service';
export class ExpandableRowsCount {
    constructor(detailService) {
        this.detailService = detailService;
        this.expandableCount = 0;
    }
    register() {
        this.expandableCount++;
    }
    unregister() {
        this.expandableCount--;
    }
    /**
     * false means no rows with action
     * check if details are on, and disable rows entirely
     */
    get hasExpandableRow() {
        return !this.detailService.enabled && this.expandableCount > 0;
    }
}
ExpandableRowsCount.ɵfac = function ExpandableRowsCount_Factory(t) { return new (t || ExpandableRowsCount)(ɵngcc0.ɵɵinject(ɵngcc1.DetailService)); };
ExpandableRowsCount.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ExpandableRowsCount, factory: ExpandableRowsCount.ɵfac });
ExpandableRowsCount.ctorParameters = () => [
    { type: DetailService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ExpandableRowsCount, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.DetailService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLWV4cGFuZGFibGUtcm93cy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL2RhdGEvZGF0YWdyaWQvcHJvdmlkZXJzL2dsb2JhbC1leHBhbmRhYmxlLXJvd3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7OztBQUdqRCxNQUFNLE9BQU8sbUJBQW1CO0FBQ2hDLElBQUUsWUFBb0IsYUFBNEI7QUFBSSxRQUFoQyxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtBQUFDLFFBRXpDLG9CQUFlLEdBQUcsQ0FBQyxDQUFDO0FBQzlCLElBSHFELENBQUM7QUFDdEQsSUFHUyxRQUFRO0FBQ2pCLFFBQUksSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0FBQzNCLElBQUUsQ0FBQztBQUNILElBQ1MsVUFBVTtBQUNuQixRQUFJLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztBQUMzQixJQUFFLENBQUM7QUFDSCxJQUNFO0FBQ0Y7QUFDRTtBQUNFLE9BQUM7QUFDTCxJQUFFLElBQVcsZ0JBQWdCO0FBQUssUUFDOUIsT0FBTyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDO0FBQ25FLElBQUUsQ0FBQztBQUNIOytDQXJCQyxVQUFVO3lIQUNUO0FBQUM7QUFDVSxZQUpKLGFBQWE7QUFBRzs7OzhFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMTkgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEZXRhaWxTZXJ2aWNlIH0gZnJvbSAnLi9kZXRhaWwuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBFeHBhbmRhYmxlUm93c0NvdW50IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkZXRhaWxTZXJ2aWNlOiBEZXRhaWxTZXJ2aWNlKSB7fVxuXG4gIHByaXZhdGUgZXhwYW5kYWJsZUNvdW50ID0gMDtcblxuICBwdWJsaWMgcmVnaXN0ZXIoKSB7XG4gICAgdGhpcy5leHBhbmRhYmxlQ291bnQrKztcbiAgfVxuXG4gIHB1YmxpYyB1bnJlZ2lzdGVyKCkge1xuICAgIHRoaXMuZXhwYW5kYWJsZUNvdW50LS07XG4gIH1cblxuICAvKipcbiAgICogZmFsc2UgbWVhbnMgbm8gcm93cyB3aXRoIGFjdGlvblxuICAgKiBjaGVjayBpZiBkZXRhaWxzIGFyZSBvbiwgYW5kIGRpc2FibGUgcm93cyBlbnRpcmVseVxuICAgKi9cbiAgcHVibGljIGdldCBoYXNFeHBhbmRhYmxlUm93KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhdGhpcy5kZXRhaWxTZXJ2aWNlLmVuYWJsZWQgJiYgdGhpcy5leHBhbmRhYmxlQ291bnQgPiAwO1xuICB9XG59XG4iXX0=