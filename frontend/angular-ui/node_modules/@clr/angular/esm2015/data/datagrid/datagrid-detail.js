/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, ContentChild, HostListener } from '@angular/core';
import { DetailService } from './providers/detail.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { ClrDatagridDetailHeader } from './datagrid-detail-header';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './providers/detail.service';
import * as ɵngcc2 from '../../utils/i18n/common-strings.service';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../../utils/focus-trap/focus-trap.directive';

const _c0 = function () { return { strict: false }; };
function ClrDatagridDetail_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵprojection(3);
    ɵngcc0.ɵɵelementStart(4, "div", 2);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("clrFocusTrap", ɵngcc0.ɵɵpureFunction0(5, _c0))("id", ctx_r0.detailService.id);
    ɵngcc0.ɵɵattribute("aria-describedby", ctx_r0.header ? ctx_r0.header.titleId : "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.commonStrings.keys.detailPaneStart);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.commonStrings.keys.detailPaneEnd);
} }
const _c1 = ["*"];
export class ClrDatagridDetail {
    constructor(detailService, commonStrings) {
        this.detailService = detailService;
        this.commonStrings = commonStrings;
    }
    closeCheck() {
        this.detailService.close();
    }
}
ClrDatagridDetail.ɵfac = function ClrDatagridDetail_Factory(t) { return new (t || ClrDatagridDetail)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DetailService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ClrCommonStringsService)); };
ClrDatagridDetail.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDatagridDetail, selectors: [["clr-dg-detail"]], contentQueries: function ClrDatagridDetail_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ClrDatagridDetailHeader, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.header = _t.first);
    } }, hostVars: 2, hostBindings: function ClrDatagridDetail_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup.esc", function ClrDatagridDetail_keyup_esc_HostBindingHandler() { return ctx.closeCheck(); }, false, ɵngcc0.ɵɵresolveDocument);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("datagrid-detail-pane", true);
    } }, ngContentSelectors: _c1, decls: 1, vars: 1, consts: [["class", "datagrid-detail-pane-content", "role", "dialog", "aria-modal", "true", 3, "clrFocusTrap", "id", 4, "ngIf"], ["role", "dialog", "aria-modal", "true", 1, "datagrid-detail-pane-content", 3, "clrFocusTrap", "id"], [1, "clr-sr-only"]], template: function ClrDatagridDetail_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ClrDatagridDetail_div_0_Template, 6, 6, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.detailService.isOpen);
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.FocusTrapDirective], encapsulation: 2 });
ClrDatagridDetail.ctorParameters = () => [
    { type: DetailService },
    { type: ClrCommonStringsService }
];
ClrDatagridDetail.propDecorators = {
    header: [{ type: ContentChild, args: [ClrDatagridDetailHeader,] }],
    closeCheck: [{ type: HostListener, args: ['document:keyup.esc',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrDatagridDetail, [{
        type: Component,
        args: [{
                selector: 'clr-dg-detail',
                host: {
                    '[class.datagrid-detail-pane]': 'true'
                },
                // We put the *ngIf on the clrFocusTrap so it doesn't always exist on the page
                // have to test for presence of header for aria-describedby because it was causing unit tests to crash
                template: `
    <div
      [clrFocusTrap]="{ strict: false }"
      class="datagrid-detail-pane-content"
      *ngIf="detailService.isOpen"
      role="dialog"
      [id]="detailService.id"
      aria-modal="true"
      [attr.aria-describedby]="header ? header.titleId : ''"
    >
      <div class="clr-sr-only">{{ commonStrings.keys.detailPaneStart }}</div>
      <ng-content></ng-content>
      <div class="clr-sr-only">{{ commonStrings.keys.detailPaneEnd }}</div>
    </div>
  `
            }]
    }], function () { return [{ type: ɵngcc1.DetailService }, { type: ɵngcc2.ClrCommonStringsService }]; }, { closeCheck: [{
            type: HostListener,
            args: ['document:keyup.esc']
        }], header: [{
            type: ContentChild,
            args: [ClrDatagridDetailHeader]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtZGV0YWlsLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jbHItYW5ndWxhci9zcmMvZGF0YS9kYXRhZ3JpZC9kYXRhZ3JpZC1kZXRhaWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNsRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCbkUsTUFBTSxPQUFPLGlCQUFpQjtBQUM5QixJQUVFLFlBQW1CLGFBQTRCLEVBQVMsYUFBc0M7QUFBSSxRQUEvRSxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtBQUFDLFFBQVEsa0JBQWEsR0FBYixhQUFhLENBQXlCO0FBQUMsSUFBRSxDQUFDO0FBQ3BHLElBRUUsVUFBVTtBQUFLLFFBQ2IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUMvQixJQUFFLENBQUM7QUFDSDs2Q0FoQ0MsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxlQUFlLGtCQUN6QixJQUFJLEVBQUUsc0JBQ0osOEJBQThCLEVBQUUsTUFBTSxtQkFDdkM7Z0JBQ0QsOEVBQThFLGlCQUM5RTtXQUFzRyxpQkFDdEcsUUFBUSxFQUFFOzs7Ozs7O3FDQWNULGNBQ0Y7Ozs7OzttRkFDSTtBQUFDO0FBQ1UsWUE1QlAsYUFBYTtBQUFJLFlBQ2pCLHVCQUF1QjtBQUFHO0FBQUc7QUFBcUMscUJBMkJ4RSxZQUFZLFNBQUMsdUJBQXVCO0FBQU8seUJBSTNDLFlBQVksU0FBQyxvQkFBb0I7QUFDaEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5pbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEZXRhaWxTZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvZGV0YWlsLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9pMThuL2NvbW1vbi1zdHJpbmdzLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2xyRGF0YWdyaWREZXRhaWxIZWFkZXIgfSBmcm9tICcuL2RhdGFncmlkLWRldGFpbC1oZWFkZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjbHItZGctZGV0YWlsJyxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuZGF0YWdyaWQtZGV0YWlsLXBhbmVdJzogJ3RydWUnLFxuICB9LFxuICAvLyBXZSBwdXQgdGhlICpuZ0lmIG9uIHRoZSBjbHJGb2N1c1RyYXAgc28gaXQgZG9lc24ndCBhbHdheXMgZXhpc3Qgb24gdGhlIHBhZ2VcbiAgLy8gaGF2ZSB0byB0ZXN0IGZvciBwcmVzZW5jZSBvZiBoZWFkZXIgZm9yIGFyaWEtZGVzY3JpYmVkYnkgYmVjYXVzZSBpdCB3YXMgY2F1c2luZyB1bml0IHRlc3RzIHRvIGNyYXNoXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdlxuICAgICAgW2NsckZvY3VzVHJhcF09XCJ7IHN0cmljdDogZmFsc2UgfVwiXG4gICAgICBjbGFzcz1cImRhdGFncmlkLWRldGFpbC1wYW5lLWNvbnRlbnRcIlxuICAgICAgKm5nSWY9XCJkZXRhaWxTZXJ2aWNlLmlzT3BlblwiXG4gICAgICByb2xlPVwiZGlhbG9nXCJcbiAgICAgIFtpZF09XCJkZXRhaWxTZXJ2aWNlLmlkXCJcbiAgICAgIGFyaWEtbW9kYWw9XCJ0cnVlXCJcbiAgICAgIFthdHRyLmFyaWEtZGVzY3JpYmVkYnldPVwiaGVhZGVyID8gaGVhZGVyLnRpdGxlSWQgOiAnJ1wiXG4gICAgPlxuICAgICAgPGRpdiBjbGFzcz1cImNsci1zci1vbmx5XCI+e3sgY29tbW9uU3RyaW5ncy5rZXlzLmRldGFpbFBhbmVTdGFydCB9fTwvZGl2PlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgICAgPGRpdiBjbGFzcz1cImNsci1zci1vbmx5XCI+e3sgY29tbW9uU3RyaW5ncy5rZXlzLmRldGFpbFBhbmVFbmQgfX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyRGF0YWdyaWREZXRhaWwge1xuICBAQ29udGVudENoaWxkKENsckRhdGFncmlkRGV0YWlsSGVhZGVyKSBwdWJsaWMgaGVhZGVyOiBDbHJEYXRhZ3JpZERldGFpbEhlYWRlcjtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZGV0YWlsU2VydmljZTogRGV0YWlsU2VydmljZSwgcHVibGljIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlKSB7fVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2RvY3VtZW50OmtleXVwLmVzYycpXG4gIGNsb3NlQ2hlY2soKTogdm9pZCB7XG4gICAgdGhpcy5kZXRhaWxTZXJ2aWNlLmNsb3NlKCk7XG4gIH1cbn1cbiJdfQ==