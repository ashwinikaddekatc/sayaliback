/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component } from '@angular/core';
import { DetailService } from './providers/detail.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './providers/detail.service';
import * as ɵngcc2 from '../../utils/i18n/common-strings.service';
import * as ɵngcc3 from '../../utils/focus/focus-on-view-init/focus-on-view-init';
import * as ɵngcc4 from '../../icon/icon';

const _c0 = ["*"];
export class ClrDatagridDetailHeader {
    constructor(detailService, commonStrings) {
        this.detailService = detailService;
        this.commonStrings = commonStrings;
    }
    get titleId() {
        return `${this.detailService.id}-title`;
    }
}
ClrDatagridDetailHeader.ɵfac = function ClrDatagridDetailHeader_Factory(t) { return new (t || ClrDatagridDetailHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DetailService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ClrCommonStringsService)); };
ClrDatagridDetailHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ClrDatagridDetailHeader, selectors: [["clr-dg-detail-header"]], hostVars: 2, hostBindings: function ClrDatagridDetailHeader_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("datagrid-detail-header", true);
    } }, ngContentSelectors: _c0, decls: 5, vars: 2, consts: [["clrFocusOnViewInit", "", 1, "datagrid-detail-header-title", 3, "id"], [1, "datagrid-detail-pane-close"], ["type", "button", 1, "btn", "btn-link", 3, "click"], ["size", "24", "shape", "times"]], template: function ClrDatagridDetailHeader_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "button", 2);
        ɵngcc0.ɵɵlistener("click", function ClrDatagridDetailHeader_Template_button_click_3_listener() { return ctx.detailService.close(); });
        ɵngcc0.ɵɵelement(4, "cds-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("id", ctx.titleId);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵattribute("aria-label", ctx.commonStrings.keys.close);
    } }, directives: [ɵngcc3.ClrFocusOnViewInit, ɵngcc4.CdsIconCustomTag], encapsulation: 2 });
ClrDatagridDetailHeader.ctorParameters = () => [
    { type: DetailService },
    { type: ClrCommonStringsService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrDatagridDetailHeader, [{
        type: Component,
        args: [{
                selector: 'clr-dg-detail-header',
                host: {
                    '[class.datagrid-detail-header]': 'true'
                },
                template: `
    <div class="datagrid-detail-header-title" clrFocusOnViewInit [id]="titleId">
      <ng-content></ng-content>
    </div>
    <div class="datagrid-detail-pane-close">
      <button
        type="button"
        class="btn btn-link"
        (click)="detailService.close()"
        [attr.aria-label]="commonStrings.keys.close"
      >
        <cds-icon size="24" shape="times"></cds-icon>
      </button>
    </div>
  `
            }]
    }], function () { return [{ type: ɵngcc1.DetailService }, { type: ɵngcc2.ClrCommonStringsService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtZGV0YWlsLWhlYWRlci5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2xyLWFuZ3VsYXIvc3JjL2RhdGEvZGF0YWdyaWQvZGF0YWdyaWQtZGV0YWlsLWhlYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQzs7Ozs7Ozs7QUF1QmxGLE1BQU0sT0FBTyx1QkFBdUI7QUFDcEMsSUFJRSxZQUFtQixhQUE0QixFQUFTLGFBQXNDO0FBQUksUUFBL0Usa0JBQWEsR0FBYixhQUFhLENBQWU7QUFBQyxRQUFRLGtCQUFhLEdBQWIsYUFBYSxDQUF5QjtBQUFDLElBQUUsQ0FBQztBQUNwRyxJQUxFLElBQUksT0FBTztBQUNiLFFBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxRQUFRLENBQUM7QUFDNUMsSUFBRSxDQUFDO0FBQ0g7bURBekJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsc0JBQXNCLGtCQUNoQyxJQUFJLEVBQUUsc0JBQ0osZ0NBQWdDLEVBQUUsTUFBTSxtQkFDekM7YUFDRCxRQUFRLEVBQUU7OzhKQWNULGNBQ0Y7Ozs7Ozs7Ozs7Ozs7OzsrRkFDSTtBQUFDO0FBQ1UsWUF6QlAsYUFBYTtBQUFJLFlBQ2pCLHVCQUF1QjtBQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0hBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGV0YWlsU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2RldGFpbC5zZXJ2aWNlJztcbmltcG9ydCB7IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvaTE4bi9jb21tb24tc3RyaW5ncy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY2xyLWRnLWRldGFpbC1oZWFkZXInLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5kYXRhZ3JpZC1kZXRhaWwtaGVhZGVyXSc6ICd0cnVlJyxcbiAgfSxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiZGF0YWdyaWQtZGV0YWlsLWhlYWRlci10aXRsZVwiIGNsckZvY3VzT25WaWV3SW5pdCBbaWRdPVwidGl0bGVJZFwiPlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJkYXRhZ3JpZC1kZXRhaWwtcGFuZS1jbG9zZVwiPlxuICAgICAgPGJ1dHRvblxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgY2xhc3M9XCJidG4gYnRuLWxpbmtcIlxuICAgICAgICAoY2xpY2spPVwiZGV0YWlsU2VydmljZS5jbG9zZSgpXCJcbiAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJjb21tb25TdHJpbmdzLmtleXMuY2xvc2VcIlxuICAgICAgPlxuICAgICAgICA8Y2RzLWljb24gc2l6ZT1cIjI0XCIgc2hhcGU9XCJ0aW1lc1wiPjwvY2RzLWljb24+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ2xyRGF0YWdyaWREZXRhaWxIZWFkZXIge1xuICBnZXQgdGl0bGVJZCgpIHtcbiAgICByZXR1cm4gYCR7dGhpcy5kZXRhaWxTZXJ2aWNlLmlkfS10aXRsZWA7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZGV0YWlsU2VydmljZTogRGV0YWlsU2VydmljZSwgcHVibGljIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlKSB7fVxufVxuIl19