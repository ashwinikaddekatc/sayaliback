/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { circleIcon, ClarityIcons, dotCircleIcon, errorStandardIcon, successStandardIcon } from '@cds/core/icon';
import { ClrIconModule } from '../icon/icon.module';
import { ClrSpinnerModule } from '../progress/spinner/spinner.module';
import { ClrTimeline } from './timeline';
import { ClrTimelineStep } from './timeline-step';
import { ClrTimelineStepDescription } from './timeline-step-description';
import { ClrTimelineStepHeader } from './timeline-step-header';
import { ClrTimelineStepTitle } from './timeline-step-title';
import * as ɵngcc0 from '@angular/core';
const CLR_TIMELINE_DIRECTIVES = [
    ClrTimeline,
    ClrTimelineStep,
    ClrTimelineStepDescription,
    ClrTimelineStepHeader,
    ClrTimelineStepTitle,
];
export class ClrTimelineModule {
    constructor() {
        ClarityIcons.addIcons(circleIcon, dotCircleIcon, errorStandardIcon, successStandardIcon);
    }
}
ClrTimelineModule.ɵfac = function ClrTimelineModule_Factory(t) { return new (t || ClrTimelineModule)(); };
ClrTimelineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ClrTimelineModule });
ClrTimelineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, ClrIconModule, ClrSpinnerModule], ClrIconModule, ClrSpinnerModule] });
ClrTimelineModule.ctorParameters = () => [];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClrTimelineModule, { declarations: function () { return [ClrTimeline,
        ClrTimelineStep,
        ClrTimelineStepDescription,
        ClrTimelineStepHeader,
        ClrTimelineStepTitle]; }, imports: function () { return [CommonModule, ClrIconModule, ClrSpinnerModule]; }, exports: function () { return [ClrTimeline,
        ClrTimelineStep,
        ClrTimelineStepDescription,
        ClrTimelineStepHeader,
        ClrTimelineStepTitle, ClrIconModule, ClrSpinnerModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClrTimelineModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ClrIconModule, ClrSpinnerModule],
                exports: [...CLR_TIMELINE_DIRECTIVES, ClrIconModule, ClrSpinnerModule],
                declarations: [CLR_TIMELINE_DIRECTIVES]
            }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZWxpbmUubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9jbHItYW5ndWxhci9zcmMvdGltZWxpbmUvdGltZWxpbmUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFRLE1BQU0sZUFBZSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxpQkFBaUIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRWpILE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUV0RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN6RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFFN0QsTUFBTSx1QkFBdUIsR0FBZ0I7QUFDN0MsSUFBRSxXQUFXO0FBQ2IsSUFBRSxlQUFlO0FBQ2pCLElBQUUsMEJBQTBCO0FBQzVCLElBQUUscUJBQXFCO0FBQ3ZCLElBQUUsb0JBQW9CO0FBQ3RCLENBQUMsQ0FBQztBQU9GLE1BQU0sT0FBTyxpQkFBaUI7QUFDOUIsSUFBRTtBQUNGLFFBQUksWUFBWSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsYUFBYSxFQUFFLGlCQUFpQixFQUFFLG1CQUFtQixDQUFDLENBQUM7QUFDN0YsSUFBRSxDQUFDO0FBQ0g7NkNBVEMsUUFBUSxTQUFDLGtCQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRTtVQUFhLEVBQUUsZ0JBQWdCLENBQUMsa0JBQ3hELE9BQU8sRUFBRSxDQUFDLEdBQUc7SUFBdUIsRUFBRSxhQUFhLEVBQUUsZ0JBQWdCLENBQUMsa0JBQ3RFLFlBQVksRUFBRSxDQUFDLHVCQUF1QixDQUFDLGVBQ3hDLG9DQUNJO0FBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUNXO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNi0yMDIwIFZNd2FyZSwgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogVGhpcyBzb2Z0d2FyZSBpcyByZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZS5cbiAqIFRoZSBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGluIExJQ0VOU0UgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgcHJvamVjdC5cbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNpcmNsZUljb24sIENsYXJpdHlJY29ucywgZG90Q2lyY2xlSWNvbiwgZXJyb3JTdGFuZGFyZEljb24sIHN1Y2Nlc3NTdGFuZGFyZEljb24gfSBmcm9tICdAY2RzL2NvcmUvaWNvbic7XG5cbmltcG9ydCB7IENsckljb25Nb2R1bGUgfSBmcm9tICcuLi9pY29uL2ljb24ubW9kdWxlJztcbmltcG9ydCB7IENsclNwaW5uZXJNb2R1bGUgfSBmcm9tICcuLi9wcm9ncmVzcy9zcGlubmVyL3NwaW5uZXIubW9kdWxlJztcblxuaW1wb3J0IHsgQ2xyVGltZWxpbmUgfSBmcm9tICcuL3RpbWVsaW5lJztcbmltcG9ydCB7IENsclRpbWVsaW5lU3RlcCB9IGZyb20gJy4vdGltZWxpbmUtc3RlcCc7XG5pbXBvcnQgeyBDbHJUaW1lbGluZVN0ZXBEZXNjcmlwdGlvbiB9IGZyb20gJy4vdGltZWxpbmUtc3RlcC1kZXNjcmlwdGlvbic7XG5pbXBvcnQgeyBDbHJUaW1lbGluZVN0ZXBIZWFkZXIgfSBmcm9tICcuL3RpbWVsaW5lLXN0ZXAtaGVhZGVyJztcbmltcG9ydCB7IENsclRpbWVsaW5lU3RlcFRpdGxlIH0gZnJvbSAnLi90aW1lbGluZS1zdGVwLXRpdGxlJztcblxuY29uc3QgQ0xSX1RJTUVMSU5FX0RJUkVDVElWRVM6IFR5cGU8YW55PltdID0gW1xuICBDbHJUaW1lbGluZSxcbiAgQ2xyVGltZWxpbmVTdGVwLFxuICBDbHJUaW1lbGluZVN0ZXBEZXNjcmlwdGlvbixcbiAgQ2xyVGltZWxpbmVTdGVwSGVhZGVyLFxuICBDbHJUaW1lbGluZVN0ZXBUaXRsZSxcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIENsckljb25Nb2R1bGUsIENsclNwaW5uZXJNb2R1bGVdLFxuICBleHBvcnRzOiBbLi4uQ0xSX1RJTUVMSU5FX0RJUkVDVElWRVMsIENsckljb25Nb2R1bGUsIENsclNwaW5uZXJNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtDTFJfVElNRUxJTkVfRElSRUNUSVZFU10sXG59KVxuZXhwb3J0IGNsYXNzIENsclRpbWVsaW5lTW9kdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgQ2xhcml0eUljb25zLmFkZEljb25zKGNpcmNsZUljb24sIGRvdENpcmNsZUljb24sIGVycm9yU3RhbmRhcmRJY29uLCBzdWNjZXNzU3RhbmRhcmRJY29uKTtcbiAgfVxufVxuIl19