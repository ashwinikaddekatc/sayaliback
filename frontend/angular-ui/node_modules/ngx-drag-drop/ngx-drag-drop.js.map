{"version":3,"file":"ngx-drag-drop.js","sources":["ts/src/dnd-utils.ts","ts/src/dnd-state.ts","ts/src/dnd-draggable.directive.ts","ts/src/dnd-dropzone.directive.ts","ts/src/dnd-handle.directive.ts","ts/src/dnd.module.ts","ts/src/ngx-drag-drop.ts"],"names":[],"mappings":"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","sourcesContent":["import { DropEffect, EffectAllowed } from './dnd-types';\n\nexport interface DragDropData {\n  data?:any;\n  type?:string;\n}\n\nexport interface DndEvent extends DragEvent {\n  _dndUsingHandle?:boolean;\n  _dndDropzoneActive?:true;\n}\n\nexport type DndDragImageOffsetFunction = ( event:DragEvent, dragImage:Element ) => { x:number, y:number };\n\nexport const /** @type {?} */ DROP_EFFECTS = /** @type {?} */(( [ \"move\", \"copy\", \"link\" ] as DropEffect[]));\n\nexport const /** @type {?} */ CUSTOM_MIME_TYPE = \"application/x-dnd\";\nexport const /** @type {?} */ JSON_MIME_TYPE = \"application/json\";\nexport const /** @type {?} */ MSIE_MIME_TYPE = \"Text\";\n/**\n * @param {?} mimeType\n * @return {?}\n */\nfunction mimeTypeIsCustom( mimeType:string ) {\n\n  return mimeType.substr( 0, CUSTOM_MIME_TYPE.length ) === CUSTOM_MIME_TYPE;\n}\n/**\n * @param {?} event\n * @return {?}\n */\nexport function getWellKnownMimeType( event:DragEvent ):string | null {\n\n  const /** @type {?} */ types = event.dataTransfer.types;\n\n  // IE 9 workaround.\n  if( !types ) {\n\n    return MSIE_MIME_TYPE;\n  }\n\n  for( let /** @type {?} */ i = 0; i < types.length; i++ ) {\n\n    if( types[ i ] === MSIE_MIME_TYPE\n      || types[ i ] === JSON_MIME_TYPE\n      || mimeTypeIsCustom( types[ i ] ) ) {\n\n      return types[ i ];\n    }\n  }\n\n  return null;\n}\n/**\n * @param {?} event\n * @param {?} data\n * @param {?} effectAllowed\n * @return {?}\n */\nexport function setDragData( event:DragEvent, data:DragDropData, effectAllowed:EffectAllowed ):void {\n\n  // Internet Explorer and Microsoft Edge don't support custom mime types, see design doc:\n  // https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\n  const /** @type {?} */ mimeType = CUSTOM_MIME_TYPE + (data.type ? (\"-\" + data.type) : \"\");\n\n  const /** @type {?} */ dataString = JSON.stringify( data );\n\n  try {\n\n    event.dataTransfer.setData( mimeType, dataString );\n\n  }\n  catch( /** @type {?} */ e ) {\n\n    //   Setting a custom MIME type did not work, we are probably in IE or Edge.\n    try {\n\n      event.dataTransfer.setData( JSON_MIME_TYPE, dataString );\n\n    }\n    catch( /** @type {?} */ e ) {\n\n      //   We are in Internet Explorer and can only use the Text MIME type. Also note that IE\n      //   does not allow changing the cursor in the dragover event, therefore we have to choose\n      //   the one we want to display now by setting effectAllowed.\n      const /** @type {?} */ effectsAllowed = filterEffects( DROP_EFFECTS, effectAllowed );\n      event.dataTransfer.effectAllowed = effectsAllowed[ 0 ];\n\n      event.dataTransfer.setData( MSIE_MIME_TYPE, dataString );\n    }\n  }\n}\n/**\n * @param {?} event\n * @param {?} dragIsExternal\n * @return {?}\n */\nexport function getDropData( event:DragEvent, dragIsExternal:boolean ):DragDropData {\n\n  // check if the mime type is well known\n  const /** @type {?} */ mimeType = getWellKnownMimeType( event );\n\n  // drag did not originate from [dndDraggable]\n  if( dragIsExternal === true ) {\n\n    if( mimeType !== null\n      && mimeTypeIsCustom( mimeType ) ) {\n\n      // the type of content is well known and safe to handle\n      return JSON.parse( event.dataTransfer.getData( mimeType ) );\n    }\n\n    // the contained data is unknown, let user handle it\n    return {};\n  }\n\n  // the type of content is well known and safe to handle\n  return JSON.parse( event.dataTransfer.getData( mimeType ) );\n}\n/**\n * @param {?} effects\n * @param {?} allowed\n * @return {?}\n */\nexport function filterEffects( effects:DropEffect[], allowed:EffectAllowed | DropEffect ):DropEffect[] {\n\n  if( allowed === \"all\" ) {\n\n    return effects;\n  }\n\n  return effects.filter( function( effect ) {\n\n    return allowed.toLowerCase().indexOf( effect ) !== -1;\n  } );\n}\n/**\n * @param {?} parentElement\n * @param {?} childElement\n * @return {?}\n */\nexport function getDirectChildElement( parentElement:Element, childElement:Element ):Element | null {\n\n  let /** @type {?} */ directChild:Node = childElement;\n\n  while( directChild.parentNode !== parentElement ) {\n\n    // reached root node without finding given parent\n    if( !directChild.parentNode ) {\n\n      return null;\n    }\n\n    directChild = directChild.parentNode;\n  }\n\n  return /** @type {?} */(( directChild as Element));\n}\n/**\n * @param {?} event\n * @param {?} element\n * @param {?} horizontal\n * @return {?}\n */\nexport function shouldPositionPlaceholderBeforeElement( event:DragEvent, element:Element, horizontal:boolean ) {\n\n  const /** @type {?} */ bounds = element.getBoundingClientRect();\n\n  // If the pointer is in the upper half of the list item element,\n  // we position the placeholder before the list item, otherwise after it.\n  if( horizontal ) {\n\n    return (event.clientX < bounds.left + bounds.width / 2);\n  }\n\n  return (event.clientY < bounds.top + bounds.height / 2);\n}\n/**\n * @param {?} event\n * @param {?} dragImage\n * @return {?}\n */\nexport function calculateDragImageOffset( event:DragEvent, dragImage:Element ):{ x:number, y:number } {\n\n  const /** @type {?} */ dragImageComputedStyle = window.getComputedStyle( dragImage );\n  const /** @type {?} */ paddingTop = parseFloat( dragImageComputedStyle.paddingTop ) || 0;\n  const /** @type {?} */ paddingLeft = parseFloat( dragImageComputedStyle.paddingLeft ) || 0;\n  const /** @type {?} */ borderTop = parseFloat( dragImageComputedStyle.borderTopWidth ) || 0;\n  const /** @type {?} */ borderLeft = parseFloat( dragImageComputedStyle.borderLeftWidth ) || 0;\n\n  return {\n    x: event.offsetX + paddingLeft + borderLeft,\n    y: event.offsetY + paddingTop + borderTop\n  };\n}\n/**\n * @param {?} event\n * @param {?} dragImage\n * @param {?} offsetFunction\n * @return {?}\n */\nexport function setDragImage( event:DragEvent, dragImage:Element, offsetFunction:DndDragImageOffsetFunction ):void {\n\n  const /** @type {?} */ offset = offsetFunction( event, dragImage ) || {x: 0, y: 0};\n\n  ( /** @type {?} */((event.dataTransfer as any))).setDragImage( dragImage, offset.x, offset.y );\n}\n","import {\n  CUSTOM_MIME_TYPE,\n  DROP_EFFECTS,\n  filterEffects,\n  getWellKnownMimeType,\n  JSON_MIME_TYPE,\n  MSIE_MIME_TYPE\n} from './dnd-utils';\nimport { DropEffect, EffectAllowed } from './dnd-types';\n\nexport interface DndState {\n  isDragging:boolean;\n  dropEffect?:DropEffect;\n  effectAllowed?:EffectAllowed;\n  type?:string;\n}\n\nconst /** @type {?} */ _dndState:DndState = {\n  isDragging: false,\n  dropEffect: \"none\",\n  effectAllowed: \"all\",\n  type: undefined\n};\n/**\n * @param {?} event\n * @param {?} effectAllowed\n * @param {?} type\n * @return {?}\n */\nexport function startDrag( event:DragEvent, effectAllowed:EffectAllowed, type:string | undefined ) {\n\n  _dndState.isDragging = true;\n  _dndState.dropEffect = \"none\";\n  _dndState.effectAllowed = effectAllowed;\n  _dndState.type = type;\n\n  event.dataTransfer.effectAllowed = effectAllowed;\n}\n/**\n * @return {?}\n */\nexport function endDrag() {\n\n  _dndState.isDragging = false;\n  _dndState.dropEffect = undefined;\n  _dndState.effectAllowed = undefined;\n  _dndState.type = undefined;\n}\n/**\n * @param {?} event\n * @param {?} dropEffect\n * @return {?}\n */\nexport function setDropEffect( event:DragEvent, dropEffect:DropEffect ) {\n\n  if( _dndState.isDragging === true ) {\n\n    _dndState.dropEffect = dropEffect;\n  }\n\n  event.dataTransfer.dropEffect = dropEffect;\n}\n/**\n * @param {?} event\n * @param {?=} effectAllowed\n * @return {?}\n */\nexport function getDropEffect( event:DragEvent, effectAllowed?:EffectAllowed | DropEffect ):DropEffect {\n\n  let /** @type {?} */ effects = DROP_EFFECTS;\n\n  effects = filterEffects( effects, /** @type {?} */(( event.dataTransfer.effectAllowed as EffectAllowed)) );\n\n  if( _dndState.isDragging === true ) {\n\n    effects = filterEffects( effects, _dndState.effectAllowed );\n  }\n\n  if( effectAllowed ) {\n\n    effects = filterEffects( effects, effectAllowed );\n  }\n\n  // MacOS automatically filters dataTransfer.effectAllowed depending on the modifier keys,\n  // therefore the following modifier keys will only affect other operating systems.\n  if( effects.length === 0 ) {\n\n    return \"none\";\n  }\n\n  if( event.ctrlKey && effects.indexOf( \"copy\" ) !== -1 ) {\n\n    return \"copy\";\n  }\n\n  if( event.altKey && effects.indexOf( \"link\" ) !== -1 ) {\n\n    return \"link\";\n  }\n\n  return /** @type {?} */(( effects[ 0 ] as DropEffect));\n}\n/**\n * @param {?} event\n * @return {?}\n */\nexport function getDndType( event:DragEvent ):string | undefined {\n\n  if( _dndState.isDragging === true ) {\n\n    return _dndState.type;\n  }\n\n  const /** @type {?} */ mimeType = getWellKnownMimeType( event );\n\n  if( mimeType === null ) {\n\n    return undefined;\n  }\n\n  if( mimeType === MSIE_MIME_TYPE\n    || mimeType === JSON_MIME_TYPE ) {\n\n    return undefined;\n  }\n\n  return mimeType.substr( CUSTOM_MIME_TYPE.length + 1 ) || undefined;\n}\n/**\n * @return {?}\n */\nexport function isExternalDrag():boolean {\n\n  return _dndState.isDragging === false;\n}\n\nexport const /** @type {?} */ dndState:Readonly<DndState> = /** @type {?} */(( _dndState as Readonly<DndState>));\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport { calculateDragImageOffset, DndDragImageOffsetFunction, DndEvent, setDragData, setDragImage } from './dnd-utils';\nimport { DndHandleDirective } from './dnd-handle.directive';\nimport { dndState, endDrag, startDrag } from './dnd-state';\nimport { EffectAllowed } from './dnd-types';\nexport class DndDragImageRefDirective {\n/**\n * @param {?} parent\n * @param {?} elementRef\n */\nconstructor( parent:DndDraggableDirective,\n               elementRef:ElementRef ) {\n\n    parent.registerDragImage( elementRef );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: \"[dndDragImageRef]\"\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DndDraggableDirective, },\n{type: ElementRef, },\n];\n}\n\nfunction DndDragImageRefDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDndDragImageRefDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDndDragImageRefDirective.ctorParameters;\n}\n\nexport class DndDraggableDirective {\n\n  \n  dndDraggable:any;\n\n  \n  dndEffectAllowed:EffectAllowed = \"copy\";\n\n  \n  dndType?:string;\n\n  \n  dndDraggingClass = \"dndDragging\";\n\n  \n  dndDraggingSourceClass = \"dndDraggingSource\";\n\n  \n  dndDraggableDisabledClass = \"dndDraggableDisabled\";\n\n  \n  dndDragImageOffsetFunction:DndDragImageOffsetFunction = calculateDragImageOffset;\n\n  \n  readonly dndStart:EventEmitter<DragEvent> = new EventEmitter<DragEvent>();\n\n  \n  readonly dndEnd:EventEmitter<DragEvent> = new EventEmitter<DragEvent>();\n\n  \n  readonly dndMoved:EventEmitter<DragEvent> = new EventEmitter<DragEvent>();\n\n  \n  readonly dndCopied:EventEmitter<DragEvent> = new EventEmitter<DragEvent>();\n\n  \n  readonly dndLinked:EventEmitter<DragEvent> = new EventEmitter<DragEvent>();\n\n  \n  readonly dndCanceled:EventEmitter<DragEvent> = new EventEmitter<DragEvent>();\n\n  \n  draggable = true;\nprivate dndHandle?:DndHandleDirective;\nprivate dndDragImageElementRef?:ElementRef;\nprivate dragImage:Element;\n/**\n * @param {?} value\n * @return {?}\n */\nset dndDisableIf( value:boolean ) {\n\n    this.draggable = !value;\n\n    if( this.draggable ) {\n\n      this.renderer.removeClass( this.elementRef.nativeElement, this.dndDraggableDisabledClass );\n    }\n    else {\n\n      this.renderer.addClass( this.elementRef.nativeElement, this.dndDraggableDisabledClass );\n    }\n  }\n/**\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(\nprivate elementRef:ElementRef,\nprivate renderer:Renderer2 ) {\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDragStart( event:DndEvent ) {\n\n    if( this.draggable === false ) {\n\n      return false;\n    }\n\n    // check if there is dnd handle and if the dnd handle was used to start the drag\n    if( typeof this.dndHandle !== \"undefined\"\n      && typeof event._dndUsingHandle === \"undefined\" ) {\n\n      return false;\n    }\n\n    // initialize global state\n    startDrag( event, this.dndEffectAllowed, this.dndType );\n\n    setDragData( event, {data: this.dndDraggable, type: this.dndType}, dndState.effectAllowed );\n\n    this.determineDragImage();\n\n    // set dragging css class prior to setDragImage so styles are applied before\n    // TODO breaking change: add class to elementRef rather than drag image which could be another element\n    this.renderer.addClass( this.dragImage, this.dndDraggingClass );\n\n    // set custom dragimage if present\n    // set dragimage if drag is started from dndHandle\n    if( typeof this.dndDragImageElementRef !== \"undefined\"\n      || typeof event._dndUsingHandle !== \"undefined\" ) {\n\n      setDragImage( event, this.dragImage, this.dndDragImageOffsetFunction );\n    }\n\n    // add dragging source css class on first drag event\n    const /** @type {?} */ unregister = this.renderer.listen( this.elementRef.nativeElement, \"drag\", () => {\n\n      this.renderer.addClass( this.elementRef.nativeElement, this.dndDraggingSourceClass );\n      unregister();\n    } );\n\n    this.dndStart.emit( event );\n\n    event.stopPropagation();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDragEnd( event:DragEvent ) {\n\n    // get drop effect from custom stored state as its not reliable across browsers\n    const /** @type {?} */ dropEffect = dndState.dropEffect;\n\n    let /** @type {?} */ dropEffectEmitter:EventEmitter<DragEvent>;\n\n    switch( dropEffect ) {\n\n      case \"copy\":\n        dropEffectEmitter = this.dndCopied;\n        break;\n\n      case \"link\":\n        dropEffectEmitter = this.dndLinked;\n        break;\n\n      case \"move\":\n        dropEffectEmitter = this.dndMoved;\n        break;\n\n      default:\n        dropEffectEmitter = this.dndCanceled;\n        break;\n    }\n\n    dropEffectEmitter.emit( event );\n    this.dndEnd.emit( event );\n\n    // reset global state\n    endDrag();\n\n    this.renderer.removeClass( this.dragImage, this.dndDraggingClass );\n\n    // IE9 special hammering\n    window.setTimeout( () => {\n      this.renderer.removeClass( this.elementRef.nativeElement, this.dndDraggingSourceClass );\n    }, 0 );\n\n    event.stopPropagation();\n  }\n/**\n * @param {?} handle\n * @return {?}\n */\nregisterDragHandle( handle:DndHandleDirective | undefined ) {\n\n    this.dndHandle = handle;\n  }\n/**\n * @param {?} elementRef\n * @return {?}\n */\nregisterDragImage( elementRef:ElementRef | undefined ) {\n\n    this.dndDragImageElementRef = elementRef;\n  }\n/**\n * @return {?}\n */\nprivate determineDragImage() {\n\n    // evaluate custom drag image existence\n    if( typeof this.dndDragImageElementRef !== \"undefined\" ) {\n\n      this.dragImage = /** @type {?} */(( this.dndDragImageElementRef.nativeElement as Element));\n    }\n    else {\n\n      this.dragImage = this.elementRef.nativeElement;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: \"[dndDraggable]\"\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dndDraggable': [{ type: Input },],\n'dndEffectAllowed': [{ type: Input },],\n'dndType': [{ type: Input },],\n'dndDraggingClass': [{ type: Input },],\n'dndDraggingSourceClass': [{ type: Input },],\n'dndDraggableDisabledClass': [{ type: Input },],\n'dndDragImageOffsetFunction': [{ type: Input },],\n'dndStart': [{ type: Output },],\n'dndEnd': [{ type: Output },],\n'dndMoved': [{ type: Output },],\n'dndCopied': [{ type: Output },],\n'dndLinked': [{ type: Output },],\n'dndCanceled': [{ type: Output },],\n'draggable': [{ type: HostBinding, args: [\"attr.draggable\", ] },],\n'dndDisableIf': [{ type: Input },],\n'onDragStart': [{ type: HostListener, args: [\"dragstart\", [ \"$event\" ], ] },],\n'onDragEnd': [{ type: HostListener, args: [\"dragend\", [ \"$event\" ], ] },],\n};\n}\n\nfunction DndDraggableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDndDraggableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDndDraggableDirective.ctorParameters;\n/** @type {?} */\nDndDraggableDirective.propDecorators;\n/** @type {?} */\nDndDraggableDirective.prototype.dndDraggable;\n/** @type {?} */\nDndDraggableDirective.prototype.dndEffectAllowed;\n/** @type {?} */\nDndDraggableDirective.prototype.dndType;\n/** @type {?} */\nDndDraggableDirective.prototype.dndDraggingClass;\n/** @type {?} */\nDndDraggableDirective.prototype.dndDraggingSourceClass;\n/** @type {?} */\nDndDraggableDirective.prototype.dndDraggableDisabledClass;\n/** @type {?} */\nDndDraggableDirective.prototype.dndDragImageOffsetFunction;\n/** @type {?} */\nDndDraggableDirective.prototype.dndStart;\n/** @type {?} */\nDndDraggableDirective.prototype.dndEnd;\n/** @type {?} */\nDndDraggableDirective.prototype.dndMoved;\n/** @type {?} */\nDndDraggableDirective.prototype.dndCopied;\n/** @type {?} */\nDndDraggableDirective.prototype.dndLinked;\n/** @type {?} */\nDndDraggableDirective.prototype.dndCanceled;\n/** @type {?} */\nDndDraggableDirective.prototype.draggable;\n/** @type {?} */\nDndDraggableDirective.prototype.dndHandle;\n/** @type {?} */\nDndDraggableDirective.prototype.dndDragImageElementRef;\n/** @type {?} */\nDndDraggableDirective.prototype.dragImage;\n/** @type {?} */\nDndDraggableDirective.prototype.elementRef;\n/** @type {?} */\nDndDraggableDirective.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterViewInit,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport {\n  DndEvent,\n  DragDropData,\n  getDirectChildElement,\n  getDropData,\n  shouldPositionPlaceholderBeforeElement\n} from './dnd-utils';\nimport { getDndType, getDropEffect, isExternalDrag, setDropEffect } from './dnd-state';\nimport { DropEffect, EffectAllowed } from './dnd-types';\n\nexport interface DndDropEvent {\n  event:DragEvent;\n  dropEffect:DropEffect;\n  isExternal:boolean;\n  data?:any;\n  index?:number;\n  type?:any;\n}\nexport class DndPlaceholderRefDirective {\n/**\n * @param {?} elementRef\n */\nconstructor(\npublic readonly elementRef:ElementRef ) {\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: \"[dndPlaceholderRef]\"\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction DndPlaceholderRefDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDndPlaceholderRefDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDndPlaceholderRefDirective.ctorParameters;\n/** @type {?} */\nDndPlaceholderRefDirective.prototype.elementRef;\n}\n\nexport class DndDropzoneDirective implements AfterViewInit {\n\n  \n  dndDropzone?:string[];\n\n  \n  dndEffectAllowed:EffectAllowed;\n\n  \n  dndAllowExternal:boolean = false;\n\n  \n  dndHorizontal:boolean = false;\n\n  \n  dndDragoverClass:string = \"dndDragover\";\n\n  \n  dndDropzoneDisabledClass = \"dndDropzoneDisabled\";\n\n  \n  readonly dndDragover:EventEmitter<DragEvent> = new EventEmitter<DragEvent>();\n\n  \n  readonly dndDrop:EventEmitter<DndDropEvent> = new EventEmitter<DndDropEvent>();\nprivate readonly dndPlaceholderRef?:DndPlaceholderRefDirective;\nprivate placeholder:Element | null = null;\nprivate disabled:boolean = false;\n/**\n * @param {?} value\n * @return {?}\n */\nset dndDisableIf( value:boolean ) {\n\n    this.disabled = !!value;\n\n    if( this.disabled ) {\n\n      this.renderer.addClass( this.elementRef.nativeElement, this.dndDropzoneDisabledClass );\n    }\n    else {\n\n      this.renderer.removeClass( this.elementRef.nativeElement, this.dndDropzoneDisabledClass );\n    }\n  }\n/**\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(\nprivate elementRef:ElementRef,\nprivate renderer:Renderer2 ) {\n  }\n/**\n * @return {?}\n */\nngAfterViewInit():void {\n\n    this.placeholder = this.tryGetPlaceholder();\n\n    if( this.placeholder !== null ) {\n\n      this.placeholder.remove();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDragEnter( event:DndEvent ) {\n\n    // check if another dropzone is activated\n    if( event._dndDropzoneActive === true ) {\n\n      this.cleanupDragoverState();\n      return;\n    }\n\n    // set as active if the target element is inside this dropzone\n    if( typeof event._dndDropzoneActive === \"undefined\" ) {\n\n      const /** @type {?} */ newTarget = document.elementFromPoint( event.clientX, event.clientY );\n\n      if( this.elementRef.nativeElement.contains( newTarget ) ) {\n\n        event._dndDropzoneActive = true;\n      }\n    }\n\n    // check if this drag event is allowed to drop on this dropzone\n    const /** @type {?} */ type = getDndType( event );\n    if( this.isDropAllowed( type ) === false ) {\n\n      return;\n    }\n\n    // allow the dragenter\n    event.preventDefault();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDragOver( event:DragEvent ) {\n\n    // check if this drag event is allowed to drop on this dropzone\n    const /** @type {?} */ type = getDndType( event );\n    if( this.isDropAllowed( type ) === false ) {\n\n      return;\n    }\n\n    this.checkAndUpdatePlaceholderPosition( event );\n\n    const /** @type {?} */ dropEffect = getDropEffect( event, this.dndEffectAllowed );\n\n    if( dropEffect === \"none\" ) {\n\n      this.cleanupDragoverState();\n      return;\n    }\n\n    // allow the dragover\n    event.preventDefault();\n\n    // set the drop effect\n    setDropEffect( event, dropEffect );\n\n    this.dndDragover.emit( event );\n\n    this.renderer.addClass( this.elementRef.nativeElement, this.dndDragoverClass );\n\n    event.stopPropagation();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDrop( event:DragEvent ) {\n\n    try {\n\n      // check if this drag event is allowed to drop on this dropzone\n      const /** @type {?} */ type = getDndType( event );\n      if( this.isDropAllowed( type ) === false ) {\n\n        return;\n      }\n\n      const /** @type {?} */ data:DragDropData = getDropData( event, isExternalDrag() );\n\n      if( this.isDropAllowed( data.type ) === false ) {\n\n        return;\n      }\n\n      // signal custom drop handling\n      event.preventDefault();\n\n      const /** @type {?} */ dropEffect = getDropEffect( event );\n\n      setDropEffect( event, dropEffect );\n\n      if( dropEffect === \"none\" ) {\n\n        return;\n      }\n\n      const /** @type {?} */ dropIndex = this.getPlaceholderIndex();\n      this.dndDrop.emit( {\n        event: event,\n        dropEffect: dropEffect,\n        isExternal: isExternalDrag(),\n        data: data.data,\n        index: dropIndex,\n        type: type,\n      } );\n\n      event.stopPropagation();\n\n    }\n    finally {\n\n      this.cleanupDragoverState();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDragLeave( event:DndEvent ) {\n\n    // check if still inside this dropzone and not yet handled by another dropzone\n    if( typeof event._dndDropzoneActive === \"undefined\" ) {\n\n      const /** @type {?} */ newTarget = document.elementFromPoint( event.clientX, event.clientY );\n\n      if( this.elementRef.nativeElement.contains( newTarget ) ) {\n\n        event._dndDropzoneActive = true;\n        return;\n      }\n    }\n\n    this.cleanupDragoverState();\n\n    // cleanup drop effect when leaving dropzone\n    setDropEffect( event, \"none\" );\n  }\n/**\n * @return {?}\n */\nprivate tryGetPlaceholder():Element | null {\n\n    if( typeof this.dndPlaceholderRef !== \"undefined\" ) {\n\n      return /** @type {?} */(( this.dndPlaceholderRef.elementRef.nativeElement as Element));\n    }\n\n    // TODO nasty workaround needed because if ng-container / template is used @ContentChild() or DI will fail because\n    // of wrong context see angular bug https://github.com/angular/angular/issues/13517\n    return this.elementRef.nativeElement.querySelector( \"[dndPlaceholderRef]\" );\n  }\n/**\n * @param {?=} type\n * @return {?}\n */\nprivate isDropAllowed( type?:string ):boolean {\n\n    // dropzone is disabled -> deny it\n    if( this.disabled === true ) {\n\n      return false;\n    }\n\n    // if drag did not start from our directive\n    // and external drag sources are not allowed -> deny it\n    if( isExternalDrag() === true\n      && this.dndAllowExternal === false ) {\n\n      return false;\n    }\n\n    // no filtering by types -> allow it\n    if( !this.dndDropzone ) {\n\n      return true;\n    }\n\n    // no type set -> allow it\n    if( !type ) {\n\n      return true;\n    }\n\n    if( Array.isArray( this.dndDropzone ) === false ) {\n\n      throw new Error( \"dndDropzone: bound value to [dndDropzone] must be an array!\" );\n    }\n\n    // if dropzone contains type -> allow it\n    return this.dndDropzone.indexOf( type ) !== -1;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate checkAndUpdatePlaceholderPosition( event:DragEvent ):void {\n\n    if( this.placeholder === null ) {\n\n      return;\n    }\n\n    // make sure the placeholder is in the DOM\n    if( this.placeholder.parentNode !== this.elementRef.nativeElement ) {\n\n      this.renderer.appendChild( this.elementRef.nativeElement, this.placeholder );\n    }\n\n    // update the position if the event originates from a child element of the dropzone\n    const /** @type {?} */ directChild = getDirectChildElement( this.elementRef.nativeElement, /** @type {?} */(( event.target as Element)) );\n\n    // early exit if no direct child or direct child is placeholder\n    if( directChild === null\n      || directChild === this.placeholder ) {\n\n      return;\n    }\n\n    const /** @type {?} */ positionPlaceholderBeforeDirectChild = shouldPositionPlaceholderBeforeElement( event, directChild, this.dndHorizontal );\n\n    if( positionPlaceholderBeforeDirectChild ) {\n\n      // do insert before only if necessary\n      if( directChild.previousSibling !== this.placeholder ) {\n\n        this.renderer.insertBefore( this.elementRef.nativeElement, this.placeholder, directChild );\n      }\n    }\n    else {\n\n      // do insert after only if necessary\n      if( directChild.nextSibling !== this.placeholder ) {\n\n        this.renderer.insertBefore( this.elementRef.nativeElement, this.placeholder, directChild.nextSibling );\n      }\n    }\n  }\n/**\n * @return {?}\n */\nprivate getPlaceholderIndex():number | undefined {\n\n    if( this.placeholder === null ) {\n\n      return undefined;\n    }\n\n    const /** @type {?} */ element = /** @type {?} */(( this.elementRef.nativeElement as HTMLElement));\n\n    return Array.prototype.indexOf.call( element.children, this.placeholder );\n  }\n/**\n * @return {?}\n */\nprivate cleanupDragoverState() {\n\n    this.renderer.removeClass( this.elementRef.nativeElement, this.dndDragoverClass );\n\n    if( this.placeholder !== null ) {\n\n      this.placeholder.remove();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: \"[dndDropzone]\"\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dndDropzone': [{ type: Input },],\n'dndEffectAllowed': [{ type: Input },],\n'dndAllowExternal': [{ type: Input },],\n'dndHorizontal': [{ type: Input },],\n'dndDragoverClass': [{ type: Input },],\n'dndDropzoneDisabledClass': [{ type: Input },],\n'dndDragover': [{ type: Output },],\n'dndDrop': [{ type: Output },],\n'dndPlaceholderRef': [{ type: ContentChild, args: [DndPlaceholderRefDirective, ] },],\n'dndDisableIf': [{ type: Input },],\n'onDragEnter': [{ type: HostListener, args: [\"dragenter\", [ \"$event\" ], ] },],\n'onDragOver': [{ type: HostListener, args: [\"dragover\", [ \"$event\" ], ] },],\n'onDrop': [{ type: HostListener, args: [\"drop\", [ \"$event\" ], ] },],\n'onDragLeave': [{ type: HostListener, args: [\"dragleave\", [ \"$event\" ], ] },],\n};\n}\n\nfunction DndDropzoneDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDndDropzoneDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDndDropzoneDirective.ctorParameters;\n/** @type {?} */\nDndDropzoneDirective.propDecorators;\n/** @type {?} */\nDndDropzoneDirective.prototype.dndDropzone;\n/** @type {?} */\nDndDropzoneDirective.prototype.dndEffectAllowed;\n/** @type {?} */\nDndDropzoneDirective.prototype.dndAllowExternal;\n/** @type {?} */\nDndDropzoneDirective.prototype.dndHorizontal;\n/** @type {?} */\nDndDropzoneDirective.prototype.dndDragoverClass;\n/** @type {?} */\nDndDropzoneDirective.prototype.dndDropzoneDisabledClass;\n/** @type {?} */\nDndDropzoneDirective.prototype.dndDragover;\n/** @type {?} */\nDndDropzoneDirective.prototype.dndDrop;\n/** @type {?} */\nDndDropzoneDirective.prototype.dndPlaceholderRef;\n/** @type {?} */\nDndDropzoneDirective.prototype.placeholder;\n/** @type {?} */\nDndDropzoneDirective.prototype.disabled;\n/** @type {?} */\nDndDropzoneDirective.prototype.elementRef;\n/** @type {?} */\nDndDropzoneDirective.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\nimport { DndEvent } from './dnd-utils';\nimport { DndDraggableDirective } from './dnd-draggable.directive';\nexport class DndHandleDirective {\n\n  \n  draggable = true;\n/**\n * @param {?} parent\n */\nconstructor( parent:DndDraggableDirective ) {\n\n    parent.registerDragHandle( this );\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDragEvent( event:DndEvent ) {\n\n    event._dndUsingHandle = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: \"[dndHandle]\"\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DndDraggableDirective, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'draggable': [{ type: HostBinding, args: [\"attr.draggable\", ] },],\n'onDragEvent': [{ type: HostListener, args: [\"dragstart\", [ \"$event\" ], ] },{ type: HostListener, args: [\"dragend\", [ \"$event\" ], ] },],\n};\n}\n\nfunction DndHandleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDndHandleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDndHandleDirective.ctorParameters;\n/** @type {?} */\nDndHandleDirective.propDecorators;\n/** @type {?} */\nDndHandleDirective.prototype.draggable;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DndDraggableDirective, DndDragImageRefDirective } from './dnd-draggable.directive';\nimport { DndDropzoneDirective, DndPlaceholderRefDirective } from './dnd-dropzone.directive';\nimport { DndHandleDirective } from './dnd-handle.directive';\nexport class DndModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DndDraggableDirective,\n    DndDropzoneDirective,\n    DndHandleDirective,\n    DndPlaceholderRefDirective,\n    DndDragImageRefDirective\n  ],\n  exports: [\n    DndDraggableDirective,\n    DndDropzoneDirective,\n    DndHandleDirective,\n    DndPlaceholderRefDirective,\n    DndDragImageRefDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DndModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDndModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDndModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {DndDragImageOffsetFunction,DndDragImageRefDirective,DndDraggableDirective,DndDropEvent,DndPlaceholderRefDirective,DndDropzoneDirective,DndHandleDirective,DropEffect,EffectAllowed,DndModule} from './public_api';\n"]}