import { APP_ID, NgModule, NgZone, NO_ERRORS_SCHEMA, RendererFactory2, } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CanvasDomRendererFactory } from './canvas-dom-renderer';
import { EventManager, ɵDomSharedStylesHost as DomSharedStylesHost, } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
export class CanvasDomModule {
    // tslint:disable-next-line:typedef
    static forRoot(elements) {
        return {
            ngModule: CanvasDomModule,
        };
    }
}
CanvasDomModule.ɵfac = function CanvasDomModule_Factory(t) { return new (t || CanvasDomModule)(); };
CanvasDomModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CanvasDomModule });
CanvasDomModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: RendererFactory2,
            useClass: CanvasDomRendererFactory,
            deps: [EventManager, DomSharedStylesHost, APP_ID, NgZone]
        },
    ], imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CanvasDomModule, { imports: function () { return [CommonModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CanvasDomModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                providers: [
                    {
                        provide: RendererFactory2,
                        useClass: CanvasDomRendererFactory,
                        deps: [EventManager, DomSharedStylesHost, APP_ID, NgZone]
                    },
                ],
                schemas: [NO_ERRORS_SCHEMA]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FudmFzLWRvbS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2lydXN0bS9kZXYvZ2l0aHViL2FuZ3VsYXItY2FudmFzL3Byb2plY3RzL2FuZ3VsYXItY2FudmFzLWxpYi9zcmMvbGliL2NhbnZhcy1kb20ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxNQUFNLEVBQ04sUUFBUSxFQUNSLE1BQU0sRUFDTixnQkFBZ0IsRUFDaEIsZ0JBQWdCLEdBQ2pCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRSxPQUFPLEVBQ0wsWUFBWSxFQUNaLG9CQUFvQixJQUFJLG1CQUFtQixHQUM1QyxNQUFNLDJCQUEyQixDQUFDOztBQWNuQyxNQUFNLE9BQU8sZUFBZTtBQUM1QixJQUFFLG1DQUFtQztBQUNyQyxJQUFTLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBNEI7QUFDcEQsUUFBSSxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsZUFBZTtBQUMvQixTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDSDsyQ0FsQkMsUUFBUSxTQUFDLGtCQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVk7QUFBQyxrQkFDdkIsU0FBUyxFQUFFLHNCQUNUO0VBQ0UsT0FBTyxFQUFFLGdCQUFnQiwwQkFDekIsUUFBUTtDQUFFO2VBQXdCO0VBQ2xDLElBQUksRUFBRSxDQUFDLFlBQVksRUFBRSxtQkFBbUIsRUFBRTtFQUFNLEVBQUUsTUFBTSxDQUFDLHVCQUMxRCxtQkFDRjtDQUNELE9BQU8sRUFBRTtBQUFDLGdCQUFnQixDQUFDLGVBQzVCOzs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFQUF9JRCxcbiAgTmdNb2R1bGUsXG4gIE5nWm9uZSxcbiAgTk9fRVJST1JTX1NDSEVNQSxcbiAgUmVuZGVyZXJGYWN0b3J5Mixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ2FudmFzRG9tUmVuZGVyZXJGYWN0b3J5IH0gZnJvbSAnLi9jYW52YXMtZG9tLXJlbmRlcmVyJztcbmltcG9ydCB7XG4gIEV2ZW50TWFuYWdlcixcbiAgybVEb21TaGFyZWRTdHlsZXNIb3N0IGFzIERvbVNoYXJlZFN0eWxlc0hvc3QsXG59IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgTmdDb21wb25lbnRDbGFzcyB9IGZyb20gJy4vbWV0YWRhdGEvbWV0YWRhdGEtc3RvcmFnZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBSZW5kZXJlckZhY3RvcnkyLFxuICAgICAgdXNlQ2xhc3M6IENhbnZhc0RvbVJlbmRlcmVyRmFjdG9yeSxcbiAgICAgIGRlcHM6IFtFdmVudE1hbmFnZXIsIERvbVNoYXJlZFN0eWxlc0hvc3QsIEFQUF9JRCwgTmdab25lXSxcbiAgICB9LFxuICBdLFxuICBzY2hlbWFzOiBbTk9fRVJST1JTX1NDSEVNQV0sXG59KVxuZXhwb3J0IGNsYXNzIENhbnZhc0RvbU1vZHVsZSB7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTp0eXBlZGVmXG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdChlbGVtZW50czogTmdDb21wb25lbnRDbGFzc1tdKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBDYW52YXNEb21Nb2R1bGUsXG4gICAgfTtcbiAgfVxufVxuIl19