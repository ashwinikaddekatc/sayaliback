{"version":3,"file":"dynamic.directive.d.ts","sources":["dynamic.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentFactoryResolver, DoCheck, Injector, KeyValueChanges, KeyValueDiffers, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ComponentInjector } from './component-injector';\nimport { ComponentOutletInjectorDirective } from './component-outlet-injector.directive';\nexport declare type IOMapInfo = {\n    propName: string;\n    templateName: string;\n};\nexport declare type IOMappingList = IOMapInfo[];\nexport declare type KeyValueChangesAny = KeyValueChanges<any, any>;\nexport declare class DynamicDirective implements OnChanges, DoCheck, OnDestroy {\n    private _differs;\n    private _injector;\n    private _cfr;\n    private _componentInjectorType;\n    private _componentOutletInjector;\n    ndcDynamicInputs: {\n        [k: string]: any;\n    };\n    ngComponentOutletNdcDynamicInputs: {\n        [k: string]: any;\n    };\n    ndcDynamicOutputs: {\n        [k: string]: Function;\n    };\n    ngComponentOutletNdcDynamicOutputs: {\n        [k: string]: Function;\n    };\n    private _componentInjector;\n    private _lastComponentInst;\n    private _lastInputChanges;\n    private _inputsDiffer;\n    private _compFactory;\n    private _outputsShouldDisconnect$;\n    private readonly _inputs;\n    private readonly _outputs;\n    private readonly _compInjector;\n    private readonly _compRef;\n    private readonly _componentInst;\n    private readonly _componentInstChanged;\n    constructor(_differs: KeyValueDiffers, _injector: Injector, _cfr: ComponentFactoryResolver, _componentInjectorType: ComponentInjector, _componentOutletInjector: ComponentOutletInjectorDirective);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngDoCheck(): void;\n    ngOnDestroy(): void;\n    updateInputs(isFirstChange?: boolean): void;\n    bindOutputs(): void;\n    notifyOnInputChanges(changes: SimpleChanges, forceFirstChanges: boolean): void;\n    private _disconnectOutputs();\n    private _getInputsChanges(inputs);\n    private _updateInputChanges(differ);\n    private _collectFirstChanges();\n    private _collectChangesFromDiffer(differ);\n    private _inputsChanged(changes);\n    private _outputsChanged(changes);\n    private _resolveCompFactory();\n    private _updateCompFactory();\n    private _resolveInputs(inputs);\n    private _resolveOutputs(outputs);\n    private _resolveChanges(changes);\n    private _remapIO(io, mapping);\n    private _findPropByTplInMapping(tplName, mapping);\n}\n"]}